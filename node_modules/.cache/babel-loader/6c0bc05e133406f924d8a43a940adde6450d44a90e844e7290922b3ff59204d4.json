{"ast":null,"code":"var _jsxFileName = \"/Users/vinayyadav/Movies/pnc/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nrequire('isomorphic-fetch');\nvar Dropbox = require('dropbox').Dropbox;\nconst accessToken = 'sl.BTM8p1hUryxLBE7t78zRbtqGQcxqXTXxED0-htBMWx8jYshBX0HCWmXPyqacpwtqwDkwHVazHw7AmMFVLxZpuXPEENcTC0Gekm7rkcaAVu7-Qij0sMqM6lpZUpp6VbQPSYdP_UDuVQEr';\nvar dbx = new Dropbox({\n  accessToken\n});\nconst getSharableLink = async item => {\n  const shareablelink = await dbx.sharingCreateSharedLinkWithSettings({\n    path: item.path_lower\n  });\n  console.log(shareablelink);\n};\nconst renderDropBoxList = async () => {\n  // Create an instance of Dropbox with the access token and use it to\n  // fetch and render the files in the users root directory.\n\n  const searchedFile = await dbx.filesSearchV2({\n    query: \"Smile\"\n  });\n  return searchedFile.result.matches;\n  const response = await dbx.filesListFolder({\n    path: '/amazon primevideo/movies'\n  });\n  return response.result.entries;\n};\nfunction App() {\n  _s();\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    renderDropBoxList().then(v => {\n      setList(v);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"Dashboard\", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map(item => {\n        console.log(item.metadata.metadata.path_lower);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", item.metadata.metadata.path_lower, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => getSharableLink(item.metadata.metadata),\n            children: \" Get Link \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 7\n          }, this)]\n        }, item.metadata.metadata.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 14\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mo3wxvns+52yWT3GI5PbrxgLw68=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","require","Dropbox","accessToken","dbx","getSharableLink","item","shareablelink","sharingCreateSharedLinkWithSettings","path","path_lower","console","log","renderDropBoxList","searchedFile","filesSearchV2","query","result","matches","response","filesListFolder","entries","App","list","setList","then","v","map","metadata","id"],"sources":["/Users/vinayyadav/Movies/pnc/src/App.js"],"sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\nrequire('isomorphic-fetch');\nvar Dropbox = require('dropbox').Dropbox;\n\n\nconst accessToken = 'sl.BTM8p1hUryxLBE7t78zRbtqGQcxqXTXxED0-htBMWx8jYshBX0HCWmXPyqacpwtqwDkwHVazHw7AmMFVLxZpuXPEENcTC0Gekm7rkcaAVu7-Qij0sMqM6lpZUpp6VbQPSYdP_UDuVQEr'\nvar dbx = new Dropbox({ accessToken });\n\nconst getSharableLink = async(item) => {\n   const shareablelink = await dbx.sharingCreateSharedLinkWithSettings({path:item.path_lower})\n   console.log(shareablelink);\n}\nconst renderDropBoxList = async ()=> {\n\n  // Create an instance of Dropbox with the access token and use it to\n  // fetch and render the files in the users root directory.\n  \n  const searchedFile = await dbx.filesSearchV2({query:\"Smile\"})\n   return (searchedFile.result.matches);\n  \n   const response = await dbx.filesListFolder({path: '/amazon primevideo/movies'})\n  \n   return response.result.entries;\n    \n}\n\n  function App () {\n    const [list,setList] = useState([])\n    \n    useEffect(() => {\n      renderDropBoxList().then((v) => {\n        setList(v);\n      });\n    },[]);\n\n  return (\n    <div className=\"App\">\n        Dashboard\n    <ul>\n    {list.map( item => {\n      console.log(item.metadata.metadata.path_lower);\n      return <li key={item.metadata.metadata.id}> {item.metadata.metadata.path_lower}\n      <button onClick={() => getSharableLink(item.metadata.metadata)}> Get Link </button>\n      </li>\n    } )}\n    </ul>\n\n    \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAC5CC,OAAO,CAAC,kBAAkB,CAAC;AAC3B,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC,CAACC,OAAO;AAGxC,MAAMC,WAAW,GAAG,iJAAiJ;AACrK,IAAIC,GAAG,GAAG,IAAIF,OAAO,CAAC;EAAEC;AAAY,CAAC,CAAC;AAEtC,MAAME,eAAe,GAAG,MAAMC,IAAI,IAAK;EACpC,MAAMC,aAAa,GAAG,MAAMH,GAAG,CAACI,mCAAmC,CAAC;IAACC,IAAI,EAACH,IAAI,CAACI;EAAU,CAAC,CAAC;EAC3FC,OAAO,CAACC,GAAG,CAACL,aAAa,CAAC;AAC7B,CAAC;AACD,MAAMM,iBAAiB,GAAG,YAAW;EAEnC;EACA;;EAEA,MAAMC,YAAY,GAAG,MAAMV,GAAG,CAACW,aAAa,CAAC;IAACC,KAAK,EAAC;EAAO,CAAC,CAAC;EAC5D,OAAQF,YAAY,CAACG,MAAM,CAACC,OAAO;EAEnC,MAAMC,QAAQ,GAAG,MAAMf,GAAG,CAACgB,eAAe,CAAC;IAACX,IAAI,EAAE;EAA2B,CAAC,CAAC;EAE/E,OAAOU,QAAQ,CAACF,MAAM,CAACI,OAAO;AAEjC,CAAC;AAEC,SAASC,GAAG,GAAI;EAAA;EACd,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACdc,iBAAiB,EAAE,CAACY,IAAI,CAAEC,CAAC,IAAK;MAC9BF,OAAO,CAACE,CAAC,CAAC;IACZ,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;EAEP,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,qCAEpB;MAAA,UACCH,IAAI,CAACI,GAAG,CAAErB,IAAI,IAAI;QACjBK,OAAO,CAACC,GAAG,CAACN,IAAI,CAACsB,QAAQ,CAACA,QAAQ,CAAClB,UAAU,CAAC;QAC9C,oBAAO;UAAA,gBAAsCJ,IAAI,CAACsB,QAAQ,CAACA,QAAQ,CAAClB,UAAU,eAC9E;YAAQ,OAAO,EAAE,MAAML,eAAe,CAACC,IAAI,CAACsB,QAAQ,CAACA,QAAQ,CAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAoB;QAAA,GADnEtB,IAAI,CAACsB,QAAQ,CAACA,QAAQ,CAACC,EAAE;UAAA;UAAA;UAAA;QAAA,QAEpC;MACP,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QAGC;AAEV;AAAC,GAxBUP,GAAG;AAAA,KAAHA,GAAG;AA0Bd,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}