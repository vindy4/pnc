{"ast":null,"code":"var _jsxFileName = \"/Users/vinayyadav/Movies/pnc/src/Imdb.js\",\n  _s = $RefreshSig$();\nimport imdb from \"imdb-api\";\nimport \"./App.css\";\nimport React, { useState, useCallback } from \"react\";\nimport { Button, TextField, Alert, Card } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nrequire(\"isomorphic-fetch\");\nvar Dropbox = require(\"dropbox\").Dropbox;\nconst accessToken = \"sl.BTRBWaeluM0rSLZ4O39qLcapVUj4n3AIQsJwwLNkg-7vdK5lNdH9AfIFsGLIbPpAQXdjIvto4NybFu66evIPplQVMJ-Scn1R7oLQJ4nFVN5JY4m-Bjht96p6LXl5MBbrL0DgNqEUiWEJ\";\nvar dbx = new Dropbox({\n  accessToken\n});\nconst getVideo = async item => {\n  const shareablelink = await dbx.sharingCreateSharedLinkWithSettings({\n    path: item.path_lower\n  });\n  console.log(shareablelink);\n};\nfunction DropboxContainer() {\n  _s();\n  const [list, setList] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [selectedResource, setSelectedResource] = useState(null);\n  const onChange = e => {\n    const value = e.target.value;\n    if (value) {\n      setLoading(true);\n      dbx.filesSearchV2({\n        query: value\n      }).then(resp => {\n        const responseList = resp.result.matches.map(item => {\n          return item.metadata.metadata;\n        });\n        console.log(responseList, \"responseList\");\n        const onlyFiles = responseList.filter(li => li[\".tag\"] === \"file\");\n        console.log(onlyFiles.length, \"only files\");\n        setList(onlyFiles);\n        setLoading(false);\n      }).catch(e => {\n        setError(e.message);\n        setLoading(false);\n      });\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: [error, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"outlined\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"Heading\",\n      children: \"IMDB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"search-movie-tv\",\n        label: \"Imdb ID\",\n        variant: \"standard\",\n        sx: {\n          width: 400\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(DropboxContainer, \"/9jDh5bThVHvGWPBDNHCuTbnJp4=\");\n_c = DropboxContainer;\nexport default DropboxContainer;\nvar _c;\n$RefreshReg$(_c, \"DropboxContainer\");","map":{"version":3,"names":["imdb","React","useState","useCallback","Button","TextField","Alert","Card","require","Dropbox","accessToken","dbx","getVideo","item","shareablelink","sharingCreateSharedLinkWithSettings","path","path_lower","console","log","DropboxContainer","list","setList","error","setError","loading","setLoading","selectedResource","setSelectedResource","onChange","e","value","target","filesSearchV2","query","then","resp","responseList","result","matches","map","metadata","onlyFiles","filter","li","length","catch","message","width"],"sources":["/Users/vinayyadav/Movies/pnc/src/Imdb.js"],"sourcesContent":["import imdb from \"imdb-api\";\nimport \"./App.css\";\nimport React, { useState, useCallback } from \"react\";\nimport { Button, TextField, Alert, Card } from \"@mui/material\";\n\nrequire(\"isomorphic-fetch\");\nvar Dropbox = require(\"dropbox\").Dropbox;\n\nconst accessToken =\n  \"sl.BTRBWaeluM0rSLZ4O39qLcapVUj4n3AIQsJwwLNkg-7vdK5lNdH9AfIFsGLIbPpAQXdjIvto4NybFu66evIPplQVMJ-Scn1R7oLQJ4nFVN5JY4m-Bjht96p6LXl5MBbrL0DgNqEUiWEJ\";\nvar dbx = new Dropbox({ accessToken });\n\nconst getVideo = async (item) => {\n  const shareablelink = await dbx.sharingCreateSharedLinkWithSettings({\n    path: item.path_lower,\n  });\n  console.log(shareablelink);\n};\n\nfunction DropboxContainer() {\n  const [list, setList] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [selectedResource, setSelectedResource] = useState(null);\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value) {\n      setLoading(true);\n      dbx\n        .filesSearchV2({ query: value })\n        .then((resp) => {\n          const responseList = resp.result.matches.map((item) => {\n            return item.metadata.metadata;\n          });\n          console.log(responseList, \"responseList\");\n          const onlyFiles = responseList.filter((li) => li[\".tag\"] === \"file\");\n          console.log(onlyFiles.length, \"only files\");\n          setList(onlyFiles);\n          setLoading(false);\n        })\n        .catch((e) => {\n          setError(e.message);\n          setLoading(false);\n        });\n    }\n  };\n\n  if (error) {\n    return <Alert severity=\"error\">{error}!</Alert>;\n  }\n\n  return (\n    <Card variant=\"outlined\">\n      <h2 className=\"Heading\">IMDB</h2>\n      <div>\n        <TextField\n          id=\"search-movie-tv\"\n          label=\"Imdb ID\"\n          variant=\"standard\"\n          sx={{ width: 400 }}\n        />\n      </div>\n    </Card>\n  );\n}\n\nexport default DropboxContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}