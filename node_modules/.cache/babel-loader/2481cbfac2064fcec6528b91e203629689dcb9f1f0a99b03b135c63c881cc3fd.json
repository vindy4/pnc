{"ast":null,"code":"var _jsxFileName = \"/Users/vinayyadav/Movies/pnc/src/Imdb.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { Button, TextField, Alert, Card } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = \"k_tzrvo3ni\";\nfunction DropboxContainer(props) {\n  _s();\n  const {\n    setData,\n    isSeires\n  } = props;\n  const [movieInfo, setMovieInfo] = useState({});\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [itemId, setItemId] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [detailsFinal, setdetailsFinal] = useState(false);\n  const getResourceDetails = () => {\n    if (itemId) {\n      setLoading(true);\n      fetch(`https://imdb-api.com/en/API/Title/${apiKey}/${itemId}/FullActor,Posters`).then(response => response.json()).then(data => {\n        setMovieInfo(data);\n        setLoading(false);\n      }).catch(e => {\n        setError(e.message);\n      });\n      fetch(`https://imdb-api.com/en/API/Images/${apiKey}/${itemId}`).then(response => response.json()).then(data => {\n        if (data.items) {\n          const imgs = data.items.filter(i => !i.title.includes(\"event\")).map(i => i.image);\n          setImages(imgs);\n        }\n        setLoading(false);\n      }).catch(e => {\n        setError(e.message);\n      });\n    }\n  };\n  let fsObject = {};\n  if (Object.keys(movieInfo).length) {\n    fsObject = {\n      imdbId: movieInfo.id,\n      name: movieInfo.title,\n      description: movieInfo.plot,\n      keywordList: movieInfo.keywordList,\n      languageList: movieInfo.languageList.map(l => l.value),\n      runTime: movieInfo.runtimeStr,\n      rating: movieInfo.imDbRating,\n      stars: movieInfo.starList.map(s => s.name),\n      genre: movieInfo.genres,\n      landscapeImages: images,\n      directors: movieInfo.directorList.map(d => d.name),\n      posterUrl: movieInfo.image\n    };\n    const startWithImage = fsObject.stars.map(s => {\n      const startDetails = movieInfo.actorList.find(al => al.name === s);\n      return {\n        name: s,\n        image: startDetails === null || startDetails === void 0 ? void 0 : startDetails.image\n      };\n    });\n    fsObject.stars = startWithImage;\n    if (isSeires) {\n      fsObject.episode = movieInfo.tvEpisodeInfo.episodeNumber, fsObject.season = movieInfo.tvEpisodeInfo.seasonNumber;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"outlined\",\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: [error, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"Heading\",\n      children: \"IMDB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ImdbContainer\",\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"search-movie-tv\",\n        label: \"Imdb ID\",\n        variant: \"standard\",\n        sx: {\n          width: 400\n        },\n        onChange: e => {\n          setdetailsFinal(false);\n          setItemId(e.target.value);\n        },\n        value: itemId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => {\n        getResourceDetails();\n        setdetailsFinal(false);\n      },\n      children: \"Get Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MovieDetails\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" name : \", fsObject.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" plot : \", fsObject.description, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" rating : \", fsObject.rating, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          setdetailsFinal(true);\n          setData(fsObject);\n        },\n        children: \"Confirm details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"data confirmed :\", detailsFinal ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Green\",\n          children: \"yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Red\",\n          children: \" no\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(DropboxContainer, \"dVyJN8K/BF+3cXn1ijpAWdh/IvQ=\");\n_c = DropboxContainer;\nexport default DropboxContainer;\nvar _c;\n$RefreshReg$(_c, \"DropboxContainer\");","map":{"version":3,"names":["React","useState","Button","TextField","Alert","Card","apiKey","DropboxContainer","props","setData","isSeires","movieInfo","setMovieInfo","error","setError","loading","setLoading","itemId","setItemId","images","setImages","detailsFinal","setdetailsFinal","getResourceDetails","fetch","then","response","json","data","catch","e","message","items","imgs","filter","i","title","includes","map","image","fsObject","Object","keys","length","imdbId","id","name","description","plot","keywordList","languageList","l","value","runTime","runtimeStr","rating","imDbRating","stars","starList","s","genre","genres","landscapeImages","directors","directorList","d","posterUrl","startWithImage","startDetails","actorList","find","al","episode","tvEpisodeInfo","episodeNumber","season","seasonNumber","width","target"],"sources":["/Users/vinayyadav/Movies/pnc/src/Imdb.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport { Button, TextField, Alert, Card } from \"@mui/material\";\nconst apiKey = \"k_tzrvo3ni\";\n\nfunction DropboxContainer(props) {\n  const { setData, isSeires } = props;\n\n  const [movieInfo, setMovieInfo] = useState({});\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [itemId, setItemId] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [detailsFinal, setdetailsFinal] = useState(false);\n\n  const getResourceDetails = () => {\n    if (itemId) {\n      setLoading(true);\n      fetch(\n        `https://imdb-api.com/en/API/Title/${apiKey}/${itemId}/FullActor,Posters`\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          setMovieInfo(data);\n          setLoading(false);\n        })\n        .catch((e) => {\n          setError(e.message);\n        });\n\n      fetch(`https://imdb-api.com/en/API/Images/${apiKey}/${itemId}`)\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.items) {\n            const imgs = data.items\n              .filter((i) => !i.title.includes(\"event\"))\n              .map((i) => i.image);\n            setImages(imgs);\n          }\n          setLoading(false);\n        })\n        .catch((e) => {\n          setError(e.message);\n        });\n    }\n  };\n\n  let fsObject = {};\n  if (Object.keys(movieInfo).length) {\n    fsObject = {\n      imdbId: movieInfo.id,\n      name: movieInfo.title,\n      description: movieInfo.plot,\n      keywordList: movieInfo.keywordList,\n      languageList: movieInfo.languageList.map((l) => l.value),\n      runTime: movieInfo.runtimeStr,\n      rating: movieInfo.imDbRating,\n      stars: movieInfo.starList.map((s) => s.name),\n      genre: movieInfo.genres,\n      landscapeImages: images,\n      directors: movieInfo.directorList.map((d) => d.name),\n      posterUrl: movieInfo.image,\n    };\n\n    const startWithImage = fsObject.stars.map((s) => {\n      const startDetails = movieInfo.actorList.find((al) => al.name === s);\n      return {\n        name: s,\n        image: startDetails?.image,\n      };\n    });\n\n    fsObject.stars = startWithImage;\n\n    if (isSeires) {\n      (fsObject.episode = movieInfo.tvEpisodeInfo.episodeNumber),\n        (fsObject.season = movieInfo.tvEpisodeInfo.seasonNumber);\n    }\n  }\n\n  return (\n    <Card variant=\"outlined\">\n      {error && <Alert severity=\"error\">{error}!</Alert>}\n      <h4 className=\"Heading\">IMDB</h4>\n      <div className=\"ImdbContainer\">\n        <TextField\n          id=\"search-movie-tv\"\n          label=\"Imdb ID\"\n          variant=\"standard\"\n          sx={{ width: 400 }}\n          onChange={(e) => {\n            setdetailsFinal(false);\n            setItemId(e.target.value);\n          }}\n          value={itemId}\n        />\n      </div>\n\n      <Button\n        variant=\"contained\"\n        onClick={() => {\n          getResourceDetails();\n          setdetailsFinal(false);\n        }}\n      >\n        Get Details\n      </Button>\n\n      {loading ? (\n        <p> loading... </p>\n      ) : (\n        <div className=\"MovieDetails\">\n          <ul>\n            <li> name : {fsObject.name} </li>\n            <li> plot : {fsObject.description} </li>\n            <li> rating : {fsObject.rating} </li>\n          </ul>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              setdetailsFinal(true);\n              setData(fsObject);\n            }}\n          >\n            Confirm details\n          </Button>\n          <p>\n            data confirmed :\n            {detailsFinal ? (\n              <span className=\"Green\">yes</span>\n            ) : (\n              <span className=\"Red\"> no</span>\n            )}\n          </p>\n        </div>\n      )}\n    </Card>\n  );\n}\n\nexport default DropboxContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}