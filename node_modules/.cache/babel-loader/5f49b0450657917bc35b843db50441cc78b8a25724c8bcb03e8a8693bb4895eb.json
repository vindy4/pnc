{"ast":null,"code":"var _jsxFileName = \"/Users/vinayyadav/Movies/pnc/src/Imdb.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { Button, TextField, Alert, Card } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nrequire(\"isomorphic-fetch\");\nconst imdb = require(\"imdb-api\");\nconst apiKey = \"k_tzrvo3ni\";\nconst cli = new imdb.Client({\n  apiKey\n});\nfunction DropboxContainer() {\n  _s();\n  const [movieInfo, setMovieInfo] = useState({});\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [itemId, setItemId] = useState(\"\");\n  const getResourceDetails = () => {\n    if (itemId) {\n      setLoading(true);\n      fetch(`https://imdb-api.com/en/API/Title/${apiKey}/${itemId}/FullActor,Posters`).then(response => response.json()).then(data => {\n        setMovieInfo(data);\n        setLoading(false);\n      }).catch(e => {\n        setError(e.message);\n      });\n    }\n  };\n  if (Object.keys(movieInfo).length) {\n    const fsObject = {\n      imdbId: movieInfo.id,\n      name: movieInfo.title,\n      description: movieInfo.plot,\n      keywordList: movieInfo.keywordList,\n      languageList: movieInfo.languageList.map(l => l.value),\n      runTime: movieInfo.runtimeStr,\n      rating: movieInfo.imDbRating\n    };\n    console.log(fsObject);\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"outlined\",\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: [error, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"Heading\",\n      children: \"IMDB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ImdbContainer\",\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"search-movie-tv\",\n        label: \"Imdb ID\",\n        variant: \"standard\",\n        sx: {\n          width: 400\n        },\n        onChange: e => {\n          setItemId(e.target.value);\n        },\n        value: itemId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: getResourceDetails,\n      children: \"Set Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MovieDetails\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" imdbId : \", movieInfo[\"id\"], \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(DropboxContainer, \"s1eh8Z1rRMhBzhBd4eiza9YdXwA=\");\n_c = DropboxContainer;\nexport default DropboxContainer;\n\n/***\n * \n * name  :  title\n description: plot\n directors :  directorList.map( d => d.name )\n imdbId : id :\n isSeries : from input\n isTrending : frominput\n iscarousel : from input\n keywordList : [\"mindbender\"] .   keywordList\n languageList: [\"Tamil\"]   languageList.map( l => v.value)\n posterUrl :  image\n rating 4.5 .  imDbRating\n runTime : runtimeStr\n sourceType : from input\n sourceUrl : dropboc \"mmu2visu5ler2nx/Mersal.2017.Tamil.720p.HDRip.x264.mp4?dl=0\"\n landscapeImages: [\"\",\"\"]\n stars: [{imageUrl :  starList.map(s => s.name) ,  then find image from actorList\n     name\n     }]\n \n * \n * \n * \n */\nvar _c;\n$RefreshReg$(_c, \"DropboxContainer\");","map":{"version":3,"names":["React","useState","Button","TextField","Alert","Card","require","imdb","apiKey","cli","Client","DropboxContainer","movieInfo","setMovieInfo","error","setError","loading","setLoading","itemId","setItemId","getResourceDetails","fetch","then","response","json","data","catch","e","message","Object","keys","length","fsObject","imdbId","id","name","title","description","plot","keywordList","languageList","map","l","value","runTime","runtimeStr","rating","imDbRating","console","log","width","target"],"sources":["/Users/vinayyadav/Movies/pnc/src/Imdb.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport { Button, TextField, Alert, Card } from \"@mui/material\";\n\nrequire(\"isomorphic-fetch\");\nconst imdb = require(\"imdb-api\");\nconst apiKey = \"k_tzrvo3ni\";\n\nconst cli = new imdb.Client({ apiKey });\n\nfunction DropboxContainer() {\n  const [movieInfo, setMovieInfo] = useState({});\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [itemId, setItemId] = useState(\"\");\n\n  const getResourceDetails = () => {\n    if (itemId) {\n      setLoading(true);\n      fetch(\n        `https://imdb-api.com/en/API/Title/${apiKey}/${itemId}/FullActor,Posters`\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          setMovieInfo(data);\n          setLoading(false);\n        })\n        .catch((e) => {\n          setError(e.message);\n        });\n    }\n  };\n\n  if (Object.keys(movieInfo).length) {\n    const fsObject = {\n      imdbId: movieInfo.id,\n      name: movieInfo.title,\n      description: movieInfo.plot,\n      keywordList: movieInfo.keywordList,\n      languageList: movieInfo.languageList.map((l) => l.value),\n      runTime: movieInfo.runtimeStr,\n      rating: movieInfo.imDbRating,\n    };\n\n    console.log(fsObject);\n  }\n\n  return (\n    <Card variant=\"outlined\">\n      {error && <Alert severity=\"error\">{error}!</Alert>}\n      <h2 className=\"Heading\">IMDB</h2>\n      <div className=\"ImdbContainer\">\n        <TextField\n          id=\"search-movie-tv\"\n          label=\"Imdb ID\"\n          variant=\"standard\"\n          sx={{ width: 400 }}\n          onChange={(e) => {\n            setItemId(e.target.value);\n          }}\n          value={itemId}\n        />\n      </div>\n\n      <Button variant=\"contained\" onClick={getResourceDetails}>\n        Set Details\n      </Button>\n\n      {loading ? (\n        <p> loading... </p>\n      ) : (\n        <div className=\"MovieDetails\">\n          <ul>\n            <li> imdbId : {movieInfo[\"id\"]} </li>\n          </ul>\n        </div>\n      )}\n    </Card>\n  );\n}\n\nexport default DropboxContainer;\n\n/***\n * \n * name  :  title\n description: plot\n directors :  directorList.map( d => d.name )\n imdbId : id :\n isSeries : from input\n isTrending : frominput\n iscarousel : from input\n keywordList : [\"mindbender\"] .   keywordList\n languageList: [\"Tamil\"]   languageList.map( l => v.value)\n posterUrl :  image\n rating 4.5 .  imDbRating\n runTime : runtimeStr\n sourceType : from input\n sourceUrl : dropboc \"mmu2visu5ler2nx/Mersal.2017.Tamil.720p.HDRip.x264.mp4?dl=0\"\n landscapeImages: [\"\",\"\"]\n stars: [{imageUrl :  starList.map(s => s.name) ,  then find image from actorList\n     name\n     }]\n \n * \n * \n * \n */\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}