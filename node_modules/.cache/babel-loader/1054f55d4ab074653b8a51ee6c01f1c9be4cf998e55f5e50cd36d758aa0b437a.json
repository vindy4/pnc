{"ast":null,"code":"var _jsxFileName = \"/Users/vinayyadav/Movies/pnc/src/App.js\",\n  _s = $RefreshSig$();\nimport { Button, Alert, Checkbox, setRef } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport DropBoxCont from \"./DropBox\";\nimport Imdb from \"./Imdb\";\nimport OTT from \"./Ott\";\nimport { setMovie } from \"./FireBase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [fsData, setFsData] = useState({});\n  const [error, setError] = useState(false);\n  const [isMovie, setIsMovie] = useState(Boolean(false));\n  const [isInCarausal, setIsInCarausal] = useState(false);\n  const [ott, setOtt] = useState(\"\");\n  const [entrySuccessfull, setEntrySuccessfull] = useState(false);\n  const [isDbxLinkGenerated, setisDbxLinkGenerated] = useState(false);\n  const [isImdmConfirmed, setisImdmConfirmed] = useState(false);\n  const [dbxSearchString, setdbxSearchString] = useState(\"\");\n  const dbxData = data => {\n    setFsData({\n      ...fsData,\n      ...data\n    });\n  };\n  const imdbData = data => {\n    setFsData({\n      ...fsData,\n      ...data\n    });\n    if (!isMovie) {\n      setdbxSearchString(data.episodeName);\n    }\n  };\n  const addEntry = () => {\n    if (!ott) {\n      setError(\"Please select OTT\");\n      return;\n    }\n    fsData[\"iscarousel\"] = isInCarausal;\n    fsData[\"isTrending\"] = true;\n    fsData[\"platform\"] = ott;\n    fsData[\"isSeries\"] = !isMovie;\n    let missingKeys = [];\n    Object.keys(fsData).forEach(k => {\n      if (fsData[k] === null || fsData[k] === undefined) {\n        missingKeys.push(k);\n      }\n    });\n    if (missingKeys.length) {\n      console.log(missingKeys);\n      setError(\"key missing\", missingKeys.map(k => k));\n    } else if (!isDbxLinkGenerated || !isImdmConfirmed) {\n      setError(\"Either dropbox link is not generated or Imdb not confirmed \");\n    } else {\n      try {\n        setMovie(fsData, isMovie ? \"Movies\" : \"Series\");\n        setEntrySuccessfull(\"Entry was added in database\");\n        setTimeout(() => {\n          window.location.reload();\n        }, 1500);\n      } catch (error) {\n        setError(error.message);\n      }\n    }\n  };\n  console.log(fsData);\n  const label = {\n    inputProps: {\n      \"aria-label\": \"Checkbox demo\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MovieType\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Resource Type : \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\" \", isMovie ? \"Movie\" : \"Tv Series\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          setIsMovie(!isMovie);\n          localStorage.setItem(\"isMovie\", isMovie);\n        },\n        sx: {\n          marginLeft: \"40px\"\n        },\n        children: \"Change\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Carausal\",\n        children: [\"Is in carasousal:\", /*#__PURE__*/_jsxDEV(Checkbox, {\n          ...label,\n          onClick: () => setIsInCarausal(!isInCarausal)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OTT, {\n        value: ott,\n        onChange: v => {\n          console.log(v.target.value);\n          setOtt(v.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: [error, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Imdb, {\n      setData: imdbData,\n      isSeires: !isMovie,\n      setFlag: setisImdmConfirmed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropBoxCont, {\n      setData: dbxData,\n      setFlag: setisDbxLinkGenerated,\n      searchQuery: dbxSearchString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), entrySuccessfull && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      children: [entrySuccessfull, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: addEntry,\n      sx: {\n        marginLeft: \"400px\",\n        marginTop: \"50px\"\n      },\n      children: \"Add Entry to DataBase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CG559WXNM6OxAD28UGZFud3zOfE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Button","Alert","Checkbox","setRef","React","useEffect","useState","DropBoxCont","Imdb","OTT","setMovie","App","fsData","setFsData","error","setError","isMovie","setIsMovie","Boolean","isInCarausal","setIsInCarausal","ott","setOtt","entrySuccessfull","setEntrySuccessfull","isDbxLinkGenerated","setisDbxLinkGenerated","isImdmConfirmed","setisImdmConfirmed","dbxSearchString","setdbxSearchString","dbxData","data","imdbData","episodeName","addEntry","missingKeys","Object","keys","forEach","k","undefined","push","length","console","log","map","setTimeout","window","location","reload","message","label","inputProps","localStorage","setItem","marginLeft","v","target","value","marginTop"],"sources":["/Users/vinayyadav/Movies/pnc/src/App.js"],"sourcesContent":["import { Button, Alert, Checkbox, setRef } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport DropBoxCont from \"./DropBox\";\nimport Imdb from \"./Imdb\";\nimport OTT from \"./Ott\";\nimport { setMovie } from \"./FireBase\";\n\nfunction App() {\n  const [fsData, setFsData] = useState({});\n  const [error, setError] = useState(false);\n  const [isMovie, setIsMovie] = useState(Boolean(false));\n  const [isInCarausal, setIsInCarausal] = useState(false);\n  const [ott, setOtt] = useState(\"\");\n  const [entrySuccessfull, setEntrySuccessfull] = useState(false);\n  const [isDbxLinkGenerated, setisDbxLinkGenerated] = useState(false);\n  const [isImdmConfirmed, setisImdmConfirmed] = useState(false);\n  const [dbxSearchString, setdbxSearchString] = useState(\"\");\n\n  const dbxData = (data) => {\n    setFsData({ ...fsData, ...data });\n  };\n\n  const imdbData = (data) => {\n    setFsData({ ...fsData, ...data });\n    if (!isMovie) {\n      setdbxSearchString(data.episodeName);\n    }\n  };\n\n  const addEntry = () => {\n    if (!ott) {\n      setError(\"Please select OTT\");\n      return;\n    }\n\n    fsData[\"iscarousel\"] = isInCarausal;\n    fsData[\"isTrending\"] = true;\n    fsData[\"platform\"] = ott;\n    fsData[\"isSeries\"] = !isMovie;\n\n    let missingKeys = [];\n    Object.keys(fsData).forEach((k) => {\n      if (fsData[k] === null || fsData[k] === undefined) {\n        missingKeys.push(k);\n      }\n    });\n\n    if (missingKeys.length) {\n      console.log(missingKeys);\n      setError(\n        \"key missing\",\n        missingKeys.map((k) => k)\n      );\n    } else if (!isDbxLinkGenerated || !isImdmConfirmed) {\n      setError(\"Either dropbox link is not generated or Imdb not confirmed \");\n    } else {\n      try {\n        setMovie(fsData, isMovie ? \"Movies\" : \"Series\");\n        setEntrySuccessfull(\"Entry was added in database\");\n        setTimeout(() => {\n          window.location.reload();\n        }, 1500);\n      } catch (error) {\n        setError(error.message);\n      }\n    }\n  };\n\n  console.log(fsData);\n\n  const label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\n  return (\n    <div className=\"MovieType\">\n      <div>\n        <span>\n          Resource Type : <b> {isMovie ? \"Movie\" : \"Tv Series\"} </b>\n        </span>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            setIsMovie(!isMovie);\n            localStorage.setItem(\"isMovie\", isMovie);\n          }}\n          sx={{ marginLeft: \"40px\" }}\n        >\n          Change\n        </Button>\n        <div className=\"Carausal\">\n          Is in carasousal:\n          <Checkbox {...label} onClick={() => setIsInCarausal(!isInCarausal)} />\n        </div>\n        <OTT\n          value={ott}\n          onChange={(v) => {\n            console.log(v.target.value);\n            setOtt(v.target.value);\n          }}\n        />\n      </div>\n\n      {error && <Alert severity=\"error\">{error}!</Alert>}\n      <Imdb\n        setData={imdbData}\n        isSeires={!isMovie}\n        setFlag={setisImdmConfirmed}\n      />\n      <DropBoxCont\n        setData={dbxData}\n        setFlag={setisDbxLinkGenerated}\n        searchQuery={dbxSearchString}\n      />\n      {entrySuccessfull && (\n        <Alert severity=\"success\">{entrySuccessfull}!</Alert>\n      )}\n      <Button\n        variant=\"contained\"\n        onClick={addEntry}\n        sx={{ marginLeft: \"400px\", marginTop: \"50px\" }}\n      >\n        Add Entry to DataBase\n      </Button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}