{"ast":null,"code":"var _jsxFileName = \"/Users/vinayyadav/Movies/pnc/src/Imdb.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { Button, TextField, Alert, Card } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nrequire(\"isomorphic-fetch\");\nconst imdb = require(\"imdb-api\");\nconst apiKey = \"k_tzrvo3ni\";\nconst cli = new imdb.Client({\n  apiKey\n});\nfunction DropboxContainer() {\n  _s();\n  const [movieInfo, setMovieInfo] = useState({});\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [itemId, setItemId] = useState(\"\");\n  const getResourceDetails = () => {\n    if (itemId) {\n      setLoading(true);\n      fetch(`https://imdb-api.com/en/API/Title/${apiKey}/${itemId}/FullActor,Posters`).then(response => response.json()).then(data => {\n        setMovieInfo(data);\n        setLoading(false);\n      }).error(e => {\n        setError(e.message);\n      });\n    }\n  };\n  console.log(movieInfo);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"outlined\",\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: [error, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"Heading\",\n      children: \"IMDB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ImdbContainer\",\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"search-movie-tv\",\n        label: \"Imdb ID\",\n        variant: \"standard\",\n        sx: {\n          width: 400\n        },\n        onChange: e => {\n          setItemId(e.target.value);\n        },\n        value: itemId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: getResourceDetails,\n      children: \"Set Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MovieDetails\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(movieInfo).map(key => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [key, \" : \", movieInfo[key]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(DropboxContainer, \"s1eh8Z1rRMhBzhBd4eiza9YdXwA=\");\n_c = DropboxContainer;\nexport default DropboxContainer;\nvar _c;\n$RefreshReg$(_c, \"DropboxContainer\");","map":{"version":3,"names":["React","useState","Button","TextField","Alert","Card","require","imdb","apiKey","cli","Client","DropboxContainer","movieInfo","setMovieInfo","error","setError","loading","setLoading","itemId","setItemId","getResourceDetails","fetch","then","response","json","data","e","message","console","log","width","target","value","Object","keys","map","key"],"sources":["/Users/vinayyadav/Movies/pnc/src/Imdb.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport { Button, TextField, Alert, Card } from \"@mui/material\";\n\nrequire(\"isomorphic-fetch\");\nconst imdb = require(\"imdb-api\");\nconst apiKey = \"k_tzrvo3ni\";\n\nconst cli = new imdb.Client({ apiKey });\n\nfunction DropboxContainer() {\n  const [movieInfo, setMovieInfo] = useState({});\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [itemId, setItemId] = useState(\"\");\n\n  const getResourceDetails = () => {\n    if (itemId) {\n      setLoading(true);\n      fetch(\n        `https://imdb-api.com/en/API/Title/${apiKey}/${itemId}/FullActor,Posters`\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          setMovieInfo(data);\n          setLoading(false);\n        })\n        .error((e) => {\n          setError(e.message);\n        });\n    }\n  };\n\n  console.log(movieInfo);\n\n  return (\n    <Card variant=\"outlined\">\n      {error && <Alert severity=\"error\">{error}!</Alert>}\n      <h2 className=\"Heading\">IMDB</h2>\n      <div className=\"ImdbContainer\">\n        <TextField\n          id=\"search-movie-tv\"\n          label=\"Imdb ID\"\n          variant=\"standard\"\n          sx={{ width: 400 }}\n          onChange={(e) => {\n            setItemId(e.target.value);\n          }}\n          value={itemId}\n        />\n      </div>\n\n      <Button variant=\"contained\" onClick={getResourceDetails}>\n        Set Details\n      </Button>\n\n      <div className=\"MovieDetails\">\n        <ul>\n          {Object.keys(movieInfo).map((key) => {\n            return (\n              <li>\n                {key} : {movieInfo[key]}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </Card>\n  );\n}\n\nexport default DropboxContainer;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,SAAS,EAAEC,KAAK,EAAEC,IAAI,QAAQ,eAAe;AAAC;AAE/DC,OAAO,CAAC,kBAAkB,CAAC;AAC3B,MAAMC,IAAI,GAAGD,OAAO,CAAC,UAAU,CAAC;AAChC,MAAME,MAAM,GAAG,YAAY;AAE3B,MAAMC,GAAG,GAAG,IAAIF,IAAI,CAACG,MAAM,CAAC;EAAEF;AAAO,CAAC,CAAC;AAEvC,SAASG,gBAAgB,GAAG;EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMmB,kBAAkB,GAAG,MAAM;IAC/B,IAAIF,MAAM,EAAE;MACVD,UAAU,CAAC,IAAI,CAAC;MAChBI,KAAK,CACF,qCAAoCb,MAAO,IAAGU,MAAO,oBAAmB,CAC1E,CACEI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACdZ,YAAY,CAACY,IAAI,CAAC;QAClBR,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,CACDH,KAAK,CAAEY,CAAC,IAAK;QACZX,QAAQ,CAACW,CAAC,CAACC,OAAO,CAAC;MACrB,CAAC,CAAC;IACN;EACF,CAAC;EAEDC,OAAO,CAACC,GAAG,CAACjB,SAAS,CAAC;EAEtB,oBACE,QAAC,IAAI;IAAC,OAAO,EAAC,UAAU;IAAA,WACrBE,KAAK,iBAAI,QAAC,KAAK;MAAC,QAAQ,EAAC,OAAO;MAAA,WAAEA,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAU,eAClD;MAAI,SAAS,EAAC,SAAS;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAU,eACjC;MAAK,SAAS,EAAC,eAAe;MAAA,uBAC5B,QAAC,SAAS;QACR,EAAE,EAAC,iBAAiB;QACpB,KAAK,EAAC,SAAS;QACf,OAAO,EAAC,UAAU;QAClB,EAAE,EAAE;UAAEgB,KAAK,EAAE;QAAI,CAAE;QACnB,QAAQ,EAAGJ,CAAC,IAAK;UACfP,SAAS,CAACO,CAAC,CAACK,MAAM,CAACC,KAAK,CAAC;QAC3B,CAAE;QACF,KAAK,EAAEd;MAAO;QAAA;QAAA;QAAA;MAAA;IACd;MAAA;MAAA;MAAA;IAAA,QACE,eAEN,QAAC,MAAM;MAAC,OAAO,EAAC,WAAW;MAAC,OAAO,EAAEE,kBAAmB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAE/C,eAET;MAAK,SAAS,EAAC,cAAc;MAAA,uBAC3B;QAAA,UACGa,MAAM,CAACC,IAAI,CAACtB,SAAS,CAAC,CAACuB,GAAG,CAAEC,GAAG,IAAK;UACnC,oBACE;YAAA,WACGA,GAAG,SAAKxB,SAAS,CAACwB,GAAG,CAAC;UAAA;YAAA;YAAA;YAAA;UAAA,QACpB;QAET,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA;IACC;MAAA;MAAA;MAAA;IAAA,QACD;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX;AAAC,GA3DQzB,gBAAgB;AAAA,KAAhBA,gBAAgB;AA6DzB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}