{"ast":null,"code":"import { _registerComponent, registerVersion, _getProvider, getApp, _removeServiceInstance, SDK_VERSION } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { FirebaseError, getDefaultEmulatorHostnameAndPort, createMockUserToken, getModularInstance, deepEqual } from '@firebase/util';\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass d {\n  constructor(t) {\n    this.uid = t;\n  }\n  isAuthenticated() {\n    return null != this.uid;\n  }\n  /**\n   * Returns a key representing this user, suitable for inclusion in a\n   * dictionary.\n   */\n  toKey() {\n    return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n  }\n  isEqual(t) {\n    return t.uid === this.uid;\n  }\n}\n\n/** A user with a null UID. */\nd.UNAUTHENTICATED = new d(null),\n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), d.MOCK_USER = new d(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet w = \"9.14.0\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst m = new Logger(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */\nfunction p(t) {\n  m.setLogLevel(t);\n}\nfunction y(t) {\n  if (m.logLevel <= LogLevel.DEBUG) {\n    for (var _len = arguments.length, e = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      e[_key - 1] = arguments[_key];\n    }\n    const n = e.map(v);\n    m.debug(`Firestore (${w}): ${t}`, ...n);\n  }\n}\nfunction _(t) {\n  if (m.logLevel <= LogLevel.ERROR) {\n    for (var _len2 = arguments.length, e = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      e[_key2 - 1] = arguments[_key2];\n    }\n    const n = e.map(v);\n    m.error(`Firestore (${w}): ${t}`, ...n);\n  }\n}\n\n/**\n * @internal\n */\nfunction g(t) {\n  if (m.logLevel <= LogLevel.WARN) {\n    for (var _len3 = arguments.length, e = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      e[_key3 - 1] = arguments[_key3];\n    }\n    const n = e.map(v);\n    m.warn(`Firestore (${w}): ${t}`, ...n);\n  }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */\nfunction v(t) {\n  if (\"string\" == typeof t) return t;\n  try {\n    return e = t, JSON.stringify(e);\n  } catch (e) {\n    // Converting to JSON failed, just log the object directly\n    return t;\n  }\n  /**\n  * @license\n  * Copyright 2020 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n  /** Formats an object as a JSON string, suitable for logging. */\n  var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */\nfunction b() {\n  let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Unexpected state\";\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  const e = `FIRESTORE (${w}) INTERNAL ASSERTION FAILED: ` + t;\n  // NOTE: We don't use FirestoreError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n  throw _(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */\nfunction E(t, e) {\n  t || b();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */\nfunction I(t,\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n  return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst T = \"ok\",\n  A = \"cancelled\",\n  R = \"unknown\",\n  P = \"invalid-argument\",\n  V = \"deadline-exceeded\",\n  N = \"not-found\",\n  $ = \"already-exists\",\n  D = \"permission-denied\",\n  x = \"unauthenticated\",\n  F = \"resource-exhausted\",\n  S = \"failed-precondition\",\n  q = \"aborted\",\n  O = \"out-of-range\",\n  k = \"unimplemented\",\n  C = \"internal\",\n  L = \"unavailable\",\n  M = \"data-loss\";\n\n/** An error returned by a Firestore operation. */\nclass U extends FirebaseError {\n  /** @hideconstructor */\n  constructor(\n  /**\n   * The backend error code associated with this error.\n   */\n  t,\n  /**\n   * A custom error description.\n   */\n  e) {\n    super(t, e), this.code = t, this.message = e,\n    // HACK: We write a toString property directly because Error is not a real\n    // class and so inheritance does not work correctly. We could alternatively\n    // do the same \"back-door inheritance\" trick that FirebaseError does.\n    this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass j {\n  constructor() {\n    this.promise = new Promise((t, e) => {\n      this.resolve = t, this.reject = e;\n    });\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass B {\n  constructor(t, e) {\n    this.user = e, this.type = \"OAuth\", this.headers = new Map(), this.headers.set(\"Authorization\", `Bearer ${t}`);\n  }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */\nclass Q {\n  getToken() {\n    return Promise.resolve(null);\n  }\n  invalidateToken() {}\n  start(t, e) {\n    // Fire with initial user.\n    t.enqueueRetryable(() => e(d.UNAUTHENTICATED));\n  }\n  shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */\nclass z {\n  constructor(t) {\n    this.token = t,\n    /**\n     * Stores the listener registered with setChangeListener()\n     * This isn't actually necessary since the UID never changes, but we use this\n     * to verify the listen contract is adhered to in tests.\n     */\n    this.changeListener = null;\n  }\n  getToken() {\n    return Promise.resolve(this.token);\n  }\n  invalidateToken() {}\n  start(t, e) {\n    this.changeListener = e,\n    // Fire with initial user.\n    t.enqueueRetryable(() => e(this.token.user));\n  }\n  shutdown() {\n    this.changeListener = null;\n  }\n}\n\n/** Credential provider for the Lite SDK. */\nclass G {\n  constructor(t) {\n    this.auth = null, t.onInit(t => {\n      this.auth = t;\n    });\n  }\n  getToken() {\n    return this.auth ? this.auth.getToken().then(t => t ? (E(\"string\" == typeof t.accessToken), new B(t.accessToken, new d(this.auth.getUid()))) : null) : Promise.resolve(null);\n  }\n  invalidateToken() {}\n  start(t, e) {}\n  shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */\nclass W {\n  constructor(t, e, n, r) {\n    this.t = t, this.i = e, this.o = n, this.u = r, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, this.h = new Map();\n  }\n  /** Gets an authorization token, using a provided factory function, or falling back to First Party GAPI. */\n  l() {\n    return this.u ? this.u() : (\n    // Make sure this really is a Gapi client.\n    E(!(\"object\" != typeof this.t || null === this.t || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), this.t.auth.getAuthHeaderValueForFirstParty([]));\n  }\n  get headers() {\n    this.h.set(\"X-Goog-AuthUser\", this.i);\n    // Use array notation to prevent minification\n    const t = this.l();\n    return t && this.h.set(\"Authorization\", t), this.o && this.h.set(\"X-Goog-Iam-Authorization-Token\", this.o), this.h;\n  }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */\nclass K {\n  constructor(t, e, n, r) {\n    this.t = t, this.i = e, this.o = n, this.u = r;\n  }\n  getToken() {\n    return Promise.resolve(new W(this.t, this.i, this.o, this.u));\n  }\n  start(t, e) {\n    // Fire with initial uid.\n    t.enqueueRetryable(() => e(d.FIRST_PARTY));\n  }\n  shutdown() {}\n  invalidateToken() {}\n}\nclass Y {\n  constructor(t) {\n    this.value = t, this.type = \"AppCheck\", this.headers = new Map(), t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n  }\n}\n\n/** AppCheck token provider for the Lite SDK. */\nclass H {\n  constructor(t) {\n    this.m = t, this.appCheck = null, t.onInit(t => {\n      this.appCheck = t;\n    });\n  }\n  getToken() {\n    return this.appCheck ? this.appCheck.getToken().then(t => t ? (E(\"string\" == typeof t.token), new Y(t.token)) : null) : Promise.resolve(null);\n  }\n  invalidateToken() {}\n  start(t, e) {}\n  shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass J {\n  /**\n   * Constructs a DatabaseInfo using the provided host, databaseId and\n   * persistenceKey.\n   *\n   * @param databaseId - The database to use.\n   * @param appId - The Firebase App Id.\n   * @param persistenceKey - A unique identifier for this Firestore's local\n   * storage (used in conjunction with the databaseId).\n   * @param host - The Firestore backend host to connect to.\n   * @param ssl - Whether to use SSL when connecting.\n   * @param forceLongPolling - Whether to use the forceLongPolling option\n   * when using WebChannel as the network transport.\n   * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n   * option when using WebChannel as the network transport.\n   * @param useFetchStreams Whether to use the Fetch API instead of\n   * XMLHTTPRequest\n   */\n  constructor(t, e, n, r, s, i, o, u) {\n    this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n  }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass X {\n  constructor(t, e) {\n    this.projectId = t, this.database = e || \"(default)\";\n  }\n  static empty() {\n    return new X(\"\", \"\");\n  }\n  get isDefaultDatabase() {\n    return \"(default)\" === this.database;\n  }\n  isEqual(t) {\n    return t instanceof X && t.projectId === this.projectId && t.database === this.database;\n  }\n}\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass Z {\n  constructor(t, e, n) {\n    void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), this.segments = t, this.offset = e, this.len = n;\n  }\n  get length() {\n    return this.len;\n  }\n  isEqual(t) {\n    return 0 === Z.comparator(this, t);\n  }\n  child(t) {\n    const e = this.segments.slice(this.offset, this.limit());\n    return t instanceof Z ? t.forEach(t => {\n      e.push(t);\n    }) : e.push(t), this.construct(e);\n  }\n  /** The index of one past the last segment of the path. */\n  limit() {\n    return this.offset + this.length;\n  }\n  popFirst(t) {\n    return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n  }\n  popLast() {\n    return this.construct(this.segments, this.offset, this.length - 1);\n  }\n  firstSegment() {\n    return this.segments[this.offset];\n  }\n  lastSegment() {\n    return this.get(this.length - 1);\n  }\n  get(t) {\n    return this.segments[this.offset + t];\n  }\n  isEmpty() {\n    return 0 === this.length;\n  }\n  isPrefixOf(t) {\n    if (t.length < this.length) return !1;\n    for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n    return !0;\n  }\n  isImmediateParentOf(t) {\n    if (this.length + 1 !== t.length) return !1;\n    for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n    return !0;\n  }\n  forEach(t) {\n    for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n  }\n  toArray() {\n    return this.segments.slice(this.offset, this.limit());\n  }\n  static comparator(t, e) {\n    const n = Math.min(t.length, e.length);\n    for (let r = 0; r < n; r++) {\n      const n = t.get(r),\n        s = e.get(r);\n      if (n < s) return -1;\n      if (n > s) return 1;\n    }\n    return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n  }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */\nclass tt extends Z {\n  construct(t, e, n) {\n    return new tt(t, e, n);\n  }\n  canonicalString() {\n    // NOTE: The client is ignorant of any path segments containing escape\n    // sequences (e.g. __id123__) and just passes them through raw (they exist\n    // for legacy reasons and should not be used frequently).\n    return this.toArray().join(\"/\");\n  }\n  toString() {\n    return this.canonicalString();\n  }\n  /**\n   * Creates a resource path from the given slash-delimited string. If multiple\n   * arguments are provided, all components are combined. Leading and trailing\n   * slashes from all components are ignored.\n   */\n  static fromString() {\n    // NOTE: The client is ignorant of any path segments containing escape\n    // sequences (e.g. __id123__) and just passes them through raw (they exist\n    // for legacy reasons and should not be used frequently).\n    const e = [];\n    for (var _len4 = arguments.length, t = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      t[_key4] = arguments[_key4];\n    }\n    for (const n of t) {\n      if (n.indexOf(\"//\") >= 0) throw new U(P, `Invalid segment (${n}). Paths must not contain // in them.`);\n      // Strip leading and traling slashed.\n      e.push(...n.split(\"/\").filter(t => t.length > 0));\n    }\n    return new tt(e);\n  }\n  static emptyPath() {\n    return new tt([]);\n  }\n}\nconst et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */\nclass nt extends Z {\n  construct(t, e, n) {\n    return new nt(t, e, n);\n  }\n  /**\n   * Returns true if the string could be used as a segment in a field path\n   * without escaping.\n   */\n  static isValidIdentifier(t) {\n    return et.test(t);\n  }\n  canonicalString() {\n    return this.toArray().map(t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t)).join(\".\");\n  }\n  toString() {\n    return this.canonicalString();\n  }\n  /**\n   * Returns true if this field references the key of a document.\n   */\n  isKeyField() {\n    return 1 === this.length && \"__name__\" === this.get(0);\n  }\n  /**\n   * The field designating the key of a document.\n   */\n  static keyField() {\n    return new nt([\"__name__\"]);\n  }\n  /**\n   * Parses a field string from the given server-formatted string.\n   *\n   * - Splitting the empty string is not allowed (for now at least).\n   * - Empty segments within the string (e.g. if there are two consecutive\n   *   separators) are not allowed.\n   *\n   * TODO(b/37244157): we should make this more strict. Right now, it allows\n   * non-identifier path components, even if they aren't escaped.\n   */\n  static fromServerFormat(t) {\n    const e = [];\n    let n = \"\",\n      r = 0;\n    const s = () => {\n      if (0 === n.length) throw new U(P, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n      e.push(n), n = \"\";\n    };\n    let i = !1;\n    for (; r < t.length;) {\n      const e = t[r];\n      if (\"\\\\\" === e) {\n        if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n        const e = t[r + 1];\n        if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(P, \"Path has invalid escape sequence: \" + t);\n        n += e, r += 2;\n      } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n    }\n    if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n    return new nt(e);\n  }\n  static emptyPath() {\n    return new nt([]);\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */\nclass rt {\n  constructor(t) {\n    this.path = t;\n  }\n  static fromPath(t) {\n    return new rt(tt.fromString(t));\n  }\n  static fromName(t) {\n    return new rt(tt.fromString(t).popFirst(5));\n  }\n  static empty() {\n    return new rt(tt.emptyPath());\n  }\n  get collectionGroup() {\n    return this.path.popLast().lastSegment();\n  }\n  /** Returns true if the document is in the specified collectionId. */\n  hasCollectionId(t) {\n    return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n  }\n  /** Returns the collection group (i.e. the name of the parent collection) for this key. */\n  getCollectionGroup() {\n    return this.path.get(this.path.length - 2);\n  }\n  /** Returns the fully qualified path to the parent collection. */\n  getCollectionPath() {\n    return this.path.popLast();\n  }\n  isEqual(t) {\n    return null !== t && 0 === tt.comparator(this.path, t.path);\n  }\n  toString() {\n    return this.path.toString();\n  }\n  static comparator(t, e) {\n    return tt.comparator(t.path, e.path);\n  }\n  static isDocumentKey(t) {\n    return t.length % 2 == 0;\n  }\n  /**\n   * Creates and returns a new document key with the given segments.\n   *\n   * @param segments - The segments of the path to the document\n   * @returns A new instance of DocumentKey\n   */\n  static fromSegments(t) {\n    return new rt(new tt(t.slice()));\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction st(t, e, n) {\n  if (!n) throw new U(P, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction it(t) {\n  if (!rt.isDocumentKey(t)) throw new U(P, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */\nfunction ot(t) {\n  if (rt.isDocumentKey(t)) throw new U(P, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction ut(t) {\n  if (void 0 === t) return \"undefined\";\n  if (null === t) return \"null\";\n  if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), JSON.stringify(t);\n  if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n  if (\"object\" == typeof t) {\n    if (t instanceof Array) return \"an array\";\n    {\n      const e = /** try to get the constructor name for an object. */\n      function (t) {\n        if (t.constructor) return t.constructor.name;\n        return null;\n      }\n      /**\n      * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n      * underlying instance. Throws if  `obj` is not an instance of `T`.\n      *\n      * This cast is used in the Lite and Full SDK to verify instance types for\n      * arguments passed to the public API.\n      * @internal\n      */(t);\n      return e ? `a custom ${e} object` : \"an object\";\n    }\n  }\n  return \"function\" == typeof t ? \"a function\" : b();\n}\nfunction ct(t,\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n  if (\"_delegate\" in t && (\n  // Unwrap Compat types\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  t = t._delegate), !(t instanceof e)) {\n    if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n    {\n      const n = ut(t);\n      throw new U(P, `Expected type '${e.name}', but it was: ${n}`);\n    }\n  }\n  return t;\n}\nfunction at(t, e) {\n  if (e <= 0) throw new U(P, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */\nfunction ht(t) {\n  return null == t;\n}\n\n/** Returns whether the value represents -0. */\nfunction lt(t) {\n  // Detect if the value is -0.0. Based on polyfill from\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n  return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ft = {\n  BatchGetDocuments: \"batchGet\",\n  Commit: \"commit\",\n  RunQuery: \"runQuery\",\n  RunAggregationQuery: \"runAggregationQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar dt, wt;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction mt(t) {\n  if (void 0 === t) return _(\"RPC_ERROR\", \"HTTP error has no status\"), R;\n  // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n  // status codes but the mapping is not bijective. In each case of ambiguity\n  // this function chooses a primary error.\n\n  // [1]\n  // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n  switch (t) {\n    case 200:\n      // OK\n      return T;\n    case 400:\n      // Bad Request\n      return S;\n\n    // Other possibilities based on the forward mapping\n    // return Code.INVALID_ARGUMENT;\n    // return Code.OUT_OF_RANGE;\n    case 401:\n      // Unauthorized\n      return x;\n    case 403:\n      // Forbidden\n      return D;\n    case 404:\n      // Not Found\n      return N;\n    case 409:\n      // Conflict\n      return q;\n\n    // Other possibilities:\n    // return Code.ALREADY_EXISTS;\n    case 416:\n      // Range Not Satisfiable\n      return O;\n    case 429:\n      // Too Many Requests\n      return F;\n    case 499:\n      // Client Closed Request\n      return A;\n    case 500:\n      // Internal Server Error\n      return R;\n\n    // Other possibilities:\n    // return Code.INTERNAL;\n    // return Code.DATA_LOSS;\n    case 501:\n      // Unimplemented\n      return k;\n    case 503:\n      // Service Unavailable\n      return L;\n    case 504:\n      // Gateway Timeout\n      return V;\n    default:\n      return t >= 200 && t < 300 ? T : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : R;\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */\n(wt = dt || (dt = {}))[wt.OK = 0] = \"OK\", wt[wt.CANCELLED = 1] = \"CANCELLED\", wt[wt.UNKNOWN = 2] = \"UNKNOWN\", wt[wt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", wt[wt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", wt[wt.NOT_FOUND = 5] = \"NOT_FOUND\", wt[wt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", wt[wt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", wt[wt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", wt[wt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", wt[wt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", wt[wt.ABORTED = 10] = \"ABORTED\", wt[wt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", wt[wt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", wt[wt.INTERNAL = 13] = \"INTERNAL\", wt[wt.UNAVAILABLE = 14] = \"UNAVAILABLE\", wt[wt.DATA_LOSS = 15] = \"DATA_LOSS\";\nclass pt extends\n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n  constructor(t) {\n    this.databaseInfo = t, this.databaseId = t.databaseId;\n    const e = t.ssl ? \"https\" : \"http\";\n    this.p = e + \"://\" + t.host, this.g = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n  }\n  get v() {\n    // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n    // where to run the query, and expect the `request` to NOT specify the \"path\".\n    return !1;\n  }\n  I(t, e, n, r, s) {\n    const i = this.T(t, e);\n    y(\"RestConnection\", \"Sending: \", i, n);\n    const o = {};\n    return this.A(o, r, s), this.R(t, i, o, n).then(t => (y(\"RestConnection\", \"Received: \", t), t), e => {\n      throw g(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), e;\n    });\n  }\n  P(t, e, n, r, s, i) {\n    // The REST API automatically aggregates all of the streamed results, so we\n    // can just use the normal invoke() method.\n    return this.I(t, e, n, r, s);\n  }\n  /**\n   * Modifies the headers for a request, adding any authorization token if\n   * present and any additional headers for the request.\n   */\n  A(t, e, n) {\n    t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w,\n    // Content-Type: text/plain will avoid preflight requests which might\n    // mess with CORS and redirects by proxies. If we add custom headers\n    // we will need to change this code to potentially use the $httpOverwrite\n    // parameter supported by ESF to avoid triggering preflight requests.\n    t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), e && e.headers.forEach((e, n) => t[n] = e), n && n.headers.forEach((e, n) => t[n] = e);\n  }\n  T(t, e) {\n    const n = ft[t];\n    return `${this.p}/v1/${e}:${n}`;\n  }\n} {\n  /**\n   * @param databaseInfo - The connection info.\n   * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n   */\n  constructor(t, e) {\n    super(t), this.V = e;\n  }\n  N(t, e) {\n    throw new Error(\"Not supported by FetchConnection\");\n  }\n  async R(t, e, n, r) {\n    var s;\n    const i = JSON.stringify(r);\n    let o;\n    try {\n      o = await this.V(e, {\n        method: \"POST\",\n        headers: n,\n        body: i\n      });\n    } catch (t) {\n      throw new U(mt(t.status), \"Request failed with error: \" + t.statusText);\n    }\n    if (!o.ok) {\n      let t = await o.json();\n      Array.isArray(t) && (t = t[0]);\n      const e = null === (s = null == t ? void 0 : t.error) || void 0 === s ? void 0 : s.message;\n      throw new U(mt(o.status), `Request failed with error: ${null != e ? e : o.statusText}`);\n    }\n    return o.json();\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction yt(t) {\n  // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n  const e =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto),\n    n = new Uint8Array(t);\n  if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n);else\n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n  return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass _t {\n  static $() {\n    // Alphanumeric characters\n    const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\",\n      e = Math.floor(256 / t.length) * t.length;\n    // The largest byte value that is a multiple of `char.length`.\n    let n = \"\";\n    for (; n.length < 20;) {\n      const r = yt(40);\n      for (let s = 0; s < r.length; ++s)\n      // Only accept values that are [0, maxMultiple), this ensures they can\n      // be evenly mapped to indices of `chars` via a modulo operation.\n      n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n    }\n    return n;\n  }\n}\nfunction gt(t, e) {\n  return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */\nfunction vt(t, e, n) {\n  return t.length === e.length && t.every((t, r) => n(t, e[r]));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass bt {\n  /**\n   * Creates a new timestamp.\n   *\n   * @param seconds - The number of seconds of UTC time since Unix epoch\n   *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n   *     9999-12-31T23:59:59Z inclusive.\n   * @param nanoseconds - The non-negative fractions of a second at nanosecond\n   *     resolution. Negative second values with fractions must still have\n   *     non-negative nanoseconds values that count forward in time. Must be\n   *     from 0 to 999,999,999 inclusive.\n   */\n  constructor(\n  /**\n   * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n   */\n  t,\n  /**\n   * The fractions of a second at nanosecond resolution.*\n   */\n  e) {\n    if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n    if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n    if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n    // This will break in the year 10,000.\n    if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n  }\n  /**\n   * Creates a new timestamp with the current date, with millisecond precision.\n   *\n   * @returns a new timestamp representing the current date.\n   */\n  static now() {\n    return bt.fromMillis(Date.now());\n  }\n  /**\n   * Creates a new timestamp from the given date.\n   *\n   * @param date - The date to initialize the `Timestamp` from.\n   * @returns A new `Timestamp` representing the same point in time as the given\n   *     date.\n   */\n  static fromDate(t) {\n    return bt.fromMillis(t.getTime());\n  }\n  /**\n   * Creates a new timestamp from the given number of milliseconds.\n   *\n   * @param milliseconds - Number of milliseconds since Unix epoch\n   *     1970-01-01T00:00:00Z.\n   * @returns A new `Timestamp` representing the same point in time as the given\n   *     number of milliseconds.\n   */\n  static fromMillis(t) {\n    const e = Math.floor(t / 1e3),\n      n = Math.floor(1e6 * (t - 1e3 * e));\n    return new bt(e, n);\n  }\n  /**\n   * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n   * causes a loss of precision since `Date` objects only support millisecond\n   * precision.\n   *\n   * @returns JavaScript `Date` object representing the same point in time as\n   *     this `Timestamp`, with millisecond precision.\n   */\n  toDate() {\n    return new Date(this.toMillis());\n  }\n  /**\n   * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n   * epoch). This operation causes a loss of precision.\n   *\n   * @returns The point in time corresponding to this timestamp, represented as\n   *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n   */\n  toMillis() {\n    return 1e3 * this.seconds + this.nanoseconds / 1e6;\n  }\n  _compareTo(t) {\n    return this.seconds === t.seconds ? gt(this.nanoseconds, t.nanoseconds) : gt(this.seconds, t.seconds);\n  }\n  /**\n   * Returns true if this `Timestamp` is equal to the provided one.\n   *\n   * @param other - The `Timestamp` to compare against.\n   * @returns true if this `Timestamp` is equal to the provided one.\n   */\n  isEqual(t) {\n    return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n  }\n  /** Returns a textual representation of this `Timestamp`. */\n  toString() {\n    return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n  }\n  /** Returns a JSON-serializable representation of this `Timestamp`. */\n  toJSON() {\n    return {\n      seconds: this.seconds,\n      nanoseconds: this.nanoseconds\n    };\n  }\n  /**\n   * Converts this object to a primitive string, which allows `Timestamp` objects\n   * to be compared using the `>`, `<=`, `>=` and `>` operators.\n   */\n  valueOf() {\n    // This method returns a string of the form <seconds>.<nanoseconds> where\n    // <seconds> is translated to have a non-negative value and both <seconds>\n    // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n    // Strings with this format then have a lexiographical ordering that matches\n    // the expected ordering. The <seconds> translation is done to avoid having\n    // a leading negative sign (i.e. a leading '-' character) in its string\n    // representation, which would affect its lexiographical ordering.\n    const t = this.seconds - -62135596800;\n    // Note: Up to 12 decimal digits are required to represent all valid\n    // 'seconds' values.\n    return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */\nclass Et {\n  constructor(t) {\n    this.timestamp = t;\n  }\n  static fromTimestamp(t) {\n    return new Et(t);\n  }\n  static min() {\n    return new Et(new bt(0, 0));\n  }\n  static max() {\n    return new Et(new bt(253402300799, 999999999));\n  }\n  compareTo(t) {\n    return this.timestamp._compareTo(t.timestamp);\n  }\n  isEqual(t) {\n    return this.timestamp.isEqual(t.timestamp);\n  }\n  /** Returns a number representation of the version for use in spec tests. */\n  toMicroseconds() {\n    // Convert to microseconds.\n    return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n  }\n  toString() {\n    return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n  }\n  toTimestamp() {\n    return this.timestamp;\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction It(t) {\n  let e = 0;\n  for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n  return e;\n}\nfunction Tt(t, e) {\n  for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass At {\n  constructor(t, e) {\n    this.comparator = t, this.root = e || Pt.EMPTY;\n  }\n  // Returns a copy of the map, with the specified key/value added or replaced.\n  insert(t, e) {\n    return new At(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, Pt.BLACK, null, null));\n  }\n  // Returns a copy of the map, with the specified key removed.\n  remove(t) {\n    return new At(this.comparator, this.root.remove(t, this.comparator).copy(null, null, Pt.BLACK, null, null));\n  }\n  // Returns the value of the node with the given key, or null.\n  get(t) {\n    let e = this.root;\n    for (; !e.isEmpty();) {\n      const n = this.comparator(t, e.key);\n      if (0 === n) return e.value;\n      n < 0 ? e = e.left : n > 0 && (e = e.right);\n    }\n    return null;\n  }\n  // Returns the index of the element in this sorted map, or -1 if it doesn't\n  // exist.\n  indexOf(t) {\n    // Number of nodes that were pruned when descending right\n    let e = 0,\n      n = this.root;\n    for (; !n.isEmpty();) {\n      const r = this.comparator(t, n.key);\n      if (0 === r) return e + n.left.size;\n      r < 0 ? n = n.left : (\n      // Count all nodes left of the node plus the node itself\n      e += n.left.size + 1, n = n.right);\n    }\n    // Node not found\n    return -1;\n  }\n  isEmpty() {\n    return this.root.isEmpty();\n  }\n  // Returns the total number of nodes in the map.\n  get size() {\n    return this.root.size;\n  }\n  // Returns the minimum key in the map.\n  minKey() {\n    return this.root.minKey();\n  }\n  // Returns the maximum key in the map.\n  maxKey() {\n    return this.root.maxKey();\n  }\n  // Traverses the map in key order and calls the specified action function\n  // for each key/value pair. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n  inorderTraversal(t) {\n    return this.root.inorderTraversal(t);\n  }\n  forEach(t) {\n    this.inorderTraversal((e, n) => (t(e, n), !1));\n  }\n  toString() {\n    const t = [];\n    return this.inorderTraversal((e, n) => (t.push(`${e}:${n}`), !1)), `{${t.join(\", \")}}`;\n  }\n  // Traverses the map in reverse key order and calls the specified action\n  // function for each key/value pair. If action returns true, traversal is\n  // aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n  reverseTraversal(t) {\n    return this.root.reverseTraversal(t);\n  }\n  // Returns an iterator over the SortedMap.\n  getIterator() {\n    return new Rt(this.root, null, this.comparator, !1);\n  }\n  getIteratorFrom(t) {\n    return new Rt(this.root, t, this.comparator, !1);\n  }\n  getReverseIterator() {\n    return new Rt(this.root, null, this.comparator, !0);\n  }\n  getReverseIteratorFrom(t) {\n    return new Rt(this.root, t, this.comparator, !0);\n  }\n}\n\n// end SortedMap\n// An iterator over an LLRBNode.\nclass Rt {\n  constructor(t, e, n, r) {\n    this.isReverse = r, this.nodeStack = [];\n    let s = 1;\n    for (; !t.isEmpty();) if (s = e ? n(t.key, e) : 1,\n    // flip the comparison if we're going in reverse\n    e && r && (s *= -1), s < 0)\n      // This node is less than our start key. ignore it\n      t = this.isReverse ? t.left : t.right;else {\n      if (0 === s) {\n        // This node is exactly equal to our start key. Push it on the stack,\n        // but stop iterating;\n        this.nodeStack.push(t);\n        break;\n      }\n      // This node is greater than our start key, add it to the stack and move\n      // to the next one\n      this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n    }\n  }\n  getNext() {\n    let t = this.nodeStack.pop();\n    const e = {\n      key: t.key,\n      value: t.value\n    };\n    if (this.isReverse) for (t = t.left; !t.isEmpty();) this.nodeStack.push(t), t = t.right;else for (t = t.right; !t.isEmpty();) this.nodeStack.push(t), t = t.left;\n    return e;\n  }\n  hasNext() {\n    return this.nodeStack.length > 0;\n  }\n  peek() {\n    if (0 === this.nodeStack.length) return null;\n    const t = this.nodeStack[this.nodeStack.length - 1];\n    return {\n      key: t.key,\n      value: t.value\n    };\n  }\n}\n\n// end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass Pt {\n  constructor(t, e, n, r, s) {\n    this.key = t, this.value = e, this.color = null != n ? n : Pt.RED, this.left = null != r ? r : Pt.EMPTY, this.right = null != s ? s : Pt.EMPTY, this.size = this.left.size + 1 + this.right.size;\n  }\n  // Returns a copy of the current node, optionally replacing pieces of it.\n  copy(t, e, n, r, s) {\n    return new Pt(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n  }\n  isEmpty() {\n    return !1;\n  }\n  // Traverses the tree in key order and calls the specified action function\n  // for each node. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n  inorderTraversal(t) {\n    return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n  }\n  // Traverses the tree in reverse key order and calls the specified action\n  // function for each node. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n  reverseTraversal(t) {\n    return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n  }\n  // Returns the minimum node in the tree.\n  min() {\n    return this.left.isEmpty() ? this : this.left.min();\n  }\n  // Returns the maximum key in the tree.\n  minKey() {\n    return this.min().key;\n  }\n  // Returns the maximum key in the tree.\n  maxKey() {\n    return this.right.isEmpty() ? this.key : this.right.maxKey();\n  }\n  // Returns new tree, with the key/value added.\n  insert(t, e, n) {\n    let r = this;\n    const s = n(t, r.key);\n    return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), r.fixUp();\n  }\n  removeMin() {\n    if (this.left.isEmpty()) return Pt.EMPTY;\n    let t = this;\n    return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), t.fixUp();\n  }\n  // Returns new tree, with the specified item removed.\n  remove(t, e) {\n    let n,\n      r = this;\n    if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), r = r.copy(null, null, null, r.left.remove(t, e), null);else {\n      if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), 0 === e(t, r.key)) {\n        if (r.right.isEmpty()) return Pt.EMPTY;\n        n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n      }\n      r = r.copy(null, null, null, null, r.right.remove(t, e));\n    }\n    return r.fixUp();\n  }\n  isRed() {\n    return this.color;\n  }\n  // Returns new tree after performing any needed rotations.\n  fixUp() {\n    let t = this;\n    return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n  }\n  moveRedLeft() {\n    let t = this.colorFlip();\n    return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), t = t.rotateLeft(), t = t.colorFlip()), t;\n  }\n  moveRedRight() {\n    let t = this.colorFlip();\n    return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n  }\n  rotateLeft() {\n    const t = this.copy(null, null, Pt.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, t, null);\n  }\n  rotateRight() {\n    const t = this.copy(null, null, Pt.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, t);\n  }\n  colorFlip() {\n    const t = this.left.copy(null, null, !this.left.color, null, null),\n      e = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, t, e);\n  }\n  // For testing.\n  checkMaxDepth() {\n    const t = this.check();\n    return Math.pow(2, t) <= this.size + 1;\n  }\n  // In a balanced RB tree, the black-depth (number of black nodes) from root to\n  // leaves is equal on both sides.  This function verifies that or asserts.\n  check() {\n    if (this.isRed() && this.left.isRed()) throw b();\n    if (this.right.isRed()) throw b();\n    const t = this.left.check();\n    if (t !== this.right.check()) throw b();\n    return t + (this.isRed() ? 0 : 1);\n  }\n}\n\n// end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nPt.EMPTY = null, Pt.RED = !0, Pt.BLACK = !1;\n\n// end LLRBEmptyNode\nPt.EMPTY = new\n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n  constructor() {\n    this.size = 0;\n  }\n  get key() {\n    throw b();\n  }\n  get value() {\n    throw b();\n  }\n  get color() {\n    throw b();\n  }\n  get left() {\n    throw b();\n  }\n  get right() {\n    throw b();\n  }\n  // Returns a copy of the current node.\n  copy(t, e, n, r, s) {\n    return this;\n  }\n  // Returns a copy of the tree, with the specified key/value added.\n  insert(t, e, n) {\n    return new Pt(t, e);\n  }\n  // Returns a copy of the tree, with the specified key removed.\n  remove(t, e) {\n    return this;\n  }\n  isEmpty() {\n    return !0;\n  }\n  inorderTraversal(t) {\n    return !1;\n  }\n  reverseTraversal(t) {\n    return !1;\n  }\n  minKey() {\n    return null;\n  }\n  maxKey() {\n    return null;\n  }\n  isRed() {\n    return !1;\n  }\n  // For testing.\n  checkMaxDepth() {\n    return !0;\n  }\n  check() {\n    return 0;\n  }\n}();\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass Vt {\n  constructor(t) {\n    this.comparator = t, this.data = new At(this.comparator);\n  }\n  has(t) {\n    return null !== this.data.get(t);\n  }\n  first() {\n    return this.data.minKey();\n  }\n  last() {\n    return this.data.maxKey();\n  }\n  get size() {\n    return this.data.size;\n  }\n  indexOf(t) {\n    return this.data.indexOf(t);\n  }\n  /** Iterates elements in order defined by \"comparator\" */\n  forEach(t) {\n    this.data.inorderTraversal((e, n) => (t(e), !1));\n  }\n  /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */\n  forEachInRange(t, e) {\n    const n = this.data.getIteratorFrom(t[0]);\n    for (; n.hasNext();) {\n      const r = n.getNext();\n      if (this.comparator(r.key, t[1]) >= 0) return;\n      e(r.key);\n    }\n  }\n  /**\n   * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n   */\n  forEachWhile(t, e) {\n    let n;\n    for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext();) {\n      if (!t(n.getNext().key)) return;\n    }\n  }\n  /** Finds the least element greater than or equal to `elem`. */\n  firstAfterOrEqual(t) {\n    const e = this.data.getIteratorFrom(t);\n    return e.hasNext() ? e.getNext().key : null;\n  }\n  getIterator() {\n    return new Nt(this.data.getIterator());\n  }\n  getIteratorFrom(t) {\n    return new Nt(this.data.getIteratorFrom(t));\n  }\n  /** Inserts or updates an element */\n  add(t) {\n    return this.copy(this.data.remove(t).insert(t, !0));\n  }\n  /** Deletes an element */\n  delete(t) {\n    return this.has(t) ? this.copy(this.data.remove(t)) : this;\n  }\n  isEmpty() {\n    return this.data.isEmpty();\n  }\n  unionWith(t) {\n    let e = this;\n    // Make sure `result` always refers to the larger one of the two sets.\n    return e.size < t.size && (e = t, t = this), t.forEach(t => {\n      e = e.add(t);\n    }), e;\n  }\n  isEqual(t) {\n    if (!(t instanceof Vt)) return !1;\n    if (this.size !== t.size) return !1;\n    const e = this.data.getIterator(),\n      n = t.data.getIterator();\n    for (; e.hasNext();) {\n      const t = e.getNext().key,\n        r = n.getNext().key;\n      if (0 !== this.comparator(t, r)) return !1;\n    }\n    return !0;\n  }\n  toArray() {\n    const t = [];\n    return this.forEach(e => {\n      t.push(e);\n    }), t;\n  }\n  toString() {\n    const t = [];\n    return this.forEach(e => t.push(e)), \"SortedSet(\" + t.toString() + \")\";\n  }\n  copy(t) {\n    const e = new Vt(this.comparator);\n    return e.data = t, e;\n  }\n}\nclass Nt {\n  constructor(t) {\n    this.iter = t;\n  }\n  getNext() {\n    return this.iter.getNext().key;\n  }\n  hasNext() {\n    return this.iter.hasNext();\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */\nclass $t {\n  constructor(t) {\n    this.fields = t,\n    // TODO(dimond): validation of FieldMask\n    // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n    t.sort(nt.comparator);\n  }\n  static empty() {\n    return new $t([]);\n  }\n  /**\n   * Returns a new FieldMask object that is the result of adding all the given\n   * fields paths to this field mask.\n   */\n  unionWith(t) {\n    let e = new Vt(nt.comparator);\n    for (const t of this.fields) e = e.add(t);\n    for (const n of t) e = e.add(n);\n    return new $t(e.toArray());\n  }\n  /**\n   * Verifies that `fieldPath` is included by at least one field in this field\n   * mask.\n   *\n   * This is an O(n) operation, where `n` is the size of the field mask.\n   */\n  covers(t) {\n    for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n    return !1;\n  }\n  isEqual(t) {\n    return vt(this.fields, t.fields, (t, e) => t.isEqual(e));\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass Dt {\n  constructor(t) {\n    this.binaryString = t;\n  }\n  static fromBase64String(t) {\n    const e = atob(t);\n    return new Dt(e);\n  }\n  static fromUint8Array(t) {\n    // TODO(indexing); Remove the copy of the byte string here as this method\n    // is frequently called during indexing.\n    const e =\n    /**\n    * Helper function to convert an Uint8array to a binary string.\n    */\n    function (t) {\n      let e = \"\";\n      for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n      return e;\n    }\n    /**\n    * Helper function to convert a binary string to an Uint8Array.\n    */(t);\n    return new Dt(e);\n  }\n  [Symbol.iterator]() {\n    let t = 0;\n    return {\n      next: () => t < this.binaryString.length ? {\n        value: this.binaryString.charCodeAt(t++),\n        done: !1\n      } : {\n        value: void 0,\n        done: !0\n      }\n    };\n  }\n  toBase64() {\n    return t = this.binaryString, btoa(t);\n    /** Converts a binary string to a Base64 encoded string. */\n    var t;\n  }\n  toUint8Array() {\n    return function (t) {\n      const e = new Uint8Array(t.length);\n      for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n      return e;\n    }\n    /**\n    * @license\n    * Copyright 2020 Google LLC\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *   http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n    (this.binaryString);\n  }\n  approximateByteSize() {\n    return 2 * this.binaryString.length;\n  }\n  compareTo(t) {\n    return gt(this.binaryString, t.binaryString);\n  }\n  isEqual(t) {\n    return this.binaryString === t.binaryString;\n  }\n}\nDt.EMPTY_BYTE_STRING = new Dt(\"\");\nconst xt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */\nfunction Ft(t) {\n  // The json interface (for the browser) will return an iso timestamp string,\n  // while the proto js library (for node) will return a\n  // google.protobuf.Timestamp instance.\n  if (E(!!t), \"string\" == typeof t) {\n    // The date string can have higher precision (nanos) than the Date class\n    // (millis), so we do some custom parsing here.\n    // Parse the nanos right out of the string.\n    let e = 0;\n    const n = xt.exec(t);\n    if (E(!!n), n[1]) {\n      // Pad the fraction out to 9 digits (nanos).\n      let t = n[1];\n      t = (t + \"000000000\").substr(0, 9), e = Number(t);\n    }\n    // Parse the date to get the seconds.\n    const r = new Date(t);\n    return {\n      seconds: Math.floor(r.getTime() / 1e3),\n      nanos: e\n    };\n  }\n  return {\n    seconds: St(t.seconds),\n    nanos: St(t.nanos)\n  };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */\nfunction St(t) {\n  // TODO(bjornick): Handle int64 greater than 53 bits.\n  return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */\nfunction qt(t) {\n  return \"string\" == typeof t ? Dt.fromBase64String(t) : Dt.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */\nfunction Ot(t) {\n  var e, n;\n  return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */\nfunction kt(t) {\n  const e = t.mapValue.fields.__previous_value__;\n  return Ot(e) ? kt(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */\nfunction Ct(t) {\n  const e = Ft(t.mapValue.fields.__local_write_time__.timestampValue);\n  return new bt(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst Lt = {\n  fields: {\n    __type__: {\n      stringValue: \"__max__\"\n    }\n  }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction Mt(t) {\n  return \"nullValue\" in t ? 0 /* NullValue */ : \"booleanValue\" in t ? 1 /* BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* NumberValue */ : \"timestampValue\" in t ? 3 /* TimestampValue */ : \"stringValue\" in t ? 5 /* StringValue */ : \"bytesValue\" in t ? 6 /* BlobValue */ : \"referenceValue\" in t ? 7 /* RefValue */ : \"geoPointValue\" in t ? 8 /* GeoPointValue */ : \"arrayValue\" in t ? 9 /* ArrayValue */ : \"mapValue\" in t ? Ot(t) ? 4 /* ServerTimestampValue */ : /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n  function (t) {\n    return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n  }\n  /**\n  * @license\n  * Copyright 2017 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n  /**\n  * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n  * ability to add and remove fields (via the ObjectValueBuilder).\n  */(t) ? 9007199254740991 /* MaxValue */ : 10 /* ObjectValue */ : b();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */\nfunction Ut(t, e) {\n  if (t === e) return !0;\n  const n = Mt(t);\n  if (n !== Mt(e)) return !1;\n  switch (n) {\n    case 0 /* NullValue */:\n    case 9007199254740991 /* MaxValue */:\n      return !0;\n    case 1 /* BooleanValue */:\n      return t.booleanValue === e.booleanValue;\n    case 4 /* ServerTimestampValue */:\n      return Ct(t).isEqual(Ct(e));\n    case 3 /* TimestampValue */:\n      return function (t, e) {\n        if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length)\n          // Use string equality for ISO 8601 timestamps\n          return t.timestampValue === e.timestampValue;\n        const n = Ft(t.timestampValue),\n          r = Ft(e.timestampValue);\n        return n.seconds === r.seconds && n.nanos === r.nanos;\n      }(t, e);\n    case 5 /* StringValue */:\n      return t.stringValue === e.stringValue;\n    case 6 /* BlobValue */:\n      return function (t, e) {\n        return qt(t.bytesValue).isEqual(qt(e.bytesValue));\n      }(t, e);\n    case 7 /* RefValue */:\n      return t.referenceValue === e.referenceValue;\n    case 8 /* GeoPointValue */:\n      return function (t, e) {\n        return St(t.geoPointValue.latitude) === St(e.geoPointValue.latitude) && St(t.geoPointValue.longitude) === St(e.geoPointValue.longitude);\n      }(t, e);\n    case 2 /* NumberValue */:\n      return function (t, e) {\n        if (\"integerValue\" in t && \"integerValue\" in e) return St(t.integerValue) === St(e.integerValue);\n        if (\"doubleValue\" in t && \"doubleValue\" in e) {\n          const n = St(t.doubleValue),\n            r = St(e.doubleValue);\n          return n === r ? lt(n) === lt(r) : isNaN(n) && isNaN(r);\n        }\n        return !1;\n      }(t, e);\n    case 9 /* ArrayValue */:\n      return vt(t.arrayValue.values || [], e.arrayValue.values || [], Ut);\n    case 10 /* ObjectValue */:\n      return function (t, e) {\n        const n = t.mapValue.fields || {},\n          r = e.mapValue.fields || {};\n        if (It(n) !== It(r)) return !1;\n        for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !Ut(n[t], r[t]))) return !1;\n        return !0;\n      }\n      /** Returns true if the ArrayValue contains the specified element. */(t, e);\n    default:\n      return b();\n  }\n}\nfunction jt(t, e) {\n  return void 0 !== (t.values || []).find(t => Ut(t, e));\n}\nfunction Bt(t, e) {\n  if (t === e) return 0;\n  const n = Mt(t),\n    r = Mt(e);\n  if (n !== r) return gt(n, r);\n  switch (n) {\n    case 0 /* NullValue */:\n    case 9007199254740991 /* MaxValue */:\n      return 0;\n    case 1 /* BooleanValue */:\n      return gt(t.booleanValue, e.booleanValue);\n    case 2 /* NumberValue */:\n      return function (t, e) {\n        const n = St(t.integerValue || t.doubleValue),\n          r = St(e.integerValue || e.doubleValue);\n        return n < r ? -1 : n > r ? 1 : n === r ? 0 :\n        // one or both are NaN.\n        isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n      }(t, e);\n    case 3 /* TimestampValue */:\n      return Qt(t.timestampValue, e.timestampValue);\n    case 4 /* ServerTimestampValue */:\n      return Qt(Ct(t), Ct(e));\n    case 5 /* StringValue */:\n      return gt(t.stringValue, e.stringValue);\n    case 6 /* BlobValue */:\n      return function (t, e) {\n        const n = qt(t),\n          r = qt(e);\n        return n.compareTo(r);\n      }(t.bytesValue, e.bytesValue);\n    case 7 /* RefValue */:\n      return function (t, e) {\n        const n = t.split(\"/\"),\n          r = e.split(\"/\");\n        for (let t = 0; t < n.length && t < r.length; t++) {\n          const e = gt(n[t], r[t]);\n          if (0 !== e) return e;\n        }\n        return gt(n.length, r.length);\n      }(t.referenceValue, e.referenceValue);\n    case 8 /* GeoPointValue */:\n      return function (t, e) {\n        const n = gt(St(t.latitude), St(e.latitude));\n        if (0 !== n) return n;\n        return gt(St(t.longitude), St(e.longitude));\n      }(t.geoPointValue, e.geoPointValue);\n    case 9 /* ArrayValue */:\n      return function (t, e) {\n        const n = t.values || [],\n          r = e.values || [];\n        for (let t = 0; t < n.length && t < r.length; ++t) {\n          const e = Bt(n[t], r[t]);\n          if (e) return e;\n        }\n        return gt(n.length, r.length);\n      }(t.arrayValue, e.arrayValue);\n    case 10 /* ObjectValue */:\n      return function (t, e) {\n        if (t === Lt && e === Lt) return 0;\n        if (t === Lt) return 1;\n        if (e === Lt) return -1;\n        const n = t.fields || {},\n          r = Object.keys(n),\n          s = e.fields || {},\n          i = Object.keys(s);\n        // Even though MapValues are likely sorted correctly based on their insertion\n        // order (e.g. when received from the backend), local modifications can bring\n        // elements out of order. We need to re-sort the elements to ensure that\n        // canonical IDs are independent of insertion order.\n        r.sort(), i.sort();\n        for (let t = 0; t < r.length && t < i.length; ++t) {\n          const e = gt(r[t], i[t]);\n          if (0 !== e) return e;\n          const o = Bt(n[r[t]], s[i[t]]);\n          if (0 !== o) return o;\n        }\n        return gt(r.length, i.length);\n      }\n      /** Returns a reference value for the provided database and key. */(t.mapValue, e.mapValue);\n    default:\n      throw b();\n  }\n}\nfunction Qt(t, e) {\n  if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return gt(t, e);\n  const n = Ft(t),\n    r = Ft(e),\n    s = gt(n.seconds, r.seconds);\n  return 0 !== s ? s : gt(n.nanos, r.nanos);\n}\nfunction zt(t, e) {\n  return {\n    referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n  };\n}\n\n/** Returns true if `value` is an ArrayValue. */\nfunction Gt(t) {\n  return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */\nfunction Wt(t) {\n  return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */\nfunction Kt(t) {\n  return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */\nfunction Yt(t) {\n  return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */\nfunction Ht(t) {\n  if (t.geoPointValue) return {\n    geoPointValue: Object.assign({}, t.geoPointValue)\n  };\n  if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n    timestampValue: Object.assign({}, t.timestampValue)\n  };\n  if (t.mapValue) {\n    const e = {\n      mapValue: {\n        fields: {}\n      }\n    };\n    return Tt(t.mapValue.fields, (t, n) => e.mapValue.fields[t] = Ht(n)), e;\n  }\n  if (t.arrayValue) {\n    const e = {\n      arrayValue: {\n        values: []\n      }\n    };\n    for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Ht(t.arrayValue.values[n]);\n    return e;\n  }\n  return Object.assign({}, t);\n}\nclass Jt {\n  constructor(t) {\n    this.value = t;\n  }\n  static empty() {\n    return new Jt({\n      mapValue: {}\n    });\n  }\n  /**\n   * Returns the value at the given path or null.\n   *\n   * @param path - the path to search\n   * @returns The value at the path or null if the path is not set.\n   */\n  field(t) {\n    if (t.isEmpty()) return this.value;\n    {\n      let e = this.value;\n      for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], !Yt(e)) return null;\n      return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n    }\n  }\n  /**\n   * Sets the field to the provided value.\n   *\n   * @param path - The field path to set.\n   * @param value - The value to set.\n   */\n  set(t, e) {\n    this.getFieldsMap(t.popLast())[t.lastSegment()] = Ht(e);\n  }\n  /**\n   * Sets the provided fields to the provided values.\n   *\n   * @param data - A map of fields to values (or null for deletes).\n   */\n  setAll(t) {\n    let e = nt.emptyPath(),\n      n = {},\n      r = [];\n    t.forEach((t, s) => {\n      if (!e.isImmediateParentOf(s)) {\n        // Insert the accumulated changes at this parent location\n        const t = this.getFieldsMap(e);\n        this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n      }\n      t ? n[s.lastSegment()] = Ht(t) : r.push(s.lastSegment());\n    });\n    const s = this.getFieldsMap(e);\n    this.applyChanges(s, n, r);\n  }\n  /**\n   * Removes the field at the specified path. If there is no field at the\n   * specified path, nothing is changed.\n   *\n   * @param path - The field path to remove.\n   */\n  delete(t) {\n    const e = this.field(t.popLast());\n    Yt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n  }\n  isEqual(t) {\n    return Ut(this.value, t.value);\n  }\n  /**\n   * Returns the map that contains the leaf element of `path`. If the parent\n   * entry does not yet exist, or if it is not a map, a new map will be created.\n   */\n  getFieldsMap(t) {\n    let e = this.value;\n    e.mapValue.fields || (e.mapValue = {\n      fields: {}\n    });\n    for (let n = 0; n < t.length; ++n) {\n      let r = e.mapValue.fields[t.get(n)];\n      Yt(r) && r.mapValue.fields || (r = {\n        mapValue: {\n          fields: {}\n        }\n      }, e.mapValue.fields[t.get(n)] = r), e = r;\n    }\n    return e.mapValue.fields;\n  }\n  /**\n   * Modifies `fieldsMap` by adding, replacing or deleting the specified\n   * entries.\n   */\n  applyChanges(t, e, n) {\n    Tt(e, (e, n) => t[e] = n);\n    for (const e of n) delete t[e];\n  }\n  clone() {\n    return new Jt(Ht(this.value));\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */\nclass Xt {\n  constructor(t, e, n, r, s, i) {\n    this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.data = s, this.documentState = i;\n  }\n  /**\n   * Creates a document with no known version or data, but which can serve as\n   * base document for mutations.\n   */\n  static newInvalidDocument(t) {\n    return new Xt(t, 0 /* INVALID */, Et.min(), Et.min(), Jt.empty(), 0 /* SYNCED */);\n  }\n  /**\n   * Creates a new document that is known to exist with the given data at the\n   * given version.\n   */\n  static newFoundDocument(t, e, n) {\n    return new Xt(t, 1 /* FOUND_DOCUMENT */, e, Et.min(), n, 0 /* SYNCED */);\n  }\n  /** Creates a new document that is known to not exist at the given version. */\n  static newNoDocument(t, e) {\n    return new Xt(t, 2 /* NO_DOCUMENT */, e, Et.min(), Jt.empty(), 0 /* SYNCED */);\n  }\n  /**\n   * Creates a new document that is known to exist at the given version but\n   * whose data is not known (e.g. a document that was updated without a known\n   * base document).\n   */\n  static newUnknownDocument(t, e) {\n    return new Xt(t, 3 /* UNKNOWN_DOCUMENT */, e, Et.min(), Jt.empty(), 2 /* HAS_COMMITTED_MUTATIONS */);\n  }\n  /**\n   * Changes the document type to indicate that it exists and that its version\n   * and data are known.\n   */\n  convertToFoundDocument(t, e) {\n    return this.version = t, this.documentType = 1 /* FOUND_DOCUMENT */, this.data = e, this.documentState = 0 /* SYNCED */, this;\n  }\n  /**\n   * Changes the document type to indicate that it doesn't exist at the given\n   * version.\n   */\n  convertToNoDocument(t) {\n    return this.version = t, this.documentType = 2 /* NO_DOCUMENT */, this.data = Jt.empty(), this.documentState = 0 /* SYNCED */, this;\n  }\n  /**\n   * Changes the document type to indicate that it exists at a given version but\n   * that its data is not known (e.g. a document that was updated without a known\n   * base document).\n   */\n  convertToUnknownDocument(t) {\n    return this.version = t, this.documentType = 3 /* UNKNOWN_DOCUMENT */, this.data = Jt.empty(), this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */, this;\n  }\n  setHasCommittedMutations() {\n    return this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */, this;\n  }\n  setHasLocalMutations() {\n    return this.documentState = 1 /* HAS_LOCAL_MUTATIONS */, this.version = Et.min(), this;\n  }\n  setReadTime(t) {\n    return this.readTime = t, this;\n  }\n  get hasLocalMutations() {\n    return 1 /* HAS_LOCAL_MUTATIONS */ === this.documentState;\n  }\n  get hasCommittedMutations() {\n    return 2 /* HAS_COMMITTED_MUTATIONS */ === this.documentState;\n  }\n  get hasPendingWrites() {\n    return this.hasLocalMutations || this.hasCommittedMutations;\n  }\n  isValidDocument() {\n    return 0 /* INVALID */ !== this.documentType;\n  }\n  isFoundDocument() {\n    return 1 /* FOUND_DOCUMENT */ === this.documentType;\n  }\n  isNoDocument() {\n    return 2 /* NO_DOCUMENT */ === this.documentType;\n  }\n  isUnknownDocument() {\n    return 3 /* UNKNOWN_DOCUMENT */ === this.documentType;\n  }\n  isEqual(t) {\n    return t instanceof Xt && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n  }\n  mutableCopy() {\n    return new Xt(this.key, this.documentType, this.version, this.readTime, this.data.clone(), this.documentState);\n  }\n  toString() {\n    return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n  }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass Zt {\n  constructor(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    let i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n    let o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n    this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, this.startAt = i, this.endAt = o, this.D = null;\n  }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */\nfunction te(t) {\n  let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  let i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n  let o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  return new Zt(t, e, n, r, s, i, o);\n}\nclass ee extends class {} {\n  constructor(t, e, n) {\n    super(), this.field = t, this.op = e, this.value = n;\n  }\n  /**\n   * Creates a filter based on the provided arguments.\n   */\n  static create(t, e, n) {\n    return t.isKeyField() ? \"in\" /* IN */ === e || \"not-in\" /* NOT_IN */ === e ? this.F(t, e, n) : new ne(t, e, n) : \"array-contains\" /* ARRAY_CONTAINS */ === e ? new oe(t, n) : \"in\" /* IN */ === e ? new ue(t, n) : \"not-in\" /* NOT_IN */ === e ? new ce(t, n) : \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === e ? new ae(t, n) : new ee(t, e, n);\n  }\n  static F(t, e, n) {\n    return \"in\" /* IN */ === e ? new re(t, n) : new se(t, n);\n  }\n  matches(t) {\n    const e = t.data.field(this.field);\n    // Types do not have to match in NOT_EQUAL filters.\n    return \"!=\" /* NOT_EQUAL */ === this.op ? null !== e && this.S(Bt(e, this.value)) : null !== e && Mt(this.value) === Mt(e) && this.S(Bt(e, this.value));\n    // Only compare types with matching backend order (such as double and int).\n  }\n\n  S(t) {\n    switch (this.op) {\n      case \"<\" /* LESS_THAN */:\n        return t < 0;\n      case \"<=\" /* LESS_THAN_OR_EQUAL */:\n        return t <= 0;\n      case \"==\" /* EQUAL */:\n        return 0 === t;\n      case \"!=\" /* NOT_EQUAL */:\n        return 0 !== t;\n      case \">\" /* GREATER_THAN */:\n        return t > 0;\n      case \">=\" /* GREATER_THAN_OR_EQUAL */:\n        return t >= 0;\n      default:\n        return b();\n    }\n  }\n  q() {\n    return [\"<\" /* LESS_THAN */, \"<=\" /* LESS_THAN_OR_EQUAL */, \">\" /* GREATER_THAN */, \">=\" /* GREATER_THAN_OR_EQUAL */, \"!=\" /* NOT_EQUAL */, \"not-in\" /* NOT_IN */].indexOf(this.op) >= 0;\n  }\n}\n\n/** Filter that matches on key fields (i.e. '__name__'). */\nclass ne extends ee {\n  constructor(t, e, n) {\n    super(t, e, n), this.key = rt.fromName(n.referenceValue);\n  }\n  matches(t) {\n    const e = rt.comparator(t.key, this.key);\n    return this.S(e);\n  }\n}\n\n/** Filter that matches on key fields within an array. */\nclass re extends ee {\n  constructor(t, e) {\n    super(t, \"in\" /* IN */, e), this.keys = ie(\"in\" /* IN */, e);\n  }\n  matches(t) {\n    return this.keys.some(e => e.isEqual(t.key));\n  }\n}\n\n/** Filter that matches on key fields not present within an array. */\nclass se extends ee {\n  constructor(t, e) {\n    super(t, \"not-in\" /* NOT_IN */, e), this.keys = ie(\"not-in\" /* NOT_IN */, e);\n  }\n  matches(t) {\n    return !this.keys.some(e => e.isEqual(t.key));\n  }\n}\nfunction ie(t, e) {\n  var n;\n  return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map(t => rt.fromName(t.referenceValue));\n}\n\n/** A Filter that implements the array-contains operator. */\nclass oe extends ee {\n  constructor(t, e) {\n    super(t, \"array-contains\" /* ARRAY_CONTAINS */, e);\n  }\n  matches(t) {\n    const e = t.data.field(this.field);\n    return Gt(e) && jt(e.arrayValue, this.value);\n  }\n}\n\n/** A Filter that implements the IN operator. */\nclass ue extends ee {\n  constructor(t, e) {\n    super(t, \"in\" /* IN */, e);\n  }\n  matches(t) {\n    const e = t.data.field(this.field);\n    return null !== e && jt(this.value.arrayValue, e);\n  }\n}\n\n/** A Filter that implements the not-in operator. */\nclass ce extends ee {\n  constructor(t, e) {\n    super(t, \"not-in\" /* NOT_IN */, e);\n  }\n  matches(t) {\n    if (jt(this.value.arrayValue, {\n      nullValue: \"NULL_VALUE\"\n    })) return !1;\n    const e = t.data.field(this.field);\n    return null !== e && !jt(this.value.arrayValue, e);\n  }\n}\n\n/** A Filter that implements the array-contains-any operator. */\nclass ae extends ee {\n  constructor(t, e) {\n    super(t, \"array-contains-any\" /* ARRAY_CONTAINS_ANY */, e);\n  }\n  matches(t) {\n    const e = t.data.field(this.field);\n    return !(!Gt(e) || !e.arrayValue.values) && e.arrayValue.values.some(t => jt(this.value.arrayValue, t));\n  }\n}\n\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */\nclass he {\n  constructor(t, e) {\n    this.position = t, this.inclusive = e;\n  }\n}\n\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */\nclass le {\n  constructor(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"asc\";\n    this.field = t, this.dir = e;\n  }\n}\nfunction fe(t, e) {\n  return t.dir === e.dir && t.field.isEqual(e.field);\n}\nfunction de(t, e) {\n  if (null === t) return null === e;\n  if (null === e) return !1;\n  if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n  for (let n = 0; n < t.position.length; n++) {\n    if (!Ut(t.position[n], e.position[n])) return !1;\n  }\n  return !0;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\nclass we {\n  /**\n   * Initializes a Query with a path and optional additional query constraints.\n   * Path must currently be empty if this is a collection group query.\n   */\n  constructor(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    let i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : \"F\";\n    let o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n    let u = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n    this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.O = null,\n    // The corresponding `Target` of this `Query` instance.\n    this.k = null, this.startAt, this.endAt;\n  }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */\nfunction me(t) {\n  return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\nfunction pe(t) {\n  for (const e of t.filters) if (e.q()) return e.field;\n  return null;\n}\n\n/**\n * Checks if any of the provided Operators are included in the query and\n * returns the first one that is, or null if none are.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction ye(t) {\n  return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */\nfunction _e(t) {\n  const e = I(t);\n  if (null === e.O) {\n    e.O = [];\n    const t = pe(e),\n      n = me(e);\n    if (null !== t && null === n)\n      // In order to implicitly add key ordering, we must also add the\n      // inequality filter field for it to be a valid query.\n      // Note that the default inequality field and key ordering is ascending.\n      t.isKeyField() || e.O.push(new le(t)), e.O.push(new le(nt.keyField(), \"asc\" /* ASCENDING */));else {\n      let t = !1;\n      for (const n of e.explicitOrderBy) e.O.push(n), n.field.isKeyField() && (t = !0);\n      if (!t) {\n        // The order of the implicit key ordering always matches the last\n        // explicit order by\n        const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* ASCENDING */;\n        e.O.push(new le(nt.keyField(), t));\n      }\n    }\n  }\n  return e.O;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */\nfunction ge(t) {\n  const e = I(t);\n  if (!e.k) if (\"F\" /* First */ === e.limitType) e.k = te(e.path, e.collectionGroup, _e(e), e.filters, e.limit, e.startAt, e.endAt);else {\n    // Flip the orderBy directions since we want the last results\n    const t = [];\n    for (const n of _e(e)) {\n      const e = \"desc\" /* DESCENDING */ === n.dir ? \"asc\" /* ASCENDING */ : \"desc\" /* DESCENDING */;\n      t.push(new le(n.field, e));\n    }\n    // We need to swap the cursors to match the now-flipped query ordering.\n    const n = e.endAt ? new he(e.endAt.position, e.endAt.inclusive) : null,\n      r = e.startAt ? new he(e.startAt.position, e.startAt.inclusive) : null;\n    // Now return as a LimitType.First query.\n    e.k = te(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n  }\n  return e.k;\n}\nfunction ve(t, e) {\n  return function (t, e) {\n    if (t.limit !== e.limit) return !1;\n    if (t.orderBy.length !== e.orderBy.length) return !1;\n    for (let n = 0; n < t.orderBy.length; n++) if (!fe(t.orderBy[n], e.orderBy[n])) return !1;\n    if (t.filters.length !== e.filters.length) return !1;\n    for (let s = 0; s < t.filters.length; s++) if (n = t.filters[s], r = e.filters[s], n.op !== r.op || !n.field.isEqual(r.field) || !Ut(n.value, r.value)) return !1;\n    var n, r;\n    return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!de(t.startAt, e.startAt) && de(t.endAt, e.endAt);\n  }(ge(t), ge(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction be(t, e) {\n  return function (t) {\n    return \"number\" == typeof t && Number.isInteger(t) && !lt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n  }(e) ?\n  /**\n  * Returns an IntegerValue for `value`.\n  */\n  function (t) {\n    return {\n      integerValue: \"\" + t\n    };\n  }(e) : function (t, e) {\n    if (t.C) {\n      if (isNaN(e)) return {\n        doubleValue: \"NaN\"\n      };\n      if (e === 1 / 0) return {\n        doubleValue: \"Infinity\"\n      };\n      if (e === -1 / 0) return {\n        doubleValue: \"-Infinity\"\n      };\n    }\n    return {\n      doubleValue: lt(e) ? \"-0\" : e\n    };\n  }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */\nclass Ee {\n  constructor() {\n    // Make sure that the structural type of `TransformOperation` is unique.\n    // See https://github.com/microsoft/TypeScript/issues/5451\n    this._ = void 0;\n  }\n}\n\n/** Transforms a value into a server-generated timestamp. */\nclass Ie extends Ee {}\n\n/** Transforms an array value via a union operation. */\nclass Te extends Ee {\n  constructor(t) {\n    super(), this.elements = t;\n  }\n}\n\n/** Transforms an array value via a remove operation. */\nclass Ae extends Ee {\n  constructor(t) {\n    super(), this.elements = t;\n  }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */\nclass Re extends Ee {\n  constructor(t, e) {\n    super(), this.L = t, this.M = e;\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */\nclass Pe {\n  constructor(t, e) {\n    this.field = t, this.transform = e;\n  }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */\nclass Ve {\n  constructor(t, e) {\n    this.updateTime = t, this.exists = e;\n  }\n  /** Creates a new empty Precondition. */\n  static none() {\n    return new Ve();\n  }\n  /** Creates a new Precondition with an exists flag. */\n  static exists(t) {\n    return new Ve(void 0, t);\n  }\n  /** Creates a new Precondition based on a version a document exists at. */\n  static updateTime(t) {\n    return new Ve(t);\n  }\n  /** Returns whether this Precondition is empty. */\n  get isNone() {\n    return void 0 === this.updateTime && void 0 === this.exists;\n  }\n  isEqual(t) {\n    return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n  }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */\nclass Ne {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */\nclass $e extends Ne {\n  constructor(t, e, n) {\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, this.type = 0 /* Set */;\n  }\n\n  getFieldMask() {\n    return null;\n  }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */\nclass De extends Ne {\n  constructor(t, e, n, r) {\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n    super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, this.fieldTransforms = s, this.type = 1 /* Patch */;\n  }\n\n  getFieldMask() {\n    return this.fieldMask;\n  }\n}\n\n/** A mutation that deletes the document at the given key. */\nclass xe extends Ne {\n  constructor(t, e) {\n    super(), this.key = t, this.precondition = e, this.type = 2 /* Delete */, this.fieldTransforms = [];\n  }\n  getFieldMask() {\n    return null;\n  }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */\nclass Fe extends Ne {\n  constructor(t, e) {\n    super(), this.key = t, this.precondition = e, this.type = 3 /* Verify */, this.fieldTransforms = [];\n  }\n  getFieldMask() {\n    return null;\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst Se = (() => {\n    const t = {\n      asc: \"ASCENDING\",\n      desc: \"DESCENDING\"\n    };\n    return t;\n  })(),\n  qe = (() => {\n    const t = {\n      \"<\": \"LESS_THAN\",\n      \"<=\": \"LESS_THAN_OR_EQUAL\",\n      \">\": \"GREATER_THAN\",\n      \">=\": \"GREATER_THAN_OR_EQUAL\",\n      \"==\": \"EQUAL\",\n      \"!=\": \"NOT_EQUAL\",\n      \"array-contains\": \"ARRAY_CONTAINS\",\n      in: \"IN\",\n      \"not-in\": \"NOT_IN\",\n      \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n  })();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Oe {\n  constructor(t, e) {\n    this.databaseId = t, this.C = e;\n  }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction ke(t, e) {\n  if (t.C) {\n    return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n  }\n  return {\n    seconds: \"\" + e.seconds,\n    nanos: e.nanoseconds\n  };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Ce(t, e) {\n  return t.C ? e.toBase64() : e.toUint8Array();\n}\nfunction Le(t, e) {\n  return ke(t, e.toTimestamp());\n}\nfunction Me(t) {\n  return E(!!t), Et.fromTimestamp(function (t) {\n    const e = Ft(t);\n    return new bt(e.seconds, e.nanos);\n  }(t));\n}\nfunction Ue(t, e) {\n  return function (t) {\n    return new tt([\"projects\", t.projectId, \"databases\", t.database]);\n  }(t).child(\"documents\").child(e).canonicalString();\n}\nfunction je(t, e) {\n  return Ue(t.databaseId, e.path);\n}\nfunction Be(t, e) {\n  const n = function (t) {\n    const e = tt.fromString(t);\n    return E(tn(e)), e;\n  }(e);\n  if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n  if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n  return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n  var r;\n  /** Creates a Document proto from key and fields (but no create/update time) */\n}\n\nfunction Qe(t, e) {\n  return Ue(t.databaseId, e);\n}\nfunction ze(t) {\n  return new tt([\"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database]).canonicalString();\n}\nfunction Ge(t, e, n) {\n  return {\n    name: je(t, e),\n    fields: n.value.mapValue.fields\n  };\n}\nfunction We(t, e) {\n  return \"found\" in e ? function (t, e) {\n    E(!!e.found), e.found.name, e.found.updateTime;\n    const n = Be(t, e.found.name),\n      r = Me(e.found.updateTime),\n      s = new Jt({\n        mapValue: {\n          fields: e.found.fields\n        }\n      });\n    return Xt.newFoundDocument(n, r, s);\n  }(t, e) : \"missing\" in e ? function (t, e) {\n    E(!!e.missing), E(!!e.readTime);\n    const n = Be(t, e.missing),\n      r = Me(e.readTime);\n    return Xt.newNoDocument(n, r);\n  }(t, e) : b();\n}\nfunction Ke(t, e) {\n  let n;\n  if (e instanceof $e) n = {\n    update: Ge(t, e.key, e.value)\n  };else if (e instanceof xe) n = {\n    delete: je(t, e.key)\n  };else if (e instanceof De) n = {\n    update: Ge(t, e.key, e.data),\n    updateMask: Ze(e.fieldMask)\n  };else {\n    if (!(e instanceof Fe)) return b();\n    n = {\n      verify: je(t, e.key)\n    };\n  }\n  return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map(t => function (t, e) {\n    const n = e.transform;\n    if (n instanceof Ie) return {\n      fieldPath: e.field.canonicalString(),\n      setToServerValue: \"REQUEST_TIME\"\n    };\n    if (n instanceof Te) return {\n      fieldPath: e.field.canonicalString(),\n      appendMissingElements: {\n        values: n.elements\n      }\n    };\n    if (n instanceof Ae) return {\n      fieldPath: e.field.canonicalString(),\n      removeAllFromArray: {\n        values: n.elements\n      }\n    };\n    if (n instanceof Re) return {\n      fieldPath: e.field.canonicalString(),\n      increment: n.M\n    };\n    throw b();\n  }(0, t))), e.precondition.isNone || (n.currentDocument = function (t, e) {\n    return void 0 !== e.updateTime ? {\n      updateTime: Le(t, e.updateTime)\n    } : void 0 !== e.exists ? {\n      exists: e.exists\n    } : b();\n  }(t, e.precondition)), n;\n}\nfunction Ye(t, e) {\n  // Dissect the path into parent, collectionId, and optional key filter.\n  const n = {\n      structuredQuery: {}\n    },\n    r = e.path;\n  null !== e.collectionGroup ? (n.parent = Qe(t, r), n.structuredQuery.from = [{\n    collectionId: e.collectionGroup,\n    allDescendants: !0\n  }]) : (n.parent = Qe(t, r.popLast()), n.structuredQuery.from = [{\n    collectionId: r.lastSegment()\n  }]);\n  const s = function (t) {\n    if (0 === t.length) return;\n    const e = t.map(t =>\n    // visible for testing\n    function (t) {\n      if (\"==\" /* EQUAL */ === t.op) {\n        if (Kt(t.value)) return {\n          unaryFilter: {\n            field: Xe(t.field),\n            op: \"IS_NAN\"\n          }\n        };\n        if (Wt(t.value)) return {\n          unaryFilter: {\n            field: Xe(t.field),\n            op: \"IS_NULL\"\n          }\n        };\n      } else if (\"!=\" /* NOT_EQUAL */ === t.op) {\n        if (Kt(t.value)) return {\n          unaryFilter: {\n            field: Xe(t.field),\n            op: \"IS_NOT_NAN\"\n          }\n        };\n        if (Wt(t.value)) return {\n          unaryFilter: {\n            field: Xe(t.field),\n            op: \"IS_NOT_NULL\"\n          }\n        };\n      }\n      return {\n        fieldFilter: {\n          field: Xe(t.field),\n          op: Je(t.op),\n          value: t.value\n        }\n      };\n    }(t));\n    if (1 === e.length) return e[0];\n    return {\n      compositeFilter: {\n        op: \"AND\",\n        filters: e\n      }\n    };\n  }(e.filters);\n  s && (n.structuredQuery.where = s);\n  const i = function (t) {\n    if (0 === t.length) return;\n    return t.map(t =>\n    // visible for testing\n    function (t) {\n      return {\n        field: Xe(t.field),\n        direction: He(t.dir)\n      };\n    }(t));\n  }(e.orderBy);\n  i && (n.structuredQuery.orderBy = i);\n  const o = function (t, e) {\n    return t.C || ht(e) ? e : {\n      value: e\n    };\n  }(t, e.limit);\n  var u;\n  return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n    before: (u = e.startAt).inclusive,\n    values: u.position\n  }), e.endAt && (n.structuredQuery.endAt = function (t) {\n    return {\n      before: !t.inclusive,\n      values: t.position\n    };\n  }\n  // visible for testing\n  (e.endAt)), n;\n}\nfunction He(t) {\n  return Se[t];\n}\n\n// visible for testing\nfunction Je(t) {\n  return qe[t];\n}\nfunction Xe(t) {\n  return {\n    fieldPath: t.canonicalString()\n  };\n}\nfunction Ze(t) {\n  const e = [];\n  return t.fields.forEach(t => e.push(t.canonicalString())), {\n    fieldPaths: e\n  };\n}\nfunction tn(t) {\n  // Resource names have at least 4 components (project ID, database ID)\n  return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction en(t) {\n  return new Oe(t, /* useProto3Json= */!0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass nn {\n  constructor(\n  /**\n   * The AsyncQueue to run backoff operations on.\n   */\n  t,\n  /**\n   * The ID to use when scheduling backoff operations on the AsyncQueue.\n   */\n  e) {\n    let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1e3;\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1.5;\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 6e4;\n    this.U = t, this.timerId = e, this.j = n, this.B = r, this.G = s, this.W = 0, this.K = null, /** The last backoff attempt, as epoch milliseconds. */\n    this.Y = Date.now(), this.reset();\n  }\n  /**\n   * Resets the backoff delay.\n   *\n   * The very next backoffAndWait() will have no delay. If it is called again\n   * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n   * subsequent ones will increase according to the backoffFactor.\n   */\n  reset() {\n    this.W = 0;\n  }\n  /**\n   * Resets the backoff delay to the maximum delay (e.g. for use after a\n   * RESOURCE_EXHAUSTED error).\n   */\n  H() {\n    this.W = this.G;\n  }\n  /**\n   * Returns a promise that resolves after currentDelayMs, and increases the\n   * delay for any subsequent attempts. If there was a pending backoff operation\n   * already, it will be canceled.\n   */\n  J(t) {\n    // Cancel any pending backoff operation.\n    this.cancel();\n    // First schedule using the current base (which may be 0 and should be\n    // honored as such).\n    const e = Math.floor(this.W + this.X()),\n      n = Math.max(0, Date.now() - this.Y),\n      r = Math.max(0, e - n);\n    // Guard against lastAttemptTime being in the future due to a clock change.\n    r > 0 && y(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.W} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), this.K = this.U.enqueueAfterDelay(this.timerId, r, () => (this.Y = Date.now(), t())),\n    // Apply backoff factor to determine next delay and ensure it is within\n    // bounds.\n    this.W *= this.B, this.W < this.j && (this.W = this.j), this.W > this.G && (this.W = this.G);\n  }\n  Z() {\n    null !== this.K && (this.K.skipDelay(), this.K = null);\n  }\n  cancel() {\n    null !== this.K && (this.K.cancel(), this.K = null);\n  }\n  /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */\n  X() {\n    return (Math.random() - .5) * this.W;\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass rn extends class {} {\n  constructor(t, e, n, r) {\n    super(), this.authCredentials = t, this.appCheckCredentials = e, this.connection = n, this.L = r, this.tt = !1;\n  }\n  et() {\n    if (this.tt) throw new U(S, \"The client has already been terminated.\");\n  }\n  /** Invokes the provided RPC with auth and AppCheck tokens. */\n  I(t, e, n) {\n    return this.et(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(_ref => {\n      let [r, s] = _ref;\n      return this.connection.I(t, e, n, r, s);\n    }).catch(t => {\n      throw \"FirebaseError\" === t.name ? (t.code === x && (this.authCredentials.invalidateToken(), this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n    });\n  }\n  /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */\n  P(t, e, n, r) {\n    return this.et(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(_ref2 => {\n      let [s, i] = _ref2;\n      return this.connection.P(t, e, n, s, i, r);\n    }).catch(t => {\n      throw \"FirebaseError\" === t.name ? (t.code === x && (this.authCredentials.invalidateToken(), this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n    });\n  }\n  terminate() {\n    this.tt = !0;\n  }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function sn(t, e) {\n  const n = I(t),\n    r = ze(n.L) + \"/documents\",\n    s = {\n      writes: e.map(t => Ke(n.L, t))\n    };\n  await n.I(\"Commit\", r, s);\n}\nasync function on(t, e) {\n  const n = I(t),\n    r = ze(n.L) + \"/documents\",\n    s = {\n      documents: e.map(t => je(n.L, t))\n    },\n    i = await n.P(\"BatchGetDocuments\", r, s, e.length),\n    o = new Map();\n  i.forEach(t => {\n    const e = We(n.L, t);\n    o.set(e.key.toString(), e);\n  });\n  const u = [];\n  return e.forEach(t => {\n    const e = o.get(t.toString());\n    E(!!e), u.push(e);\n  }), u;\n}\nasync function un(t, e) {\n  const n = I(t),\n    r = Ye(n.L, ge(e));\n  return (await n.P(\"RunQuery\", r.parent, {\n    structuredQuery: r.structuredQuery\n  })).filter(t => !!t.document).map(t => function (t, e, n) {\n    const r = Be(t, e.name),\n      s = Me(e.updateTime),\n      i = new Jt({\n        mapValue: {\n          fields: e.fields\n        }\n      }),\n      o = Xt.newFoundDocument(r, s, i);\n    return n && o.setHasCommittedMutations(), n ? o.setHasCommittedMutations() : o;\n  }(n.L, t.document, void 0));\n}\nasync function cn(t, e) {\n  const n = I(t),\n    r = function (t, e) {\n      const n = Ye(t, e);\n      return {\n        structuredAggregationQuery: {\n          aggregations: [{\n            count: {},\n            alias: \"count_alias\"\n          }],\n          structuredQuery: n.structuredQuery\n        },\n        parent: n.parent\n      };\n    }(n.L, ge(e)),\n    s = r.parent;\n  n.connection.v || delete r.parent;\n  return (await n.P(\"RunAggregationQuery\", s, r, /*expectedResponseCount=*/1)).filter(t => !!t.result).map(t => t.result.aggregateFields);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst an = new Map();\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction hn(t) {\n  if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n  if (!an.has(t)) {\n    y(\"ComponentProvider\", \"Initializing Datastore\");\n    const i = function (t) {\n        return new pt(t, fetch.bind(null));\n      }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), new J(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))),\n      o = en(t._databaseId),\n      u = function (t, e, n, r) {\n        return new rn(t, e, n, r);\n      }(t._authCredentials, t._appCheckCredentials, i, o);\n    an.set(t, u);\n  }\n  var e, n, r, s;\n  /**\n  * @license\n  * Copyright 2018 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n  return an.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass ln {\n  constructor(t) {\n    var e;\n    if (void 0 === t.host) {\n      if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n      this.host = \"firestore.googleapis.com\", this.ssl = true;\n    } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n    if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040;else {\n      if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n      this.cacheSizeBytes = t.cacheSizeBytes;\n    }\n    this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, this.useFetchStreams = !!t.useFetchStreams, function (t, e, n, r) {\n      if (!0 === e && !0 === r) throw new U(P, `${t} and ${n} cannot be used together.`);\n    }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n  }\n  isEqual(t) {\n    return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */\nclass fn {\n  /** @hideconstructor */\n  constructor(t, e, n, r) {\n    this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, this._app = r,\n    /**\n     * Whether it's a Firestore or Firestore Lite instance.\n     */\n    this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new ln({}), this._settingsFrozen = !1;\n  }\n  /**\n   * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n   * instance.\n   */\n  get app() {\n    if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n    return this._app;\n  }\n  get _initialized() {\n    return this._settingsFrozen;\n  }\n  get _terminated() {\n    return void 0 !== this._terminateTask;\n  }\n  _setSettings(t) {\n    if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n    this._settings = new ln(t), void 0 !== t.credentials && (this._authCredentials = function (t) {\n      if (!t) return new Q();\n      switch (t.type) {\n        case \"gapi\":\n          const e = t.client;\n          return new K(e, t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n        case \"provider\":\n          return t.client;\n        default:\n          throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n      }\n    }(t.credentials));\n  }\n  _getSettings() {\n    return this._settings;\n  }\n  _freezeSettings() {\n    return this._settingsFrozen = !0, this._settings;\n  }\n  _delete() {\n    return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n  }\n  /** Returns a JSON-serializable representation of this `Firestore` instance. */\n  toJSON() {\n    return {\n      app: this._app,\n      databaseId: this._databaseId,\n      settings: this._settings\n    };\n  }\n  /**\n   * Terminates all components used by this client. Subclasses can override\n   * this method to clean up their own dependencies, but must also call this\n   * method.\n   *\n   * Only ever called once.\n   */\n  _terminate() {\n    return function (t) {\n      const e = an.get(t);\n      e && (y(\"ComponentProvider\", \"Removing Datastore\"), an.delete(t), e.terminate());\n    }(this), Promise.resolve();\n  }\n}\nfunction dn(t, e, n) {\n  n || (n = \"(default)\");\n  const r = _getProvider(t, \"firestore/lite\");\n  if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n  return r.initialize({\n    options: e,\n    instanceIdentifier: n\n  });\n}\nfunction wn(e, n) {\n  const r = \"object\" == typeof e ? e : getApp(),\n    s = \"string\" == typeof e ? e : n || \"(default)\",\n    i = _getProvider(r, \"firestore/lite\").getImmediate({\n      identifier: s\n    });\n  if (!i._initialized) {\n    const t = getDefaultEmulatorHostnameAndPort(\"firestore\");\n    t && mn(i, ...t);\n  }\n  return i;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */\nfunction mn(t, e, n) {\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var s;\n  const i = (t = ct(t, fn))._getSettings();\n  if (\"firestore.googleapis.com\" !== i.host && i.host !== e && g(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), t._setSettings(Object.assign(Object.assign({}, i), {\n    host: `${e}:${n}`,\n    ssl: !1\n  })), r.mockUserToken) {\n    let e, n;\n    if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = d.MOCK_USER;else {\n      // Let createMockUserToken validate first (catches common mistakes like\n      // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n      e = createMockUserToken(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n      const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n      if (!i) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n      n = new d(i);\n    }\n    t._authCredentials = new z(new B(e, n));\n  }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */\nfunction pn(t) {\n  return t = ct(t, fn), _removeServiceInstance(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass yn {\n  constructor() {\n    /** A type string to uniquely identify instances of this class. */\n    this.type = \"AggregateField\";\n  }\n}\n\n/**\n * The results of executing an aggregation query.\n */\nclass _n {\n  /** @hideconstructor */\n  constructor(t, e) {\n    this._data = e, /** A type string to uniquely identify instances of this class. */\n    this.type = \"AggregateQuerySnapshot\", this.query = t;\n  }\n  /**\n   * Returns the results of the aggregations performed over the underlying\n   * query.\n   *\n   * The keys of the returned object will be the same as those of the\n   * `AggregateSpec` object specified to the aggregation method, and the values\n   * will be the corresponding aggregation result.\n   *\n   * @returns The results of the aggregations performed over the underlying\n   * query.\n   */\n  data() {\n    return this._data;\n  }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * CountQueryRunner encapsulates the logic needed to run the count aggregation\n * queries.\n */\nclass gn {\n  constructor(t, e, n) {\n    this.query = t, this.datastore = e, this.userDataWriter = n;\n  }\n  run() {\n    return cn(this.datastore, this.query._query).then(t => {\n      E(void 0 !== t[0]);\n      const e = Object.entries(t[0]).filter(_ref3 => {\n        let [t, e] = _ref3;\n        return \"count_alias\" === t;\n      }).map(_ref4 => {\n        let [t, e] = _ref4;\n        return this.userDataWriter.convertValue(e);\n      })[0];\n      return E(\"number\" == typeof e), Promise.resolve(new _n(this.query, {\n        count: e\n      }));\n    });\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\nclass vn {\n  /** @hideconstructor */\n  constructor(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  e, n) {\n    this.converter = e, this._key = n, /** The type of this Firestore reference. */\n    this.type = \"document\", this.firestore = t;\n  }\n  get _path() {\n    return this._key.path;\n  }\n  /**\n   * The document's identifier within its collection.\n   */\n  get id() {\n    return this._key.path.lastSegment();\n  }\n  /**\n   * A string representing the path of the referenced document (relative\n   * to the root of the database).\n   */\n  get path() {\n    return this._key.path.canonicalString();\n  }\n  /**\n   * The collection this `DocumentReference` belongs to.\n   */\n  get parent() {\n    return new En(this.firestore, this.converter, this._key.path.popLast());\n  }\n  withConverter(t) {\n    return new vn(this.firestore, t, this._key);\n  }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */\nclass bn {\n  // This is the lite version of the Query class in the main SDK.\n  /** @hideconstructor protected */\n  constructor(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  e, n) {\n    this.converter = e, this._query = n, /** The type of this Firestore reference. */\n    this.type = \"query\", this.firestore = t;\n  }\n  withConverter(t) {\n    return new bn(this.firestore, t, this._query);\n  }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */\nclass En extends bn {\n  /** @hideconstructor */\n  constructor(t, e, n) {\n    super(t, e, new we(n)), this._path = n, /** The type of this Firestore reference. */\n    this.type = \"collection\";\n  }\n  /** The collection's identifier. */\n  get id() {\n    return this._query.path.lastSegment();\n  }\n  /**\n   * A string representing the path of the referenced collection (relative\n   * to the root of the database).\n   */\n  get path() {\n    return this._query.path.canonicalString();\n  }\n  /**\n   * A reference to the containing `DocumentReference` if this is a\n   * subcollection. If this isn't a subcollection, the reference is null.\n   */\n  get parent() {\n    const t = this._path.popLast();\n    return t.isEmpty() ? null : new vn(this.firestore, /* converter= */null, new rt(t));\n  }\n  withConverter(t) {\n    return new En(this.firestore, t, this._path);\n  }\n}\nfunction In(t, e) {\n  for (var _len5 = arguments.length, n = new Array(_len5 > 2 ? _len5 - 2 : 0), _key5 = 2; _key5 < _len5; _key5++) {\n    n[_key5 - 2] = arguments[_key5];\n  }\n  if (t = getModularInstance(t), st(\"collection\", \"path\", e), t instanceof fn) {\n    const r = tt.fromString(e, ...n);\n    return ot(r), new En(t, /* converter= */null, r);\n  }\n  {\n    if (!(t instanceof vn || t instanceof En)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n    const r = t._path.child(tt.fromString(e, ...n));\n    return ot(r), new En(t.firestore, /* converter= */null, r);\n  }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */\nfunction Tn(t, e) {\n  if (t = ct(t, fn), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n  return new bn(t, /* converter= */null,\n  /**\n  * Creates a new Query for a collection group query that matches all documents\n  * within the provided collection group.\n  */\n  function (t) {\n    return new we(tt.emptyPath(), t);\n  }(e));\n}\nfunction An(t, e) {\n  for (var _len6 = arguments.length, n = new Array(_len6 > 2 ? _len6 - 2 : 0), _key6 = 2; _key6 < _len6; _key6++) {\n    n[_key6 - 2] = arguments[_key6];\n  }\n  if (t = getModularInstance(t),\n  // We allow omission of 'pathString' but explicitly prohibit passing in both\n  // 'undefined' and 'null'.\n  1 === arguments.length && (e = _t.$()), st(\"doc\", \"path\", e), t instanceof fn) {\n    const r = tt.fromString(e, ...n);\n    return it(r), new vn(t, /* converter= */null, new rt(r));\n  }\n  {\n    if (!(t instanceof vn || t instanceof En)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n    const r = t._path.child(tt.fromString(e, ...n));\n    return it(r), new vn(t.firestore, t instanceof En ? t.converter : null, new rt(r));\n  }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\nfunction Rn(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), (t instanceof vn || t instanceof En) && (e instanceof vn || e instanceof En) && t.firestore === e.firestore && t.path === e.path && t.converter === e.converter;\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\nfunction Pn(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), t instanceof bn && e instanceof bn && t.firestore === e.firestore && ve(t._query, e._query) && t.converter === e.converter;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */\nclass Vn {\n  /** @hideconstructor */\n  constructor(t) {\n    this._byteString = t;\n  }\n  /**\n   * Creates a new `Bytes` object from the given Base64 string, converting it to\n   * bytes.\n   *\n   * @param base64 - The Base64 string used to create the `Bytes` object.\n   */\n  static fromBase64String(t) {\n    try {\n      return new Vn(Dt.fromBase64String(t));\n    } catch (t) {\n      throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n    }\n  }\n  /**\n   * Creates a new `Bytes` object from the given Uint8Array.\n   *\n   * @param array - The Uint8Array used to create the `Bytes` object.\n   */\n  static fromUint8Array(t) {\n    return new Vn(Dt.fromUint8Array(t));\n  }\n  /**\n   * Returns the underlying bytes as a Base64-encoded string.\n   *\n   * @returns The Base64-encoded string created from the `Bytes` object.\n   */\n  toBase64() {\n    return this._byteString.toBase64();\n  }\n  /**\n   * Returns the underlying bytes in a new `Uint8Array`.\n   *\n   * @returns The Uint8Array created from the `Bytes` object.\n   */\n  toUint8Array() {\n    return this._byteString.toUint8Array();\n  }\n  /**\n   * Returns a string representation of the `Bytes` object.\n   *\n   * @returns A string representation of the `Bytes` object.\n   */\n  toString() {\n    return \"Bytes(base64: \" + this.toBase64() + \")\";\n  }\n  /**\n   * Returns true if this `Bytes` object is equal to the provided one.\n   *\n   * @param other - The `Bytes` object to compare against.\n   * @returns true if this `Bytes` object is equal to the provided one.\n   */\n  isEqual(t) {\n    return this._byteString.isEqual(t._byteString);\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */\nclass Nn {\n  /**\n   * Creates a `FieldPath` from the provided field names. If more than one field\n   * name is provided, the path will point to a nested field in a document.\n   *\n   * @param fieldNames - A list of field names.\n   */\n  constructor() {\n    for (var _len7 = arguments.length, t = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      t[_key7] = arguments[_key7];\n    }\n    for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n    this._internalPath = new nt(t);\n  }\n  /**\n   * Returns true if this `FieldPath` is equal to the provided one.\n   *\n   * @param other - The `FieldPath` to compare against.\n   * @returns true if this `FieldPath` is equal to the provided one.\n   */\n  isEqual(t) {\n    return this._internalPath.isEqual(t._internalPath);\n  }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */\nfunction $n() {\n  return new Nn(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */\nclass Dn {\n  /**\n   * @param _methodName - The public API endpoint that returns this class.\n   * @hideconstructor\n   */\n  constructor(t) {\n    this._methodName = t;\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */\nclass xn {\n  /**\n   * Creates a new immutable `GeoPoint` object with the provided latitude and\n   * longitude values.\n   * @param latitude - The latitude as number between -90 and 90.\n   * @param longitude - The longitude as number between -180 and 180.\n   */\n  constructor(t, e) {\n    if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n    if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n    this._lat = t, this._long = e;\n  }\n  /**\n   * The latitude of this `GeoPoint` instance.\n   */\n  get latitude() {\n    return this._lat;\n  }\n  /**\n   * The longitude of this `GeoPoint` instance.\n   */\n  get longitude() {\n    return this._long;\n  }\n  /**\n   * Returns true if this `GeoPoint` is equal to the provided one.\n   *\n   * @param other - The `GeoPoint` to compare against.\n   * @returns true if this `GeoPoint` is equal to the provided one.\n   */\n  isEqual(t) {\n    return this._lat === t._lat && this._long === t._long;\n  }\n  /** Returns a JSON-serializable representation of this GeoPoint. */\n  toJSON() {\n    return {\n      latitude: this._lat,\n      longitude: this._long\n    };\n  }\n  /**\n   * Actually private to JS consumers of our API, so this function is prefixed\n   * with an underscore.\n   */\n  _compareTo(t) {\n    return gt(this._lat, t._lat) || gt(this._long, t._long);\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst Fn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */\nclass Sn {\n  constructor(t, e, n) {\n    this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n  }\n  toMutation(t, e) {\n    return null !== this.fieldMask ? new De(t, this.data, this.fieldMask, e, this.fieldTransforms) : new $e(t, this.data, e, this.fieldTransforms);\n  }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */\nclass qn {\n  constructor(t,\n  // The fieldMask does not include document transforms.\n  e, n) {\n    this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n  }\n  toMutation(t, e) {\n    return new De(t, this.data, this.fieldMask, e, this.fieldTransforms);\n  }\n}\nfunction On(t) {\n  switch (t) {\n    case 0 /* Set */:\n    // fall through\n    case 2 /* MergeSet */:\n    // fall through\n    case 1 /* Update */:\n      return !0;\n    case 3 /* Argument */:\n    case 4 /* ArrayArgument */:\n      return !1;\n    default:\n      throw b();\n  }\n}\n\n/** A \"context\" object passed around while parsing user data. */\nclass kn {\n  /**\n   * Initializes a ParseContext with the given source and path.\n   *\n   * @param settings - The settings for the parser.\n   * @param databaseId - The database ID of the Firestore instance.\n   * @param serializer - The serializer to use to generate the Value proto.\n   * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n   * rather than throw.\n   * @param fieldTransforms - A mutable list of field transforms encountered\n   * while parsing the data.\n   * @param fieldMask - A mutable list of field paths encountered while parsing\n   * the data.\n   *\n   * TODO(b/34871131): We don't support array paths right now, so path can be\n   * null to indicate the context represents any location within an array (in\n   * which case certain features will not work and errors will be somewhat\n   * compromised).\n   */\n  constructor(t, e, n, r, s, i) {\n    this.settings = t, this.databaseId = e, this.L = n, this.ignoreUndefinedProperties = r,\n    // Minor hack: If fieldTransforms is undefined, we assume this is an\n    // external call and we need to validate the entire path.\n    void 0 === s && this.nt(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n  }\n  get path() {\n    return this.settings.path;\n  }\n  get rt() {\n    return this.settings.rt;\n  }\n  /** Returns a new context with the specified settings overwritten. */\n  st(t) {\n    return new kn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.L, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n  }\n  it(t) {\n    var e;\n    const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),\n      r = this.st({\n        path: n,\n        ot: !1\n      });\n    return r.ut(t), r;\n  }\n  ct(t) {\n    var e;\n    const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),\n      r = this.st({\n        path: n,\n        ot: !1\n      });\n    return r.nt(), r;\n  }\n  at(t) {\n    // TODO(b/34871131): We don't support array paths right now; so make path\n    // undefined.\n    return this.st({\n      path: void 0,\n      ot: !0\n    });\n  }\n  ht(t) {\n    return rr(t, this.settings.methodName, this.settings.lt || !1, this.path, this.settings.ft);\n  }\n  /** Returns 'true' if 'fieldPath' was traversed when creating this context. */\n  contains(t) {\n    return void 0 !== this.fieldMask.find(e => t.isPrefixOf(e)) || void 0 !== this.fieldTransforms.find(e => t.isPrefixOf(e.field));\n  }\n  nt() {\n    // TODO(b/34871131): Remove null check once we have proper paths for fields\n    // within arrays.\n    if (this.path) for (let t = 0; t < this.path.length; t++) this.ut(this.path.get(t));\n  }\n  ut(t) {\n    if (0 === t.length) throw this.ht(\"Document fields must not be empty\");\n    if (On(this.rt) && Fn.test(t)) throw this.ht('Document fields cannot begin and end with \"__\"');\n  }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */\nclass Cn {\n  constructor(t, e, n) {\n    this.databaseId = t, this.ignoreUndefinedProperties = e, this.L = n || en(t);\n  }\n  /** Creates a new top-level parse context. */\n  dt(t, e, n) {\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n    return new kn({\n      rt: t,\n      methodName: e,\n      ft: n,\n      path: nt.emptyPath(),\n      ot: !1,\n      lt: r\n    }, this.databaseId, this.L, this.ignoreUndefinedProperties);\n  }\n}\nfunction Ln(t) {\n  const e = t._freezeSettings(),\n    n = en(t._databaseId);\n  return new Cn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */\nfunction Mn(t, e, n, r, s) {\n  let i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  const o = t.dt(i.merge || i.mergeFields ? 2 /* MergeSet */ : 0 /* Set */, e, n, s);\n  Zn(\"Data must be an object, but it was:\", o, r);\n  const u = Jn(r, o);\n  let c, a;\n  if (i.merge) c = new $t(o.fieldMask), a = o.fieldTransforms;else if (i.mergeFields) {\n    const t = [];\n    for (const r of i.mergeFields) {\n      const s = tr(e, r, n);\n      if (!o.contains(s)) throw new U(P, `Field '${s}' is specified in your field mask but missing from your input data.`);\n      sr(t, s) || t.push(s);\n    }\n    c = new $t(t), a = o.fieldTransforms.filter(t => c.covers(t.field));\n  } else c = null, a = o.fieldTransforms;\n  return new Sn(new Jt(u), c, a);\n}\nclass Un extends Dn {\n  _toFieldTransform(t) {\n    if (2 /* MergeSet */ !== t.rt) throw 1 /* Update */ === t.rt ? t.ht(`${this._methodName}() can only appear at the top level of your update data`) : t.ht(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n    // No transform to add for a delete, but we need to add it to our\n    // fieldMask so it gets deleted.\n    return t.fieldMask.push(t.path), null;\n  }\n  isEqual(t) {\n    return t instanceof Un;\n  }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */\nfunction jn(t, e, n) {\n  return new kn({\n    rt: 3 /* Argument */,\n    ft: e.settings.ft,\n    methodName: t._methodName,\n    ot: n\n  }, e.databaseId, e.L, e.ignoreUndefinedProperties);\n}\nclass Bn extends Dn {\n  _toFieldTransform(t) {\n    return new Pe(t.path, new Ie());\n  }\n  isEqual(t) {\n    return t instanceof Bn;\n  }\n}\nclass Qn extends Dn {\n  constructor(t, e) {\n    super(t), this.wt = e;\n  }\n  _toFieldTransform(t) {\n    const e = jn(this, t, /*array=*/!0),\n      n = this.wt.map(t => Hn(t, e)),\n      r = new Te(n);\n    return new Pe(t.path, r);\n  }\n  isEqual(t) {\n    // TODO(mrschmidt): Implement isEquals\n    return this === t;\n  }\n}\nclass zn extends Dn {\n  constructor(t, e) {\n    super(t), this.wt = e;\n  }\n  _toFieldTransform(t) {\n    const e = jn(this, t, /*array=*/!0),\n      n = this.wt.map(t => Hn(t, e)),\n      r = new Ae(n);\n    return new Pe(t.path, r);\n  }\n  isEqual(t) {\n    // TODO(mrschmidt): Implement isEquals\n    return this === t;\n  }\n}\nclass Gn extends Dn {\n  constructor(t, e) {\n    super(t), this.yt = e;\n  }\n  _toFieldTransform(t) {\n    const e = new Re(t.L, be(t.L, this.yt));\n    return new Pe(t.path, e);\n  }\n  isEqual(t) {\n    // TODO(mrschmidt): Implement isEquals\n    return this === t;\n  }\n}\n\n/** Parse update data from an update() call. */\nfunction Wn(t, e, n, r) {\n  const s = t.dt(1 /* Update */, e, n);\n  Zn(\"Data must be an object, but it was:\", s, r);\n  const i = [],\n    o = Jt.empty();\n  Tt(r, (t, r) => {\n    const u = nr(e, t, n);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n    r = getModularInstance(r);\n    const c = s.ct(u);\n    if (r instanceof Un)\n      // Add it to the field mask, but don't add anything to updateData.\n      i.push(u);else {\n      const t = Hn(r, c);\n      null != t && (i.push(u), o.set(u, t));\n    }\n  });\n  const u = new $t(i);\n  return new qn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */\nfunction Kn(t, e, n, r, s, i) {\n  const o = t.dt(1 /* Update */, e, n),\n    u = [tr(e, r, n)],\n    c = [s];\n  if (i.length % 2 != 0) throw new U(P, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n  for (let t = 0; t < i.length; t += 2) u.push(tr(e, i[t])), c.push(i[t + 1]);\n  const a = [],\n    h = Jt.empty();\n  // We iterate in reverse order to pick the last value for a field if the\n  // user specified the field multiple times.\n  for (let t = u.length - 1; t >= 0; --t) if (!sr(a, u[t])) {\n    const e = u[t];\n    let n = c[t];\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n    n = getModularInstance(n);\n    const r = o.ct(e);\n    if (n instanceof Un)\n      // Add it to the field mask, but don't add anything to updateData.\n      a.push(e);else {\n      const t = Hn(n, r);\n      null != t && (a.push(e), h.set(e, t));\n    }\n  }\n  const f = new $t(a);\n  return new qn(h, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */\nfunction Yn(t, e, n) {\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n  return Hn(n, t.dt(r ? 4 /* ArrayArgument */ : 3 /* Argument */, e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */\nfunction Hn(t, e) {\n  if (Xn(\n  // Unwrap the API type from the Compat SDK. This will return the API type\n  // from firestore-exp.\n  t = getModularInstance(t))) return Zn(\"Unsupported field value:\", e, t), Jn(t, e);\n  if (t instanceof Dn)\n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n    * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n    * context.fieldTransforms.\n    */\n    return function (t, e) {\n      // Sentinels are only supported with writes, and not within arrays.\n      if (!On(e.rt)) throw e.ht(`${t._methodName}() can only be used with update() and set()`);\n      if (!e.path) throw e.ht(`${t._methodName}() is not currently supported inside arrays`);\n      const n = t._toFieldTransform(e);\n      n && e.fieldTransforms.push(n);\n    }\n    /**\n    * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n    *\n    * @returns The parsed value\n    */(t, e), null;\n  if (void 0 === t && e.ignoreUndefinedProperties)\n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n  if (\n  // If context.path is null we are inside an array and we don't support\n  // field mask paths more granular than the top-level array.\n  e.path && e.fieldMask.push(e.path), t instanceof Array) {\n    // TODO(b/34871131): Include the path containing the array in the error\n    // message.\n    // In the case of IN queries, the parsed data is an array (representing\n    // the set of values to be included for the IN query) that may directly\n    // contain additional arrays (each representing an individual field\n    // value), so we disable this validation.\n    if (e.settings.ot && 4 /* ArrayArgument */ !== e.rt) throw e.ht(\"Nested arrays are not supported\");\n    return function (t, e) {\n      const n = [];\n      let r = 0;\n      for (const s of t) {\n        let t = Hn(s, e.at(r));\n        null == t && (\n        // Just include nulls in the array for fields being replaced with a\n        // sentinel.\n        t = {\n          nullValue: \"NULL_VALUE\"\n        }), n.push(t), r++;\n      }\n      return {\n        arrayValue: {\n          values: n\n        }\n      };\n    }(t, e);\n  }\n  return function (t, e) {\n    if (null === (t = getModularInstance(t))) return {\n      nullValue: \"NULL_VALUE\"\n    };\n    if (\"number\" == typeof t) return be(e.L, t);\n    if (\"boolean\" == typeof t) return {\n      booleanValue: t\n    };\n    if (\"string\" == typeof t) return {\n      stringValue: t\n    };\n    if (t instanceof Date) {\n      const n = bt.fromDate(t);\n      return {\n        timestampValue: ke(e.L, n)\n      };\n    }\n    if (t instanceof bt) {\n      // Firestore backend truncates precision down to microseconds. To ensure\n      // offline mode works the same with regards to truncation, perform the\n      // truncation immediately without waiting for the backend to do that.\n      const n = new bt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n      return {\n        timestampValue: ke(e.L, n)\n      };\n    }\n    if (t instanceof xn) return {\n      geoPointValue: {\n        latitude: t.latitude,\n        longitude: t.longitude\n      }\n    };\n    if (t instanceof Vn) return {\n      bytesValue: Ce(e.L, t._byteString)\n    };\n    if (t instanceof vn) {\n      const n = e.databaseId,\n        r = t.firestore._databaseId;\n      if (!r.isEqual(n)) throw e.ht(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n      return {\n        referenceValue: Ue(t.firestore._databaseId || e.databaseId, t._key.path)\n      };\n    }\n    throw e.ht(`Unsupported field value: ${ut(t)}`);\n  }\n  /**\n  * Checks whether an object looks like a JSON object that should be converted\n  * into a struct. Normal class/prototype instances are considered to look like\n  * JSON objects since they should be converted to a struct value. Arrays, Dates,\n  * GeoPoints, etc. are not considered to look like JSON objects since they map\n  * to specific FieldValue types other than ObjectValue.\n  */(t, e);\n}\nfunction Jn(t, e) {\n  const n = {};\n  return !function (t) {\n    for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n    return !0;\n  }(t) ? Tt(t, (t, r) => {\n    const s = Hn(r, e.it(t));\n    null != s && (n[t] = s);\n  }) :\n  // If we encounter an empty object, we explicitly add it to the update\n  // mask to ensure that the server creates a map entry.\n  e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n    mapValue: {\n      fields: n\n    }\n  };\n}\nfunction Xn(t) {\n  return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof bt || t instanceof xn || t instanceof Vn || t instanceof vn || t instanceof Dn);\n}\nfunction Zn(t, e, n) {\n  if (!Xn(n) || !function (t) {\n    return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n  }(n)) {\n    const r = ut(n);\n    throw \"an object\" === r ? e.ht(t + \" a custom object\") : e.ht(t + \" \" + r);\n  }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */\nfunction tr(t, e, n) {\n  if ((\n  // If required, replace the FieldPath Compat class with with the firestore-exp\n  // FieldPath.\n  e = getModularInstance(e)) instanceof Nn) return e._internalPath;\n  if (\"string\" == typeof e) return nr(t, e);\n  throw rr(\"Field path arguments must be of type string or \", t, /* hasConverter= */!1, /* path= */void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */\nconst er = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */\nfunction nr(t, e, n) {\n  if (e.search(er) >= 0) throw rr(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, /* hasConverter= */!1, /* path= */void 0, n);\n  try {\n    return new Nn(...e.split(\".\"))._internalPath;\n  } catch (r) {\n    throw rr(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, /* hasConverter= */!1, /* path= */void 0, n);\n  }\n}\nfunction rr(t, e, n, r, s) {\n  const i = r && !r.isEmpty(),\n    o = void 0 !== s;\n  let u = `Function ${e}() called with invalid data`;\n  n && (u += \" (via `toFirestore()`)\"), u += \". \";\n  let c = \"\";\n  return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), c += \")\"), new U(P, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */\nfunction sr(t, e) {\n  return t.some(t => t.isEqual(e));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */\nclass ir {\n  // Note: This class is stripped down version of the DocumentSnapshot in\n  // the legacy SDK. The changes are:\n  // - No support for SnapshotMetadata.\n  // - No support for SnapshotOptions.\n  /** @hideconstructor protected */\n  constructor(t, e, n, r, s) {\n    this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, this._converter = s;\n  }\n  /** Property of the `DocumentSnapshot` that provides the document's ID. */\n  get id() {\n    return this._key.path.lastSegment();\n  }\n  /**\n   * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n   */\n  get ref() {\n    return new vn(this._firestore, this._converter, this._key);\n  }\n  /**\n   * Signals whether or not the document at the snapshot's location exists.\n   *\n   * @returns true if the document exists.\n   */\n  exists() {\n    return null !== this._document;\n  }\n  /**\n   * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n   * the document doesn't exist.\n   *\n   * @returns An `Object` containing all fields in the document or `undefined`\n   * if the document doesn't exist.\n   */\n  data() {\n    if (this._document) {\n      if (this._converter) {\n        // We only want to use the converter and create a new DocumentSnapshot\n        // if a converter has been provided.\n        const t = new or(this._firestore, this._userDataWriter, this._key, this._document, /* converter= */null);\n        return this._converter.fromFirestore(t);\n      }\n      return this._userDataWriter.convertValue(this._document.data.value);\n    }\n  }\n  /**\n   * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n   * document or field doesn't exist.\n   *\n   * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n   * field.\n   * @returns The data at the specified field location or undefined if no such\n   * field exists in the document.\n   */\n  // We are using `any` here to avoid an explicit cast by our users.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get(t) {\n    if (this._document) {\n      const e = this._document.data.field(ar(\"DocumentSnapshot.get\", t));\n      if (null !== e) return this._userDataWriter.convertValue(e);\n    }\n  }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */\nclass or extends ir {\n  /**\n   * Retrieves all fields in the document as an `Object`.\n   *\n   * @override\n   * @returns An `Object` containing all fields in the document.\n   */\n  data() {\n    return super.data();\n  }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */\nclass ur {\n  /** @hideconstructor */\n  constructor(t, e) {\n    this._docs = e, this.query = t;\n  }\n  /** An array of all the documents in the `QuerySnapshot`. */\n  get docs() {\n    return [...this._docs];\n  }\n  /** The number of documents in the `QuerySnapshot`. */\n  get size() {\n    return this.docs.length;\n  }\n  /** True if there are no documents in the `QuerySnapshot`. */\n  get empty() {\n    return 0 === this.docs.length;\n  }\n  /**\n   * Enumerates all of the documents in the `QuerySnapshot`.\n   *\n   * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n   * each document in the snapshot.\n   * @param thisArg - The `this` binding for the callback.\n   */\n  forEach(t, e) {\n    this._docs.forEach(t, e);\n  }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */\nfunction cr(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), t instanceof ir && e instanceof ir ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof ur && e instanceof ur && Pn(t.query, e.query) && vt(t.docs, e.docs, cr);\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */\nfunction ar(t, e) {\n  return \"string\" == typeof e ? nr(t, e) : e instanceof Nn ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * endBefore:1}, {@link (endAt:1)}, {@link limit} or {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nclass hr {}\n\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also include\n * additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new constraints.\n * @param queryConstraints - The list of {@link QueryConstraint}s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nfunction lr(t) {\n  for (var _len8 = arguments.length, e = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n    e[_key8 - 1] = arguments[_key8];\n  }\n  for (const n of e) t = n._apply(t);\n  return t;\n}\nclass fr extends hr {\n  constructor(t, e, n) {\n    super(), this._t = t, this.gt = e, this.vt = n, this.type = \"where\";\n  }\n  _apply(t) {\n    const e = Ln(t.firestore),\n      n = function (t, e, n, r, s, i, o) {\n        let u;\n        if (s.isKeyField()) {\n          if (\"array-contains\" /* ARRAY_CONTAINS */ === i || \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === i) throw new U(P, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n          if (\"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i) {\n            Pr(o, i);\n            const e = [];\n            for (const n of o) e.push(Rr(r, t, n));\n            u = {\n              arrayValue: {\n                values: e\n              }\n            };\n          } else u = Rr(r, t, o);\n        } else \"in\" /* IN */ !== i && \"not-in\" /* NOT_IN */ !== i && \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ !== i || Pr(o, i), u = Yn(n, e, o, /* allowArrays= */\"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i);\n        const c = ee.create(s, i, u);\n        return function (t, e) {\n          if (e.q()) {\n            const n = pe(t);\n            if (null !== n && !n.isEqual(e.field)) throw new U(P, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${e.field.toString()}'`);\n            const r = me(t);\n            null !== r && Vr(t, e.field, r);\n          }\n          const n = function (t, e) {\n            for (const n of t.filters) if (e.indexOf(n.op) >= 0) return n.op;\n            return null;\n          }(t,\n          /**\n          * Given an operator, returns the set of operators that cannot be used with it.\n          *\n          * Operators in a query must adhere to the following set of rules:\n          * 1. Only one array operator is allowed.\n          * 2. Only one disjunctive operator is allowed.\n          * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n          * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n          *\n          * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n          * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n          */\n          function (t) {\n            switch (t) {\n              case \"!=\" /* NOT_EQUAL */:\n                return [\"!=\" /* NOT_EQUAL */, \"not-in\" /* NOT_IN */];\n\n              case \"array-contains\" /* ARRAY_CONTAINS */:\n                return [\"array-contains\" /* ARRAY_CONTAINS */, \"array-contains-any\" /* ARRAY_CONTAINS_ANY */, \"not-in\" /* NOT_IN */];\n\n              case \"in\" /* IN */:\n                return [\"array-contains-any\" /* ARRAY_CONTAINS_ANY */, \"in\" /* IN */, \"not-in\" /* NOT_IN */];\n\n              case \"array-contains-any\" /* ARRAY_CONTAINS_ANY */:\n                return [\"array-contains\" /* ARRAY_CONTAINS */, \"array-contains-any\" /* ARRAY_CONTAINS_ANY */, \"in\" /* IN */, \"not-in\" /* NOT_IN */];\n\n              case \"not-in\" /* NOT_IN */:\n                return [\"array-contains\" /* ARRAY_CONTAINS */, \"array-contains-any\" /* ARRAY_CONTAINS_ANY */, \"in\" /* IN */, \"not-in\" /* NOT_IN */, \"!=\" /* NOT_EQUAL */];\n\n              default:\n                return [];\n            }\n          }(e.op));\n          if (null !== n)\n            // Special case when it's a duplicate op to give a slightly clearer error message.\n            throw n === e.op ? new U(P, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(P, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n        }(t, c), c;\n      }(t._query, \"where\", e, t.firestore._databaseId, this._t, this.gt, this.vt);\n    return new bn(t.firestore, t.converter, function (t, e) {\n      const n = t.filters.concat([e]);\n      return new we(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n    }(t._query, n));\n  }\n}\n\n/**\n * Creates a {@link QueryConstraint} that enforces that documents must contain the\n * specified field and that the value should satisfy the relation constraint\n * provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link Query}.\n */\nfunction dr(t, e, n) {\n  const r = e,\n    s = ar(\"where\", t);\n  return new fr(s, r, n);\n}\nclass wr extends hr {\n  constructor(t, e) {\n    super(), this._t = t, this.bt = e, this.type = \"orderBy\";\n  }\n  _apply(t) {\n    const e = function (t, e, n) {\n      if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n      if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n      const r = new le(e, n);\n      return function (t, e) {\n        if (null === me(t)) {\n          // This is the first order by. It must match any inequality.\n          const n = pe(t);\n          null !== n && Vr(t, n, e.field);\n        }\n      }(t, r), r;\n    }\n    /**\n    * Create a `Bound` from a query and a document.\n    *\n    * Note that the `Bound` will always include the key of the document\n    * and so only the provided document will compare equal to the returned\n    * position.\n    *\n    * Will throw if the document does not contain all fields of the order by\n    * of the query or if any of the fields in the order by are an uncommitted\n    * server timestamp.\n    */(t._query, this._t, this.bt);\n    return new bn(t.firestore, t.converter, function (t, e) {\n      // TODO(dimond): validate that orderBy does not list the same key twice.\n      const n = t.explicitOrderBy.concat([e]);\n      return new we(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n    }(t._query, e));\n  }\n}\n\n/**\n * Creates a {@link QueryConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link Query}.\n */\nfunction mr(t) {\n  let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"asc\";\n  const n = e,\n    r = ar(\"orderBy\", t);\n  return new wr(r, n);\n}\nclass pr extends hr {\n  constructor(t, e, n) {\n    super(), this.type = t, this.Et = e, this.It = n;\n  }\n  _apply(t) {\n    return new bn(t.firestore, t.converter, function (t, e, n) {\n      return new we(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n    }(t._query, this.Et, this.It));\n  }\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the first matching documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */\nfunction yr(t) {\n  return at(\"limit\", t), new pr(\"limit\", t, \"F\" /* First */);\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the last matching documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */\nfunction _r(t) {\n  return at(\"limitToLast\", t), new pr(\"limitToLast\", t, \"L\" /* Last */);\n}\n\nclass gr extends hr {\n  constructor(t, e, n) {\n    super(), this.type = t, this.Tt = e, this.At = n;\n  }\n  _apply(t) {\n    const e = Ar(t, this.type, this.Tt, this.At);\n    return new bn(t.firestore, t.converter, function (t, e) {\n      return new we(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n    }(t._query, e));\n  }\n}\nfunction vr() {\n  for (var _len9 = arguments.length, t = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n    t[_key9] = arguments[_key9];\n  }\n  return new gr(\"startAt\", t, /*inclusive=*/!0);\n}\nfunction br() {\n  for (var _len10 = arguments.length, t = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n    t[_key10] = arguments[_key10];\n  }\n  return new gr(\"startAfter\", t, /*inclusive=*/!1);\n}\nclass Er extends hr {\n  constructor(t, e, n) {\n    super(), this.type = t, this.Tt = e, this.At = n;\n  }\n  _apply(t) {\n    const e = Ar(t, this.type, this.Tt, this.At);\n    return new bn(t.firestore, t.converter, function (t, e) {\n      return new we(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n    }(t._query, e));\n  }\n}\nfunction Ir() {\n  for (var _len11 = arguments.length, t = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n    t[_key11] = arguments[_key11];\n  }\n  return new Er(\"endBefore\", t, /*inclusive=*/!1);\n}\nfunction Tr() {\n  for (var _len12 = arguments.length, t = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n    t[_key12] = arguments[_key12];\n  }\n  return new Er(\"endAt\", t, /*inclusive=*/!0);\n}\n\n/** Helper function to create a bound from a document or fields */\nfunction Ar(t, e, n, r) {\n  if (n[0] = getModularInstance(n[0]), n[0] instanceof ir) return function (t, e, n, r, s) {\n    if (!r) throw new U(N, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n    const i = [];\n    // Because people expect to continue/end a query at the exact document\n    // provided, we need to use the implicit sort order rather than the explicit\n    // sort order, because it's guaranteed to contain the document key. That way\n    // the position becomes unambiguous and the query continues/ends exactly at\n    // the provided document. Without the key (by using the explicit sort\n    // orders), multiple documents could match the position, yielding duplicate\n    // results.\n    for (const n of _e(t)) if (n.field.isKeyField()) i.push(zt(e, r.key));else {\n      const t = r.data.field(n.field);\n      if (Ot(t)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n      if (null === t) {\n        const t = n.field.canonicalString();\n        throw new U(P, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n      }\n      i.push(t);\n    }\n    return new he(i, s);\n  }\n  /**\n  * Converts a list of field values to a `Bound` for the given query.\n  */(t._query, t.firestore._databaseId, e, n[0]._document, r);\n  {\n    const s = Ln(t.firestore);\n    return function (t, e, n, r, s, i) {\n      // Use explicit order by's because it has to match the query the user made\n      const o = t.explicitOrderBy;\n      if (s.length > o.length) throw new U(P, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n      const u = [];\n      for (let i = 0; i < s.length; i++) {\n        const c = s[i];\n        if (o[i].field.isKeyField()) {\n          if (\"string\" != typeof c) throw new U(P, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n          if (!ye(t) && -1 !== c.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n          const n = t.path.child(tt.fromString(c));\n          if (!rt.isDocumentKey(n)) throw new U(P, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n          const s = new rt(n);\n          u.push(zt(e, s));\n        } else {\n          const t = Yn(n, r, c);\n          u.push(t);\n        }\n      }\n      return new he(u, i);\n    }\n    /**\n    * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n    * appropriate errors if the value is anything other than a `DocumentReference`\n    * or `string`, or if the string is malformed.\n    */(t._query, t.firestore._databaseId, s, e, n, r);\n  }\n}\nfunction Rr(t, e, n) {\n  if (\"string\" == typeof (n = getModularInstance(n))) {\n    if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n    if (!ye(e) && -1 !== n.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n    const r = e.path.child(tt.fromString(n));\n    if (!rt.isDocumentKey(r)) throw new U(P, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n    return zt(t, new rt(r));\n  }\n  if (n instanceof vn) return zt(t, n._key);\n  throw new U(P, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${ut(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */\nfunction Pr(t, e) {\n  if (!Array.isArray(t) || 0 === t.length) throw new U(P, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n  if (t.length > 10) throw new U(P, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\nfunction Vr(t, e, n) {\n  if (!n.isEqual(e)) throw new U(P, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction Nr(t, e, n) {\n  let r;\n  // Cast to `any` in order to satisfy the union type constraint on\n  // toFirestore().\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, r;\n}\nclass $r extends class {\n  convertValue(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"none\";\n    switch (Mt(t)) {\n      case 0 /* NullValue */:\n        return null;\n      case 1 /* BooleanValue */:\n        return t.booleanValue;\n      case 2 /* NumberValue */:\n        return St(t.integerValue || t.doubleValue);\n      case 3 /* TimestampValue */:\n        return this.convertTimestamp(t.timestampValue);\n      case 4 /* ServerTimestampValue */:\n        return this.convertServerTimestamp(t, e);\n      case 5 /* StringValue */:\n        return t.stringValue;\n      case 6 /* BlobValue */:\n        return this.convertBytes(qt(t.bytesValue));\n      case 7 /* RefValue */:\n        return this.convertReference(t.referenceValue);\n      case 8 /* GeoPointValue */:\n        return this.convertGeoPoint(t.geoPointValue);\n      case 9 /* ArrayValue */:\n        return this.convertArray(t.arrayValue, e);\n      case 10 /* ObjectValue */:\n        return this.convertObject(t.mapValue, e);\n      default:\n        throw b();\n    }\n  }\n  convertObject(t, e) {\n    const n = {};\n    return Tt(t.fields, (t, r) => {\n      n[t] = this.convertValue(r, e);\n    }), n;\n  }\n  convertGeoPoint(t) {\n    return new xn(St(t.latitude), St(t.longitude));\n  }\n  convertArray(t, e) {\n    return (t.values || []).map(t => this.convertValue(t, e));\n  }\n  convertServerTimestamp(t, e) {\n    switch (e) {\n      case \"previous\":\n        const n = kt(t);\n        return null == n ? null : this.convertValue(n, e);\n      case \"estimate\":\n        return this.convertTimestamp(Ct(t));\n      default:\n        return null;\n    }\n  }\n  convertTimestamp(t) {\n    const e = Ft(t);\n    return new bt(e.seconds, e.nanos);\n  }\n  convertDocumentKey(t, e) {\n    const n = tt.fromString(t);\n    E(tn(n));\n    const r = new X(n.get(1), n.get(3)),\n      s = new rt(n.popFirst(5));\n    return r.isEqual(e) ||\n    // TODO(b/64130202): Somehow support foreign references.\n    _(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), s;\n  }\n} {\n  constructor(t) {\n    super(), this.firestore = t;\n  }\n  convertBytes(t) {\n    return new Vn(t);\n  }\n  convertReference(t) {\n    const e = this.convertDocumentKey(t, this.firestore._databaseId);\n    return new vn(this.firestore, /* converter= */null, e);\n  }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */\nfunction Dr(t) {\n  const e = hn((t = ct(t, vn)).firestore),\n    n = new $r(t.firestore);\n  return on(e, [t._key]).then(e => {\n    E(1 === e.length);\n    const r = e[0];\n    return new ir(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n  });\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */\nfunction xr(t) {\n  !function (t) {\n    if (\"L\" /* Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n  }((t = ct(t, bn))._query);\n  const e = hn(t.firestore),\n    n = new $r(t.firestore);\n  return un(e, t._query).then(e => {\n    const r = e.map(e => new or(t.firestore, n, e.key, e, t.converter));\n    return \"L\" /* Last */ === t._query.limitType &&\n    // Limit to last queries reverse the orderBy constraint that was\n    // specified by the user. As such, we need to reverse the order of the\n    // results to return the documents in the expected order.\n    r.reverse(), new ur(t, r);\n  });\n}\nfunction Fr(t, e, n) {\n  const r = Nr((t = ct(t, vn)).converter, e, n),\n    s = Mn(Ln(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n  return sn(hn(t.firestore), [s.toMutation(t._key, Ve.none())]);\n}\nfunction Sr(t, e, n) {\n  const s = Ln((t = ct(t, vn)).firestore);\n  // For Compat types, we have to \"extract\" the underlying types before\n  // performing validation.\n  let i;\n  for (var _len13 = arguments.length, r = new Array(_len13 > 3 ? _len13 - 3 : 0), _key13 = 3; _key13 < _len13; _key13++) {\n    r[_key13 - 3] = arguments[_key13];\n  }\n  i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof Nn ? Kn(s, \"updateDoc\", t._key, e, n, r) : Wn(s, \"updateDoc\", t._key, e);\n  return sn(hn(t.firestore), [i.toMutation(t._key, Ve.exists(!0))]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */\nfunction qr(t) {\n  return sn(hn((t = ct(t, vn)).firestore), [new xe(t._key, Ve.none())]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */\nfunction Or(t, e) {\n  const n = An(t = ct(t, En)),\n    r = Nr(t.converter, e),\n    s = Mn(Ln(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n  return sn(hn(t.firestore), [s.toMutation(n._key, Ve.exists(!1))]).then(() => n);\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */\nfunction kr(t) {\n  const e = ct(t.firestore, fn),\n    n = hn(e),\n    r = new $r(e);\n  return new gn(t, n, r).run();\n}\n\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */\nfunction Cr(t, e) {\n  return Pn(t.query, e.query) && deepEqual(t.data(), e.data());\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */\nfunction Lr() {\n  return new Un(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */\nfunction Mr() {\n  return new Bn(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */\nfunction Ur() {\n  for (var _len14 = arguments.length, t = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {\n    t[_key14] = arguments[_key14];\n  }\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new Qn(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\nfunction jr() {\n  for (var _len15 = arguments.length, t = new Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {\n    t[_key15] = arguments[_key15];\n  }\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new zn(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\nfunction Br(t) {\n  return new Gn(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */\nclass Qr {\n  /** @hideconstructor */\n  constructor(t, e) {\n    this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, this._dataReader = Ln(t);\n  }\n  set(t, e, n) {\n    this._verifyNotCommitted();\n    const r = zr(t, this._firestore),\n      s = Nr(r.converter, e, n),\n      i = Mn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n    return this._mutations.push(i.toMutation(r._key, Ve.none())), this;\n  }\n  update(t, e, n) {\n    this._verifyNotCommitted();\n    const s = zr(t, this._firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n    let i;\n    for (var _len16 = arguments.length, r = new Array(_len16 > 3 ? _len16 - 3 : 0), _key16 = 3; _key16 < _len16; _key16++) {\n      r[_key16 - 3] = arguments[_key16];\n    }\n    return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof Nn ? Kn(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : Wn(this._dataReader, \"WriteBatch.update\", s._key, e), this._mutations.push(i.toMutation(s._key, Ve.exists(!0))), this;\n  }\n  /**\n   * Deletes the document referred to by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be deleted.\n   * @returns This `WriteBatch` instance. Used for chaining method calls.\n   */\n  delete(t) {\n    this._verifyNotCommitted();\n    const e = zr(t, this._firestore);\n    return this._mutations = this._mutations.concat(new xe(e._key, Ve.none())), this;\n  }\n  /**\n   * Commits all of the writes in this write batch as a single atomic unit.\n   *\n   * The result of these writes will only be reflected in document reads that\n   * occur after the returned promise resolves. If the client is offline, the\n   * write fails. If you would like to see local modifications or buffer writes\n   * until the client is online, use the full Firestore SDK.\n   *\n   * @returns A `Promise` resolved once all of the writes in the batch have been\n   * successfully written to the backend as an atomic unit (note that it won't\n   * resolve while you're offline).\n   */\n  commit() {\n    return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n  }\n  _verifyNotCommitted() {\n    if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n  }\n}\nfunction zr(t, e) {\n  if ((t = getModularInstance(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n  return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */\nfunction Gr(t) {\n  const e = hn(t = ct(t, fn));\n  return new Qr(t, t => sn(e, t));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */\nclass Wr {\n  constructor(t) {\n    this.datastore = t,\n    // The version of each document that was read during this transaction.\n    this.readVersions = new Map(), this.mutations = [], this.committed = !1,\n    /**\n     * A deferred usage error that occurred previously in this transaction that\n     * will cause the transaction to fail once it actually commits.\n     */\n    this.lastWriteError = null,\n    /**\n     * Set of documents that have been written in the transaction.\n     *\n     * When there's more than one write to the same key in a transaction, any\n     * writes after the first are handled differently.\n     */\n    this.writtenDocs = new Set();\n  }\n  async lookup(t) {\n    if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n    const e = await on(this.datastore, t);\n    return e.forEach(t => this.recordVersion(t)), e;\n  }\n  set(t, e) {\n    this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n  }\n  update(t, e) {\n    try {\n      this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n    } catch (t) {\n      this.lastWriteError = t;\n    }\n    this.writtenDocs.add(t.toString());\n  }\n  delete(t) {\n    this.write(new xe(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n  }\n  async commit() {\n    if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n    const t = this.readVersions;\n    // For each mutation, note that the doc was written.\n    this.mutations.forEach(e => {\n      t.delete(e.key.toString());\n    }),\n    // For each document that was read but not written to, we want to perform\n    // a `verify` operation.\n    t.forEach((t, e) => {\n      const n = rt.fromPath(e);\n      this.mutations.push(new Fe(n, this.precondition(n)));\n    }), await sn(this.datastore, this.mutations), this.committed = !0;\n  }\n  recordVersion(t) {\n    let e;\n    if (t.isFoundDocument()) e = t.version;else {\n      if (!t.isNoDocument()) throw b();\n      // Represent a deleted doc using SnapshotVersion.min().\n      e = Et.min();\n    }\n    const n = this.readVersions.get(t.key.toString());\n    if (n) {\n      if (!e.isEqual(n))\n        // This transaction will fail no matter what.\n        throw new U(q, \"Document version changed between two reads.\");\n    } else this.readVersions.set(t.key.toString(), e);\n  }\n  /**\n   * Returns the version of this document when it was read in this transaction,\n   * as a precondition, or no precondition if it was not read.\n   */\n  precondition(t) {\n    const e = this.readVersions.get(t.toString());\n    return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(Et.min()) ? Ve.exists(!1) : Ve.updateTime(e) : Ve.none();\n  }\n  /**\n   * Returns the precondition for a document if the operation is an update.\n   */\n  preconditionForUpdate(t) {\n    const e = this.readVersions.get(t.toString());\n    // The first time a document is written, we want to take into account the\n    // read time and existence\n    if (!this.writtenDocs.has(t.toString()) && e) {\n      if (e.isEqual(Et.min()))\n        // The document doesn't exist, so fail the transaction.\n        // This has to be validated locally because you can't send a\n        // precondition that a document does not exist without changing the\n        // semantics of the backend write to be an insert. This is the reverse\n        // of what we want, since we want to assert that the document doesn't\n        // exist but then send the update and have it fail. Since we can't\n        // express that to the backend, we have to validate locally.\n        // Note: this can change once we can send separate verify writes in the\n        // transaction.\n        throw new U(P, \"Can't update a document that doesn't exist.\");\n      // Document exists, base precondition on document update time.\n      return Ve.updateTime(e);\n    }\n    // Document was not read, so we just use the preconditions for a blind\n    // update.\n    return Ve.exists(!0);\n  }\n  write(t) {\n    this.ensureCommitNotCalled(), this.mutations.push(t);\n  }\n  ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst Kr = {\n  maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass Yr {\n  constructor(t, e, n, r, s) {\n    this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, this.deferred = s, this.Rt = n.maxAttempts, this.Pt = new nn(this.asyncQueue, \"transaction_retry\" /* TransactionRetry */);\n  }\n  /** Runs the transaction and sets the result on deferred. */\n  run() {\n    this.Rt -= 1, this.Vt();\n  }\n  Vt() {\n    this.Pt.J(async () => {\n      const t = new Wr(this.datastore),\n        e = this.Nt(t);\n      e && e.then(e => {\n        this.asyncQueue.enqueueAndForget(() => t.commit().then(() => {\n          this.deferred.resolve(e);\n        }).catch(t => {\n          this.$t(t);\n        }));\n      }).catch(t => {\n        this.$t(t);\n      });\n    });\n  }\n  Nt(t) {\n    try {\n      const e = this.updateFunction(t);\n      return !ht(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), null);\n    } catch (t) {\n      // Do not retry errors thrown by user provided updateFunction.\n      return this.deferred.reject(t), null;\n    }\n  }\n  $t(t) {\n    this.Rt > 0 && this.Dt(t) ? (this.Rt -= 1, this.asyncQueue.enqueueAndForget(() => (this.Vt(), Promise.resolve()))) : this.deferred.reject(t);\n  }\n  Dt(t) {\n    if (\"FirebaseError\" === t.name) {\n      // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n      // non-matching document versions with ABORTED. These errors should be retried.\n      const e = t.code;\n      return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !\n      /**\n      * Determines whether an error code represents a permanent error when received\n      * in response to a non-write operation.\n      *\n      * See isPermanentWriteError for classifying write errors.\n      */\n      function (t) {\n        switch (t) {\n          default:\n            return b();\n          case A:\n          case R:\n          case V:\n          case F:\n          case C:\n          case L:\n          // Unauthenticated means something went wrong with our token and we need\n          // to retry with new credentials which will happen automatically.\n          case x:\n            return !1;\n          case P:\n          case N:\n          case $:\n          case D:\n          case S:\n          // Aborted might be retried in some scenarios, but that is dependant on\n          // the context and should handled individually by the calling code.\n          // See https://cloud.google.com/apis/design/errors.\n          case q:\n          case O:\n          case k:\n          case M:\n            return !0;\n        }\n      }(e);\n    }\n    return !1;\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */\nfunction Hr() {\n  // `document` is not always available, e.g. in ReactNative and WebWorkers.\n  // eslint-disable-next-line no-restricted-globals\n  return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */\nclass Jr {\n  constructor(t, e, n, r, s) {\n    this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, this.deferred = new j(), this.then = this.deferred.promise.then.bind(this.deferred.promise),\n    // It's normal for the deferred promise to be canceled (due to cancellation)\n    // and so we attach a dummy catch callback to avoid\n    // 'UnhandledPromiseRejectionWarning' log spam.\n    this.deferred.promise.catch(t => {});\n  }\n  /**\n   * Creates and returns a DelayedOperation that has been scheduled to be\n   * executed on the provided asyncQueue after the provided delayMs.\n   *\n   * @param asyncQueue - The queue to schedule the operation on.\n   * @param id - A Timer ID identifying the type of operation this is.\n   * @param delayMs - The delay (ms) before the operation should be scheduled.\n   * @param op - The operation to run.\n   * @param removalCallback - A callback to be called synchronously once the\n   *   operation is executed or canceled, notifying the AsyncQueue to remove it\n   *   from its delayedOperations list.\n   *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n   *   the DelayedOperation class public.\n   */\n  static createAndSchedule(t, e, n, r, s) {\n    const i = Date.now() + n,\n      o = new Jr(t, e, i, r, s);\n    return o.start(n), o;\n  }\n  /**\n   * Starts the timer. This is called immediately after construction by\n   * createAndSchedule().\n   */\n  start(t) {\n    this.timerHandle = setTimeout(() => this.handleDelayElapsed(), t);\n  }\n  /**\n   * Queues the operation to run immediately (if it hasn't already been run or\n   * canceled).\n   */\n  skipDelay() {\n    return this.handleDelayElapsed();\n  }\n  /**\n   * Cancels the operation if it hasn't already been executed or canceled. The\n   * promise will be rejected.\n   *\n   * As long as the operation has not yet been run, calling cancel() provides a\n   * guarantee that the operation will not be run.\n   */\n  cancel(t) {\n    null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(A, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n  }\n  handleDelayElapsed() {\n    this.asyncQueue.enqueueAndForget(() => null !== this.timerHandle ? (this.clearTimeout(), this.op().then(t => this.deferred.resolve(t))) : Promise.resolve());\n  }\n  clearTimeout() {\n    null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), this.timerHandle = null);\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass Xr {\n  constructor() {\n    // The last promise in the queue.\n    this.xt = Promise.resolve(),\n    // A list of retryable operations. Retryable operations are run in order and\n    // retried with backoff.\n    this.Ft = [],\n    // Is this AsyncQueue being shut down? Once it is set to true, it will not\n    // be changed again.\n    this.St = !1,\n    // Operations scheduled to be queued in the future. Operations are\n    // automatically removed after they are run or canceled.\n    this.qt = [],\n    // visible for testing\n    this.Ot = null,\n    // Flag set while there's an outstanding AsyncQueue operation, used for\n    // assertion sanity-checks.\n    this.kt = !1,\n    // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n    this.Ct = !1,\n    // List of TimerIds to fast-forward delays for.\n    this.Lt = [],\n    // Backoff timer used to schedule retries for retryable operations\n    this.Pt = new nn(this, \"async_queue_retry\" /* AsyncQueueRetry */),\n    // Visibility handler that triggers an immediate retry of all retryable\n    // operations. Meant to speed up recovery when we regain file system access\n    // after page comes into foreground.\n    this.Mt = () => {\n      const t = Hr();\n      t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.Pt.Z();\n    };\n    const t = Hr();\n    t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Mt);\n  }\n  get isShuttingDown() {\n    return this.St;\n  }\n  /**\n   * Adds a new operation to the queue without waiting for it to complete (i.e.\n   * we ignore the Promise result).\n   */\n  enqueueAndForget(t) {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.enqueue(t);\n  }\n  enqueueAndForgetEvenWhileRestricted(t) {\n    this.Ut(),\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.jt(t);\n  }\n  enterRestrictedMode(t) {\n    if (!this.St) {\n      this.St = !0, this.Ct = t || !1;\n      const e = Hr();\n      e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Mt);\n    }\n  }\n  enqueue(t) {\n    if (this.Ut(), this.St)\n      // Return a Promise which never resolves.\n      return new Promise(() => {});\n    // Create a deferred Promise that we can return to the callee. This\n    // allows us to return a \"hanging Promise\" only to the callee and still\n    // advance the queue even when the operation is not run.\n    const e = new j();\n    return this.jt(() => this.St && this.Ct ? Promise.resolve() : (t().then(e.resolve, e.reject), e.promise)).then(() => e.promise);\n  }\n  enqueueRetryable(t) {\n    this.enqueueAndForget(() => (this.Ft.push(t), this.Bt()));\n  }\n  /**\n   * Runs the next operation from the retryable queue. If the operation fails,\n   * reschedules with backoff.\n   */\n  async Bt() {\n    if (0 !== this.Ft.length) {\n      try {\n        await this.Ft[0](), this.Ft.shift(), this.Pt.reset();\n      } catch (t) {\n        if (!\n        /**\n        * @license\n        * Copyright 2017 Google LLC\n        *\n        * Licensed under the Apache License, Version 2.0 (the \"License\");\n        * you may not use this file except in compliance with the License.\n        * You may obtain a copy of the License at\n        *\n        *   http://www.apache.org/licenses/LICENSE-2.0\n        *\n        * Unless required by applicable law or agreed to in writing, software\n        * distributed under the License is distributed on an \"AS IS\" BASIS,\n        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n        * See the License for the specific language governing permissions and\n        * limitations under the License.\n        */\n        /** Verifies whether `e` is an IndexedDbTransactionError. */\n        function (t) {\n          // Use name equality, as instanceof checks on errors don't work with errors\n          // that wrap other errors.\n          return \"IndexedDbTransactionError\" === t.name;\n        }\n        /**\n        * @license\n        * Copyright 2020 Google LLC\n        *\n        * Licensed under the Apache License, Version 2.0 (the \"License\");\n        * you may not use this file except in compliance with the License.\n        * You may obtain a copy of the License at\n        *\n        *   http://www.apache.org/licenses/LICENSE-2.0\n        *\n        * Unless required by applicable law or agreed to in writing, software\n        * distributed under the License is distributed on an \"AS IS\" BASIS,\n        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n        * See the License for the specific language governing permissions and\n        * limitations under the License.\n        */(t)) throw t;\n        // Failure will be handled by AsyncQueue\n        y(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n      }\n      this.Ft.length > 0 &&\n      // If there are additional operations, we re-schedule `retryNextOp()`.\n      // This is necessary to run retryable operations that failed during\n      // their initial attempt since we don't know whether they are already\n      // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n      // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n      // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n      // call scheduled here.\n      // Since `backoffAndRun()` cancels an existing backoff and schedules a\n      // new backoff on every call, there is only ever a single additional\n      // operation in the queue.\n      this.Pt.J(() => this.Bt());\n    }\n  }\n  jt(t) {\n    const e = this.xt.then(() => (this.kt = !0, t().catch(t => {\n      this.Ot = t, this.kt = !1;\n      const e =\n      /**\n      * Chrome includes Error.message in Error.stack. Other browsers do not.\n      * This returns expected output of message + stack when available.\n      * @param error - Error or FirestoreError\n      */\n      function (t) {\n        let e = t.message || \"\";\n        t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n        return e;\n      }\n      /**\n      * @license\n      * Copyright 2020 Google LLC\n      *\n      * Licensed under the Apache License, Version 2.0 (the \"License\");\n      * you may not use this file except in compliance with the License.\n      * You may obtain a copy of the License at\n      *\n      *   http://www.apache.org/licenses/LICENSE-2.0\n      *\n      * Unless required by applicable law or agreed to in writing, software\n      * distributed under the License is distributed on an \"AS IS\" BASIS,\n      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      * See the License for the specific language governing permissions and\n      * limitations under the License.\n      */\n      // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n      // legacy SDK.\n      /**\n      * A reference to a transaction.\n      *\n      * The `Transaction` object passed to a transaction's `updateFunction` provides\n      * the methods to read and write data within the transaction context. See\n      * {@link runTransaction}.\n      */(t);\n      // Re-throw the error so that this.tail becomes a rejected Promise and\n      // all further attempts to chain (via .then) will just short-circuit\n      // and return the rejected Promise.\n      throw _(\"INTERNAL UNHANDLED ERROR: \", e), t;\n    }).then(t => (this.kt = !1, t))));\n    return this.xt = e, e;\n  }\n  enqueueAfterDelay(t, e, n) {\n    this.Ut(),\n    // Fast-forward delays for timerIds that have been overriden.\n    this.Lt.indexOf(t) > -1 && (e = 0);\n    const r = Jr.createAndSchedule(this, t, e, n, t => this.Qt(t));\n    return this.qt.push(r), r;\n  }\n  Ut() {\n    this.Ot && b();\n  }\n  verifyOperationInProgress() {}\n  /**\n   * Waits until all currently queued tasks are finished executing. Delayed\n   * operations are not run.\n   */\n  async zt() {\n    // Operations in the queue prior to draining may have enqueued additional\n    // operations. Keep draining the queue until the tail is no longer advanced,\n    // which indicates that no more new operations were enqueued and that all\n    // operations were executed.\n    let t;\n    do {\n      t = this.xt, await t;\n    } while (t !== this.xt);\n  }\n  /**\n   * For Tests: Determine if a delayed operation with a particular TimerId\n   * exists.\n   */\n  Gt(t) {\n    for (const e of this.qt) if (e.timerId === t) return !0;\n    return !1;\n  }\n  /**\n   * For Tests: Runs some or all delayed operations early.\n   *\n   * @param lastTimerId - Delayed operations up to and including this TimerId\n   * will be drained. Pass TimerId.All to run all delayed operations.\n   * @returns a Promise that resolves once all operations have been run.\n   */\n  Wt(t) {\n    // Note that draining may generate more delayed ops, so we do that first.\n    return this.zt().then(() => {\n      // Run ops in the same order they'd run if they ran naturally.\n      this.qt.sort((t, e) => t.targetTimeMs - e.targetTimeMs);\n      for (const e of this.qt) if (e.skipDelay(), \"all\" /* All */ !== t && e.timerId === t) break;\n      return this.zt();\n    });\n  }\n  /**\n   * For Tests: Skip all subsequent delays for a timer id.\n   */\n  Kt(t) {\n    this.Lt.push(t);\n  }\n  /** Called once a DelayedOperation is run or canceled. */\n  Qt(t) {\n    // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n    const e = this.qt.indexOf(t);\n    this.qt.splice(e, 1);\n  }\n}\nclass Zr {\n  /** @hideconstructor */\n  constructor(t, e) {\n    this._firestore = t, this._transaction = e, this._dataReader = Ln(t);\n  }\n  /**\n   * Reads the document referenced by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be read.\n   * @returns A `DocumentSnapshot` with the read data.\n   */\n  get(t) {\n    const e = zr(t, this._firestore),\n      n = new $r(this._firestore);\n    return this._transaction.lookup([e._key]).then(t => {\n      if (!t || 1 !== t.length) return b();\n      const r = t[0];\n      if (r.isFoundDocument()) return new ir(this._firestore, n, r.key, r, e.converter);\n      if (r.isNoDocument()) return new ir(this._firestore, n, e._key, null, e.converter);\n      throw b();\n    });\n  }\n  set(t, e, n) {\n    const r = zr(t, this._firestore),\n      s = Nr(r.converter, e, n),\n      i = Mn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n    return this._transaction.set(r._key, i), this;\n  }\n  update(t, e, n) {\n    const s = zr(t, this._firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n    let i;\n    for (var _len17 = arguments.length, r = new Array(_len17 > 3 ? _len17 - 3 : 0), _key17 = 3; _key17 < _len17; _key17++) {\n      r[_key17 - 3] = arguments[_key17];\n    }\n    return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof Nn ? Kn(this._dataReader, \"Transaction.update\", s._key, e, n, r) : Wn(this._dataReader, \"Transaction.update\", s._key, e), this._transaction.update(s._key, i), this;\n  }\n  /**\n   * Deletes the document referred to by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be deleted.\n   * @returns This `Transaction` instance. Used for chaining method calls.\n   */\n  delete(t) {\n    const e = zr(t, this._firestore);\n    return this._transaction.delete(e._key), this;\n  }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */\nfunction ts(t, e, n) {\n  const r = hn(t = ct(t, fn)),\n    s = Object.assign(Object.assign({}, Kr), n);\n  !function (t) {\n    if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n  }(s);\n  const i = new j();\n  return new Yr(new Xr(), r, s, n => e(new Zr(t, n)), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */\n!function (t) {\n  w = t;\n}(`${SDK_VERSION}_lite`), _registerComponent(new Component(\"firestore/lite\", (t, _ref5) => {\n  let {\n    instanceIdentifier: e,\n    options: n\n  } = _ref5;\n  const r = t.getProvider(\"app\").getImmediate(),\n    s = new fn(new G(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function (t, e) {\n      if (!Object.prototype.hasOwnProperty.apply(t.options, [\"projectId\"])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n      return new X(t.options.projectId, e);\n    }\n    /**\n    * @license\n    * Copyright 2017 Google LLC\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *   http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */(r, e), r);\n  return n && s._setSettings(n), s;\n}, \"PUBLIC\").setMultipleInstances(!0)),\n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nregisterVersion(\"firestore-lite\", \"3.7.3\", \"\"), registerVersion(\"firestore-lite\", \"3.7.3\", \"esm2017\");\nexport { yn as AggregateField, _n as AggregateQuerySnapshot, Vn as Bytes, En as CollectionReference, vn as DocumentReference, ir as DocumentSnapshot, Nn as FieldPath, Dn as FieldValue, fn as Firestore, U as FirestoreError, xn as GeoPoint, bn as Query, hr as QueryConstraint, or as QueryDocumentSnapshot, ur as QuerySnapshot, bt as Timestamp, Zr as Transaction, Qr as WriteBatch, Or as addDoc, Cr as aggregateQuerySnapshotEqual, jr as arrayRemove, Ur as arrayUnion, In as collection, Tn as collectionGroup, mn as connectFirestoreEmulator, qr as deleteDoc, Lr as deleteField, An as doc, $n as documentId, Tr as endAt, Ir as endBefore, kr as getCount, Dr as getDoc, xr as getDocs, wn as getFirestore, Br as increment, dn as initializeFirestore, yr as limit, _r as limitToLast, mr as orderBy, lr as query, Pn as queryEqual, Rn as refEqual, ts as runTransaction, Mr as serverTimestamp, Fr as setDoc, p as setLogLevel, cr as snapshotEqual, br as startAfter, vr as startAt, pn as terminate, Sr as updateDoc, dr as where, Gr as writeBatch };","map":{"version":3,"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,SAASsH,EAAE,CAAC5rB,CAAC,EAAEkB,CAAC,EAAE;EAClB,OAAOskB,EAAE,CAACxlB,CAAC,CAACkkB,KAAK,EAAEhjB,CAAC,CAACgjB,KAAK,CAAC,IAAI+D,SAAC,CAACjoB,CAAC,CAAC6R,IAAI,EAAE,EAAE3Q,CAAC,CAAC2Q,IAAI,EAAE,CAAC;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,SAASga,EAAE,GAAG;EACd,OAAO,IAAIvE,EAAE,CAAC,aAAa,CAAC;AAChC;;AAEA;AACA;AACA;AACA;AAAI,SAASwE,EAAE,GAAG;EACd,OAAO,IAAIrE,EAAE,CAAC,iBAAiB,CAAC;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,SAASsE,EAAE,GAAO;EAAA,oCAAH/rB,CAAC;IAADA,CAAC;EAAA;EACpB;EACA;EACI,OAAO,IAAI0nB,EAAE,CAAC,YAAY,EAAE1nB,CAAC,CAAC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,SAASgsB,EAAE,GAAO;EAAA,oCAAHhsB,CAAC;IAADA,CAAC;EAAA;EACpB;EACA;EACI,OAAO,IAAI4nB,EAAE,CAAC,aAAa,EAAE5nB,CAAC,CAAC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,SAASisB,EAAE,CAACjsB,CAAC,EAAE;EACf,OAAO,IAAI6nB,EAAE,CAAC,WAAW,EAAE7nB,CAAC,CAAC;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,MAAMksB,EAA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","names":["d","constructor","t","uid","isAuthenticated","toKey","isEqual","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","w","m","o","p","setLogLevel","y","logLevel","u","DEBUG","e","n","map","v","debug","_","ERROR","error","g","WARN","warn","JSON","stringify","b","Error","E","I","T","A","R","P","V","N","$","D","x","F","S","q","O","k","C","L","M","U","c","code","message","toString","name","j","promise","Promise","resolve","reject","B","user","type","headers","Map","set","Q","getToken","invalidateToken","start","enqueueRetryable","shutdown","z","token","changeListener","G","auth","onInit","then","accessToken","getUid","W","r","i","h","l","getAuthHeaderValueForFirstParty","K","Y","value","length","H","appCheck","J","s","databaseId","appId","persistenceKey","host","ssl","forceLongPolling","autoDetectLongPolling","useFetchStreams","X","projectId","database","empty","isDefaultDatabase","Z","segments","offset","len","comparator","child","slice","limit","forEach","push","construct","popFirst","popLast","firstSegment","lastSegment","get","isEmpty","isPrefixOf","isImmediateParentOf","toArray","Math","min","tt","canonicalString","join","fromString","indexOf","split","filter","emptyPath","et","nt","isValidIdentifier","test","replace","isKeyField","keyField","fromServerFormat","rt","path","fromPath","fromName","collectionGroup","hasCollectionId","getCollectionGroup","getCollectionPath","isDocumentKey","fromSegments","st","it","ot","ut","substring","Array","ct","_delegate","at","ht","lt","ft","BatchGetDocuments","Commit","RunQuery","RunAggregationQuery","dt","wt","mt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","pt","databaseInfo","method","body","status","statusText","ok","json","isArray","yt","self","crypto","msCrypto","Uint8Array","getRandomValues","floor","random","_t","charAt","gt","vt","every","bt","seconds","nanoseconds","now","fromMillis","Date","fromDate","getTime","toDate","toMillis","_compareTo","toJSON","valueOf","String","padStart","Et","timestamp","fromTimestamp","max","compareTo","toMicroseconds","toTimestamp","It","Object","prototype","hasOwnProperty","call","Tt","At","root","Pt","EMPTY","insert","copy","BLACK","remove","key","left","right","size","minKey","maxKey","inorderTraversal","reverseTraversal","getIterator","Rt","getIteratorFrom","getReverseIterator","getReverseIteratorFrom","isReverse","nodeStack","getNext","pop","hasNext","peek","color","RED","fixUp","removeMin","isRed","moveRedLeft","rotateRight","moveRedRight","rotateLeft","colorFlip","checkMaxDepth","check","pow","Vt","data","has","first","last","forEachInRange","forEachWhile","firstAfterOrEqual","Nt","add","delete","unionWith","iter","$t","fields","sort","covers","Dt","binaryString","fromBase64String","atob","fromUint8Array","fromCharCode","Symbol","iterator","next","charCodeAt","done","toBase64","btoa","toUint8Array","approximateByteSize","EMPTY_BYTE_STRING","xt","RegExp","Ft","exec","substr","Number","nanos","St","qt","Ot","mapValue","__type__","stringValue","kt","__previous_value__","Ct","__local_write_time__","timestampValue","Lt","Mt","Ut","booleanValue","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","isNaN","arrayValue","values","jt","find","Bt","Qt","keys","zt","Gt","Wt","Kt","Yt","Ht","assign","Jt","field","getFieldsMap","setAll","applyChanges","clone","Xt","documentType","version","readTime","documentState","newInvalidDocument","newFoundDocument","newNoDocument","newUnknownDocument","convertToFoundDocument","convertToNoDocument","convertToUnknownDocument","setHasCommittedMutations","setHasLocalMutations","setReadTime","hasLocalMutations","hasCommittedMutations","hasPendingWrites","isValidDocument","isFoundDocument","isNoDocument","isUnknownDocument","mutableCopy","Zt","orderBy","filters","startAt","endAt","te","ee","op","create","ne","oe","ue","ce","ae","re","se","matches","ie","some","nullValue","he","position","inclusive","le","dir","fe","de","we","explicitOrderBy","limitType","me","pe","ye","_e","ge","ve","be","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","Ee","Ie","Te","elements","Ae","Re","Pe","transform","Ve","updateTime","exists","none","isNone","Ne","$e","precondition","fieldTransforms","getFieldMask","De","fieldMask","xe","Fe","Se","asc","desc","qe","in","Oe","ke","toISOString","Ce","Le","Me","Ue","je","Be","tn","Qe","ze","Ge","We","found","missing","Ke","update","updateMask","Ze","verify","updateTransforms","fieldPath","setToServerValue","appendMissingElements","removeAllFromArray","increment","currentDocument","Ye","structuredQuery","parent","from","collectionId","allDescendants","unaryFilter","Xe","fieldFilter","Je","compositeFilter","where","direction","He","before","fieldPaths","en","nn","timerId","reset","cancel","enqueueAfterDelay","skipDelay","rn","authCredentials","appCheckCredentials","connection","all","catch","terminate","sn","writes","on","documents","un","document","cn","structuredAggregationQuery","aggregations","count","alias","result","aggregateFields","an","hn","_terminated","fetch","bind","_databaseId","app","options","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","_authCredentials","_appCheckCredentials","ln","credentials","ignoreUndefinedProperties","cacheSizeBytes","fn","_app","_settings","_settingsFrozen","_initialized","_terminateTask","_setSettings","client","sessionIndex","iamToken","authTokenFactory","_getSettings","_delete","_terminate","settings","dn","_getProvider","isInitialized","initialize","instanceIdentifier","wn","getImmediate","identifier","a","mn","mockUserToken","sub","user_id","pn","yn","_n","_data","query","gn","datastore","userDataWriter","run","_query","entries","convertValue","vn","converter","_key","firestore","_path","id","En","withConverter","bn","In","Tn","An","arguments","Rn","Pn","Vn","_byteString","Nn","_internalPath","$n","Dn","_methodName","xn","isFinite","_lat","_long","Fn","Sn","toMutation","qn","On","kn","rr","methodName","contains","Cn","Ln","Mn","merge","mergeFields","Zn","Jn","tr","sr","Un","_toFieldTransform","jn","Bn","Qn","Hn","zn","Gn","Wn","nr","Kn","f","Yn","Xn","getPrototypeOf","er","search","ir","_firestore","_userDataWriter","_document","_converter","ref","or","fromFirestore","ar","ur","_docs","docs","cr","hr","lr","_apply","fr","Pr","Rr","Vr","concat","dr","wr","mr","pr","yr","_r","gr","Ar","vr","br","Er","Ir","Tr","Nr","toFirestore","$r","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","convertDocumentKey","Dr","xr","reverse","Fr","Sr","qr","Or","kr","Cr","Lr","Mr","Ur","jr","Br","Qr","_commitHandler","_mutations","_committed","_dataReader","_verifyNotCommitted","zr","commit","Gr","Wr","readVersions","mutations","committed","lastWriteError","writtenDocs","Set","lookup","ensureCommitNotCalled","recordVersion","write","preconditionForUpdate","Kr","maxAttempts","Yr","asyncQueue","updateFunction","deferred","enqueueAndForget","Hr","Jr","targetTimeMs","removalCallback","createAndSchedule","timerHandle","setTimeout","handleDelayElapsed","clearTimeout","Xr","visibilityState","addEventListener","isShuttingDown","enqueue","enqueueAndForgetEvenWhileRestricted","enterRestrictedMode","removeEventListener","shift","stack","includes","verifyOperationInProgress","splice","Zr","_transaction","ts","getProvider","apply","setMultipleInstances"],"sources":["/Users/vinayyadav/Movies/pnc/node_modules/@firebase/firestore/dist/lite/index.browser.esm2017.js"],"sourcesContent":["import { _getProvider, getApp as t, _removeServiceInstance as e, _registerComponent as n, registerVersion as r, SDK_VERSION as s } from \"@firebase/app\";\n\nimport { Component as i } from \"@firebase/component\";\n\nimport { Logger as o, LogLevel as u } from \"@firebase/logger\";\n\nimport { FirebaseError as c, getDefaultEmulatorHostnameAndPort as a, createMockUserToken as h, getModularInstance as l, deepEqual as f } from \"@firebase/util\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass d {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ d.UNAUTHENTICATED = new d(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), \nd.MOCK_USER = new d(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet w = \"9.14.0\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst m = new o(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function p(t) {\n    m.setLogLevel(t);\n}\n\nfunction y(t, ...e) {\n    if (m.logLevel <= u.DEBUG) {\n        const n = e.map(v);\n        m.debug(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\nfunction _(t, ...e) {\n    if (m.logLevel <= u.ERROR) {\n        const n = e.map(v);\n        m.error(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function g(t, ...e) {\n    if (m.logLevel <= u.WARN) {\n        const n = e.map(v);\n        m.warn(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function v(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function b(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${w}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw _(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function E(t, e) {\n    t || b();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function I(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const T = \"ok\", A = \"cancelled\", R = \"unknown\", P = \"invalid-argument\", V = \"deadline-exceeded\", N = \"not-found\", $ = \"already-exists\", D = \"permission-denied\", x = \"unauthenticated\", F = \"resource-exhausted\", S = \"failed-precondition\", q = \"aborted\", O = \"out-of-range\", k = \"unimplemented\", C = \"internal\", L = \"unavailable\", M = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class U extends c {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class j {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class B {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class Q {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(d.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class z {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class G {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (E(\"string\" == typeof t.accessToken), \n        new B(t.accessToken, new d(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class W {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, \n        this.h = new Map;\n    }\n    /** Gets an authorization token, using a provided factory function, or falling back to First Party GAPI. */    l() {\n        return this.u ? this.u() : (\n        // Make sure this really is a Gapi client.\n        E(!(\"object\" != typeof this.t || null === this.t || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), \n        this.t.auth.getAuthHeaderValueForFirstParty([]));\n    }\n    get headers() {\n        this.h.set(\"X-Goog-AuthUser\", this.i);\n        // Use array notation to prevent minification\n        const t = this.l();\n        return t && this.h.set(\"Authorization\", t), this.o && this.h.set(\"X-Goog-Iam-Authorization-Token\", this.o), \n        this.h;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class K {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r;\n    }\n    getToken() {\n        return Promise.resolve(new W(this.t, this.i, this.o, this.u));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(d.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass Y {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class H {\n    constructor(t) {\n        this.m = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (E(\"string\" == typeof t.token), \n        new Y(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass J {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass X {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new X(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof X && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass Z {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === Z.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof Z ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class tt extends Z {\n    construct(t, e, n) {\n        return new tt(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new U(P, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new tt(e);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\nconst et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class nt extends Z {\n    construct(t, e, n) {\n        return new nt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return et.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new nt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new U(P, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(P, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n        return new nt(e);\n    }\n    static emptyPath() {\n        return new nt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class rt {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new rt(tt.fromString(t));\n    }\n    static fromName(t) {\n        return new rt(tt.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new rt(tt.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === tt.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return tt.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new rt(new tt(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function st(t, e, n) {\n    if (!n) throw new U(P, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction it(t) {\n    if (!rt.isDocumentKey(t)) throw new U(P, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function ot(t) {\n    if (rt.isDocumentKey(t)) throw new U(P, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction ut(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : b();\n}\n\nfunction ct(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = ut(t);\n            throw new U(P, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction at(t, e) {\n    if (e <= 0) throw new U(P, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function ht(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function lt(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ft = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\",\n    RunAggregationQuery: \"runAggregationQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar dt, wt;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction mt(t) {\n    if (void 0 === t) return _(\"RPC_ERROR\", \"HTTP error has no status\"), R;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return T;\n\n      case 400:\n        // Bad Request\n        return S;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return x;\n\n      case 403:\n        // Forbidden\n        return D;\n\n      case 404:\n        // Not Found\n        return N;\n\n      case 409:\n        // Conflict\n        return q;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return O;\n\n      case 429:\n        // Too Many Requests\n        return F;\n\n      case 499:\n        // Client Closed Request\n        return A;\n\n      case 500:\n        // Internal Server Error\n        return R;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return k;\n\n      case 503:\n        // Service Unavailable\n        return L;\n\n      case 504:\n        // Gateway Timeout\n        return V;\n\n      default:\n        return t >= 200 && t < 300 ? T : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : R;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (wt = dt || (dt = {}))[wt.OK = 0] = \"OK\", wt[wt.CANCELLED = 1] = \"CANCELLED\", \nwt[wt.UNKNOWN = 2] = \"UNKNOWN\", wt[wt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nwt[wt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", wt[wt.NOT_FOUND = 5] = \"NOT_FOUND\", \nwt[wt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", wt[wt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nwt[wt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", wt[wt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nwt[wt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", wt[wt.ABORTED = 10] = \"ABORTED\", \nwt[wt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", wt[wt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nwt[wt.INTERNAL = 13] = \"INTERNAL\", wt[wt.UNAVAILABLE = 14] = \"UNAVAILABLE\", wt[wt.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass pt extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.p = e + \"://\" + t.host, this.g = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    get v() {\n        // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n        // where to run the query, and expect the `request` to NOT specify the \"path\".\n        return !1;\n    }\n    I(t, e, n, r, s) {\n        const i = this.T(t, e);\n        y(\"RestConnection\", \"Sending: \", i, n);\n        const o = {};\n        return this.A(o, r, s), this.R(t, i, o, n).then((t => (y(\"RestConnection\", \"Received: \", t), \n        t)), (e => {\n            throw g(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), \n            e;\n        }));\n    }\n    P(t, e, n, r, s, i) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.I(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    A(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    T(t, e) {\n        const n = ft[t];\n        return `${this.p}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.V = e;\n    }\n    N(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async R(t, e, n, r) {\n        var s;\n        const i = JSON.stringify(r);\n        let o;\n        try {\n            o = await this.V(e, {\n                method: \"POST\",\n                headers: n,\n                body: i\n            });\n        } catch (t) {\n            throw new U(mt(t.status), \"Request failed with error: \" + t.statusText);\n        }\n        if (!o.ok) {\n            let t = await o.json();\n            Array.isArray(t) && (t = t[0]);\n            const e = null === (s = null == t ? void 0 : t.error) || void 0 === s ? void 0 : s.message;\n            throw new U(mt(o.status), `Request failed with error: ${null != e ? e : o.statusText}`);\n        }\n        return o.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction yt(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class _t {\n    static $() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = yt(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction gt(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function vt(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass bt {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return bt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return bt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new bt(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? gt(this.nanoseconds, t.nanoseconds) : gt(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class Et {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new Et(t);\n    }\n    static min() {\n        return new Et(new bt(0, 0));\n    }\n    static max() {\n        return new Et(new bt(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function It(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction Tt(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass At {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || Pt.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new At(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, Pt.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new At(this.comparator, this.root.remove(t, this.comparator).copy(null, null, Pt.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const r = this.comparator(t, n.key);\n            if (0 === r) return e + n.left.size;\n            r < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new Rt(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new Rt(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new Rt(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new Rt(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass Rt {\n    constructor(t, e, n, r) {\n        this.isReverse = r, this.nodeStack = [];\n        let s = 1;\n        for (;!t.isEmpty(); ) if (s = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && r && (s *= -1), s < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === s) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass Pt {\n    constructor(t, e, n, r, s) {\n        this.key = t, this.value = e, this.color = null != n ? n : Pt.RED, this.left = null != r ? r : Pt.EMPTY, \n        this.right = null != s ? s : Pt.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, r, s) {\n        return new Pt(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let r = this;\n        const s = n(t, r.key);\n        return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), \n        r.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return Pt.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, r = this;\n        if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), \n        r = r.copy(null, null, null, r.left.remove(t, e), null); else {\n            if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), \n            0 === e(t, r.key)) {\n                if (r.right.isEmpty()) return Pt.EMPTY;\n                n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n            }\n            r = r.copy(null, null, null, null, r.right.remove(t, e));\n        }\n        return r.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, Pt.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, Pt.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw b();\n        if (this.right.isRed()) throw b();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw b();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nPt.EMPTY = null, Pt.RED = !0, Pt.BLACK = !1;\n\n// end LLRBEmptyNode\nPt.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw b();\n    }\n    get value() {\n        throw b();\n    }\n    get color() {\n        throw b();\n    }\n    get left() {\n        throw b();\n    }\n    get right() {\n        throw b();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, r, s) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new Pt(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass Vt {\n    constructor(t) {\n        this.comparator = t, this.data = new At(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const r = n.getNext();\n            if (this.comparator(r.key, t[1]) >= 0) return;\n            e(r.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new Nt(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new Nt(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof Vt)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, r = n.getNext().key;\n            if (0 !== this.comparator(t, r)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new Vt(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass Nt {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class $t {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(nt.comparator);\n    }\n    static empty() {\n        return new $t([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */    unionWith(t) {\n        let e = new Vt(nt.comparator);\n        for (const t of this.fields) e = e.add(t);\n        for (const n of t) e = e.add(n);\n        return new $t(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return vt(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass Dt {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = atob(t);\n        return new Dt(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new Dt(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        /** Converts a binary string to a Base64 encoded string. */\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return gt(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nDt.EMPTY_BYTE_STRING = new Dt(\"\");\n\nconst xt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function Ft(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (E(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = xt.exec(t);\n        if (E(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: St(t.seconds),\n        nanos: St(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function St(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function qt(t) {\n    return \"string\" == typeof t ? Dt.fromBase64String(t) : Dt.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function Ot(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function kt(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return Ot(e) ? kt(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function Ct(t) {\n    const e = Ft(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new bt(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Lt = {\n    fields: {\n        __type__: {\n            stringValue: \"__max__\"\n        }\n    }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction Mt(t) {\n    return \"nullValue\" in t ? 0 /* NullValue */ : \"booleanValue\" in t ? 1 /* BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* NumberValue */ : \"timestampValue\" in t ? 3 /* TimestampValue */ : \"stringValue\" in t ? 5 /* StringValue */ : \"bytesValue\" in t ? 6 /* BlobValue */ : \"referenceValue\" in t ? 7 /* RefValue */ : \"geoPointValue\" in t ? 8 /* GeoPointValue */ : \"arrayValue\" in t ? 9 /* ArrayValue */ : \"mapValue\" in t ? Ot(t) ? 4 /* ServerTimestampValue */ : \n    /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n    function(t) {\n        return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ (t) ? 9007199254740991 /* MaxValue */ : 10 /* ObjectValue */ : b();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function Ut(t, e) {\n    if (t === e) return !0;\n    const n = Mt(t);\n    if (n !== Mt(e)) return !1;\n    switch (n) {\n      case 0 /* NullValue */ :\n      case 9007199254740991 /* MaxValue */ :\n        return !0;\n\n      case 1 /* BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* ServerTimestampValue */ :\n        return Ct(t).isEqual(Ct(e));\n\n      case 3 /* TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = Ft(t.timestampValue), r = Ft(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            return qt(t.bytesValue).isEqual(qt(e.bytesValue));\n        }(t, e);\n\n      case 7 /* RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            return St(t.geoPointValue.latitude) === St(e.geoPointValue.latitude) && St(t.geoPointValue.longitude) === St(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return St(t.integerValue) === St(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = St(t.doubleValue), r = St(e.doubleValue);\n                return n === r ? lt(n) === lt(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* ArrayValue */ :\n        return vt(t.arrayValue.values || [], e.arrayValue.values || [], Ut);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (It(n) !== It(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !Ut(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return b();\n    }\n}\n\nfunction jt(t, e) {\n    return void 0 !== (t.values || []).find((t => Ut(t, e)));\n}\n\nfunction Bt(t, e) {\n    if (t === e) return 0;\n    const n = Mt(t), r = Mt(e);\n    if (n !== r) return gt(n, r);\n    switch (n) {\n      case 0 /* NullValue */ :\n      case 9007199254740991 /* MaxValue */ :\n        return 0;\n\n      case 1 /* BooleanValue */ :\n        return gt(t.booleanValue, e.booleanValue);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            const n = St(t.integerValue || t.doubleValue), r = St(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TimestampValue */ :\n        return Qt(t.timestampValue, e.timestampValue);\n\n      case 4 /* ServerTimestampValue */ :\n        return Qt(Ct(t), Ct(e));\n\n      case 5 /* StringValue */ :\n        return gt(t.stringValue, e.stringValue);\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            const n = qt(t), r = qt(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = gt(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return gt(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            const n = gt(St(t.latitude), St(e.latitude));\n            if (0 !== n) return n;\n            return gt(St(t.longitude), St(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = Bt(n[t], r[t]);\n                if (e) return e;\n            }\n            return gt(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            if (t === Lt && e === Lt) return 0;\n            if (t === Lt) return 1;\n            if (e === Lt) return -1;\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = gt(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = Bt(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return gt(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw b();\n    }\n}\n\nfunction Qt(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return gt(t, e);\n    const n = Ft(t), r = Ft(e), s = gt(n.seconds, r.seconds);\n    return 0 !== s ? s : gt(n.nanos, r.nanos);\n}\n\nfunction zt(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function Gt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Wt(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Kt(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function Yt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Ht(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Tt(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Ht(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Ht(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\nclass Jt {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new Jt({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !Yt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Ht(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = nt.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Ht(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        Yt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return Ut(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            Yt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        Tt(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new Jt(Ht(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class Xt {\n    constructor(t, e, n, r, s, i) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.data = s, \n        this.documentState = i;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new Xt(t, 0 /* INVALID */ , Et.min(), Et.min(), Jt.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n) {\n        return new Xt(t, 1 /* FOUND_DOCUMENT */ , e, Et.min(), n, 0 /* SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new Xt(t, 2 /* NO_DOCUMENT */ , e, Et.min(), Jt.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new Xt(t, 3 /* UNKNOWN_DOCUMENT */ , e, Et.min(), Jt.empty(), 2 /* HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        return this.version = t, this.documentType = 1 /* FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* NO_DOCUMENT */ , this.data = Jt.empty(), \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* UNKNOWN_DOCUMENT */ , this.data = Jt.empty(), \n        this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* HAS_LOCAL_MUTATIONS */ , this.version = Et.min(), \n        this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof Xt && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new Xt(this.key, this.documentType, this.version, this.readTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass Zt {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.D = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function te(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new Zt(t, e, n, r, s, i, o);\n}\n\nclass ee extends class {} {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* IN */ === e || \"not-in\" /* NOT_IN */ === e ? this.F(t, e, n) : new ne(t, e, n) : \"array-contains\" /* ARRAY_CONTAINS */ === e ? new oe(t, n) : \"in\" /* IN */ === e ? new ue(t, n) : \"not-in\" /* NOT_IN */ === e ? new ce(t, n) : \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === e ? new ae(t, n) : new ee(t, e, n);\n    }\n    static F(t, e, n) {\n        return \"in\" /* IN */ === e ? new re(t, n) : new se(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* NOT_EQUAL */ === this.op ? null !== e && this.S(Bt(e, this.value)) : null !== e && Mt(this.value) === Mt(e) && this.S(Bt(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    S(t) {\n        switch (this.op) {\n          case \"<\" /* LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return b();\n        }\n    }\n    q() {\n        return [ \"<\" /* LESS_THAN */ , \"<=\" /* LESS_THAN_OR_EQUAL */ , \">\" /* GREATER_THAN */ , \">=\" /* GREATER_THAN_OR_EQUAL */ , \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n}\n\n/** Filter that matches on key fields (i.e. '__name__'). */\nclass ne extends ee {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = rt.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = rt.comparator(t.key, this.key);\n        return this.S(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class re extends ee {\n    constructor(t, e) {\n        super(t, \"in\" /* IN */ , e), this.keys = ie(\"in\" /* IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class se extends ee {\n    constructor(t, e) {\n        super(t, \"not-in\" /* NOT_IN */ , e), this.keys = ie(\"not-in\" /* NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction ie(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => rt.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class oe extends ee {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return Gt(e) && jt(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class ue extends ee {\n    constructor(t, e) {\n        super(t, \"in\" /* IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && jt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class ce extends ee {\n    constructor(t, e) {\n        super(t, \"not-in\" /* NOT_IN */ , e);\n    }\n    matches(t) {\n        if (jt(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !jt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class ae extends ee {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!Gt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => jt(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ class he {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class le {\n    constructor(t, e = \"asc\" /* ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction fe(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\nfunction de(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!Ut(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */ class we {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.O = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.k = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function me(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction pe(t) {\n    for (const e of t.filters) if (e.q()) return e.field;\n    return null;\n}\n\n/**\n * Checks if any of the provided Operators are included in the query and\n * returns the first one that is, or null if none are.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction ye(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function _e(t) {\n    const e = I(t);\n    if (null === e.O) {\n        e.O = [];\n        const t = pe(e), n = me(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.O.push(new le(t)), e.O.push(new le(nt.keyField(), \"asc\" /* ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.O.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* ASCENDING */;\n                e.O.push(new le(nt.keyField(), t));\n            }\n        }\n    }\n    return e.O;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function ge(t) {\n    const e = I(t);\n    if (!e.k) if (\"F\" /* First */ === e.limitType) e.k = te(e.path, e.collectionGroup, _e(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of _e(e)) {\n            const e = \"desc\" /* DESCENDING */ === n.dir ? \"asc\" /* ASCENDING */ : \"desc\" /* DESCENDING */;\n            t.push(new le(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new he(e.endAt.position, e.endAt.inclusive) : null, r = e.startAt ? new he(e.startAt.position, e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.k = te(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.k;\n}\n\nfunction ve(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!fe(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let s = 0; s < t.filters.length; s++) if (n = t.filters[s], r = e.filters[s], \n        n.op !== r.op || !n.field.isEqual(r.field) || !Ut(n.value, r.value)) return !1;\n        var n, r;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!de(t.startAt, e.startAt) && de(t.endAt, e.endAt);\n    }(ge(t), ge(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction be(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !lt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.C) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: lt(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class Ee {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class Ie extends Ee {}\n\n/** Transforms an array value via a union operation. */ class Te extends Ee {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class Ae extends Ee {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class Re extends Ee {\n    constructor(t, e) {\n        super(), this.L = t, this.M = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class Pe {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class Ve {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new Ve;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new Ve(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new Ve(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class Ne {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class $e extends Ne {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class De extends Ne {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class xe extends Ne {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* Delete */ , this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class Fe extends Ne {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* Verify */ , this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Se = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), qe = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Oe {\n    constructor(t, e) {\n        this.databaseId = t, this.C = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction ke(t, e) {\n    if (t.C) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Ce(t, e) {\n    return t.C ? e.toBase64() : e.toUint8Array();\n}\n\nfunction Le(t, e) {\n    return ke(t, e.toTimestamp());\n}\n\nfunction Me(t) {\n    return E(!!t), Et.fromTimestamp(function(t) {\n        const e = Ft(t);\n        return new bt(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction Ue(t, e) {\n    return function(t) {\n        return new tt([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction je(t, e) {\n    return Ue(t.databaseId, e.path);\n}\n\nfunction Be(t, e) {\n    const n = function(t) {\n        const e = tt.fromString(t);\n        return E(tn(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction Qe(t, e) {\n    return Ue(t.databaseId, e);\n}\n\nfunction ze(t) {\n    return new tt([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction Ge(t, e, n) {\n    return {\n        name: je(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction We(t, e) {\n    return \"found\" in e ? function(t, e) {\n        E(!!e.found), e.found.name, e.found.updateTime;\n        const n = Be(t, e.found.name), r = Me(e.found.updateTime), s = new Jt({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return Xt.newFoundDocument(n, r, s);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        E(!!e.missing), E(!!e.readTime);\n        const n = Be(t, e.missing), r = Me(e.readTime);\n        return Xt.newNoDocument(n, r);\n    }(t, e) : b();\n}\n\nfunction Ke(t, e) {\n    let n;\n    if (e instanceof $e) n = {\n        update: Ge(t, e.key, e.value)\n    }; else if (e instanceof xe) n = {\n        delete: je(t, e.key)\n    }; else if (e instanceof De) n = {\n        update: Ge(t, e.key, e.data),\n        updateMask: Ze(e.fieldMask)\n    }; else {\n        if (!(e instanceof Fe)) return b();\n        n = {\n            verify: je(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof Ie) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof Te) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Ae) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Re) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.M\n        };\n        throw b();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: Le(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : b();\n    }(t, e.precondition)), n;\n}\n\nfunction Ye(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = Qe(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = Qe(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        const e = t.map((t => \n        // visible for testing\n        function(t) {\n            if (\"==\" /* EQUAL */ === t.op) {\n                if (Kt(t.value)) return {\n                    unaryFilter: {\n                        field: Xe(t.field),\n                        op: \"IS_NAN\"\n                    }\n                };\n                if (Wt(t.value)) return {\n                    unaryFilter: {\n                        field: Xe(t.field),\n                        op: \"IS_NULL\"\n                    }\n                };\n            } else if (\"!=\" /* NOT_EQUAL */ === t.op) {\n                if (Kt(t.value)) return {\n                    unaryFilter: {\n                        field: Xe(t.field),\n                        op: \"IS_NOT_NAN\"\n                    }\n                };\n                if (Wt(t.value)) return {\n                    unaryFilter: {\n                        field: Xe(t.field),\n                        op: \"IS_NOT_NULL\"\n                    }\n                };\n            }\n            return {\n                fieldFilter: {\n                    field: Xe(t.field),\n                    op: Je(t.op),\n                    value: t.value\n                }\n            };\n        }(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: \"AND\",\n                filters: e\n            }\n        };\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: Xe(t.field),\n                direction: He(t.dir)\n            };\n        }(t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.C || ht(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), n;\n}\n\nfunction He(t) {\n    return Se[t];\n}\n\n// visible for testing\nfunction Je(t) {\n    return qe[t];\n}\n\nfunction Xe(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction Ze(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction tn(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function en(t) {\n    return new Oe(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass nn {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.U = t, this.timerId = e, this.j = n, this.B = r, this.G = s, this.W = 0, this.K = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.Y = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.W = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    H() {\n        this.W = this.G;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    J(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.W + this.X()), n = Math.max(0, Date.now() - this.Y), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && y(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.W} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.K = this.U.enqueueAfterDelay(this.timerId, r, (() => (this.Y = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.W *= this.B, this.W < this.j && (this.W = this.j), this.W > this.G && (this.W = this.G);\n    }\n    Z() {\n        null !== this.K && (this.K.skipDelay(), this.K = null);\n    }\n    cancel() {\n        null !== this.K && (this.K.cancel(), this.K = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    X() {\n        return (Math.random() - .5) * this.W;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass rn extends class {} {\n    constructor(t, e, n, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.connection = n, \n        this.L = r, this.tt = !1;\n    }\n    et() {\n        if (this.tt) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    I(t, e, n) {\n        return this.et(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.connection.I(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === x && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    P(t, e, n, r) {\n        return this.et(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.connection.P(t, e, n, s, i, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === x && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    terminate() {\n        this.tt = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function sn(t, e) {\n    const n = I(t), r = ze(n.L) + \"/documents\", s = {\n        writes: e.map((t => Ke(n.L, t)))\n    };\n    await n.I(\"Commit\", r, s);\n}\n\nasync function on(t, e) {\n    const n = I(t), r = ze(n.L) + \"/documents\", s = {\n        documents: e.map((t => je(n.L, t)))\n    }, i = await n.P(\"BatchGetDocuments\", r, s, e.length), o = new Map;\n    i.forEach((t => {\n        const e = We(n.L, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        E(!!e), u.push(e);\n    })), u;\n}\n\nasync function un(t, e) {\n    const n = I(t), r = Ye(n.L, ge(e));\n    return (await n.P(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = Be(t, e.name), s = Me(e.updateTime), i = new Jt({\n            mapValue: {\n                fields: e.fields\n            }\n        }), o = Xt.newFoundDocument(r, s, i);\n        return n && o.setHasCommittedMutations(), n ? o.setHasCommittedMutations() : o;\n    }(n.L, t.document, void 0)));\n}\n\nasync function cn(t, e) {\n    const n = I(t), r = function(t, e) {\n        const n = Ye(t, e);\n        return {\n            structuredAggregationQuery: {\n                aggregations: [ {\n                    count: {},\n                    alias: \"count_alias\"\n                } ],\n                structuredQuery: n.structuredQuery\n            },\n            parent: n.parent\n        };\n    }(n.L, ge(e)), s = r.parent;\n    n.connection.v || delete r.parent;\n    return (await n.P(\"RunAggregationQuery\", s, r, /*expectedResponseCount=*/ 1)).filter((t => !!t.result)).map((t => t.result.aggregateFields));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const an = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction hn(t) {\n    if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n    if (!an.has(t)) {\n        y(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new pt(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new J(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = en(t._databaseId), u = function(t, e, n, r) {\n            return new rn(t, e, n, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        an.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return an.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass ln {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new U(P, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */ class fn {\n    /** @hideconstructor */\n    constructor(t, e, n, r) {\n        this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, \n        this._app = r, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new ln({}), \n        this._settingsFrozen = !1;\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new ln(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new Q;\n            switch (t.type) {\n              case \"gapi\":\n                const e = t.client;\n                return new K(e, t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = an.get(t);\n            e && (y(\"ComponentProvider\", \"Removing Datastore\"), an.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction dn(t, e, n) {\n    n || (n = \"(default)\");\n    const r = _getProvider(t, \"firestore/lite\");\n    if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n    return r.initialize({\n        options: e,\n        instanceIdentifier: n\n    });\n}\n\nfunction wn(e, n) {\n    const r = \"object\" == typeof e ? e : t(), s = \"string\" == typeof e ? e : n || \"(default)\", i = _getProvider(r, \"firestore/lite\").getImmediate({\n        identifier: s\n    });\n    if (!i._initialized) {\n        const t = a(\"firestore\");\n        t && mn(i, ...t);\n    }\n    return i;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function mn(t, e, n, r = {}) {\n    var s;\n    const i = (t = ct(t, fn))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== e && g(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = d.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = h(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new d(i);\n        }\n        t._authCredentials = new z(new B(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function pn(t) {\n    return t = ct(t, fn), e(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass yn {\n    constructor() {\n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateField\";\n    }\n}\n\n/**\n * The results of executing an aggregation query.\n */ class _n {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._data = e, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateQuerySnapshot\", this.query = t;\n    }\n    /**\n     * Returns the results of the aggregations performed over the underlying\n     * query.\n     *\n     * The keys of the returned object will be the same as those of the\n     * `AggregateSpec` object specified to the aggregation method, and the values\n     * will be the corresponding aggregation result.\n     *\n     * @returns The results of the aggregations performed over the underlying\n     * query.\n     */    data() {\n        return this._data;\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * CountQueryRunner encapsulates the logic needed to run the count aggregation\n * queries.\n */ class gn {\n    constructor(t, e, n) {\n        this.query = t, this.datastore = e, this.userDataWriter = n;\n    }\n    run() {\n        return cn(this.datastore, this.query._query).then((t => {\n            E(void 0 !== t[0]);\n            const e = Object.entries(t[0]).filter((([t, e]) => \"count_alias\" === t)).map((([t, e]) => this.userDataWriter.convertValue(e)))[0];\n            return E(\"number\" == typeof e), Promise.resolve(new _n(this.query, {\n                count: e\n            }));\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */ class vn {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new En(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new vn(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class bn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new bn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class En extends bn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new we(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new vn(this.firestore, \n        /* converter= */ null, new rt(t));\n    }\n    withConverter(t) {\n        return new En(this.firestore, t, this._path);\n    }\n}\n\nfunction In(t, e, ...n) {\n    if (t = l(t), st(\"collection\", \"path\", e), t instanceof fn) {\n        const r = tt.fromString(e, ...n);\n        return ot(r), new En(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof vn || t instanceof En)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return ot(r), new En(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function Tn(t, e) {\n    if (t = ct(t, fn), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new bn(t, \n    /* converter= */ null, \n    /**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n    function(t) {\n        return new we(tt.emptyPath(), t);\n    }(e));\n}\n\nfunction An(t, e, ...n) {\n    if (t = l(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = _t.$()), st(\"doc\", \"path\", e), t instanceof fn) {\n        const r = tt.fromString(e, ...n);\n        return it(r), new vn(t, \n        /* converter= */ null, new rt(r));\n    }\n    {\n        if (!(t instanceof vn || t instanceof En)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return it(r), new vn(t.firestore, t instanceof En ? t.converter : null, new rt(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Rn(t, e) {\n    return t = l(t), e = l(e), (t instanceof vn || t instanceof En) && (e instanceof vn || e instanceof En) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Pn(t, e) {\n    return t = l(t), e = l(e), t instanceof bn && e instanceof bn && (t.firestore === e.firestore && ve(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class Vn {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new Vn(Dt.fromBase64String(t));\n        } catch (t) {\n            throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new Vn(Dt.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class Nn {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new nt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function $n() {\n    return new Nn(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class Dn {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class xn {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return gt(this._lat, t._lat) || gt(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Fn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class Sn {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new De(t, this.data, this.fieldMask, e, this.fieldTransforms) : new $e(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class qn {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new De(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction On(t) {\n    switch (t) {\n      case 0 /* Set */ :\n // fall through\n              case 2 /* MergeSet */ :\n // fall through\n              case 1 /* Update */ :\n        return !0;\n\n      case 3 /* Argument */ :\n      case 4 /* ArrayArgument */ :\n        return !1;\n\n      default:\n        throw b();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class kn {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.L = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.nt(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get rt() {\n        return this.settings.rt;\n    }\n    /** Returns a new context with the specified settings overwritten. */    st(t) {\n        return new kn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.L, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    it(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.st({\n            path: n,\n            ot: !1\n        });\n        return r.ut(t), r;\n    }\n    ct(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.st({\n            path: n,\n            ot: !1\n        });\n        return r.nt(), r;\n    }\n    at(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.st({\n            path: void 0,\n            ot: !0\n        });\n    }\n    ht(t) {\n        return rr(t, this.settings.methodName, this.settings.lt || !1, this.path, this.settings.ft);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    nt() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.ut(this.path.get(t));\n    }\n    ut(t) {\n        if (0 === t.length) throw this.ht(\"Document fields must not be empty\");\n        if (On(this.rt) && Fn.test(t)) throw this.ht('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class Cn {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.L = n || en(t);\n    }\n    /** Creates a new top-level parse context. */    dt(t, e, n, r = !1) {\n        return new kn({\n            rt: t,\n            methodName: e,\n            ft: n,\n            path: nt.emptyPath(),\n            ot: !1,\n            lt: r\n        }, this.databaseId, this.L, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Ln(t) {\n    const e = t._freezeSettings(), n = en(t._databaseId);\n    return new Cn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Mn(t, e, n, r, s, i = {}) {\n    const o = t.dt(i.merge || i.mergeFields ? 2 /* MergeSet */ : 0 /* Set */ , e, n, s);\n    Zn(\"Data must be an object, but it was:\", o, r);\n    const u = Jn(r, o);\n    let c, a;\n    if (i.merge) c = new $t(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = tr(e, r, n);\n            if (!o.contains(s)) throw new U(P, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            sr(t, s) || t.push(s);\n        }\n        c = new $t(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new Sn(new Jt(u), c, a);\n}\n\nclass Un extends Dn {\n    _toFieldTransform(t) {\n        if (2 /* MergeSet */ !== t.rt) throw 1 /* Update */ === t.rt ? t.ht(`${this._methodName}() can only appear at the top level of your update data`) : t.ht(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof Un;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function jn(t, e, n) {\n    return new kn({\n        rt: 3 /* Argument */ ,\n        ft: e.settings.ft,\n        methodName: t._methodName,\n        ot: n\n    }, e.databaseId, e.L, e.ignoreUndefinedProperties);\n}\n\nclass Bn extends Dn {\n    _toFieldTransform(t) {\n        return new Pe(t.path, new Ie);\n    }\n    isEqual(t) {\n        return t instanceof Bn;\n    }\n}\n\nclass Qn extends Dn {\n    constructor(t, e) {\n        super(t), this.wt = e;\n    }\n    _toFieldTransform(t) {\n        const e = jn(this, t, \n        /*array=*/ !0), n = this.wt.map((t => Hn(t, e))), r = new Te(n);\n        return new Pe(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass zn extends Dn {\n    constructor(t, e) {\n        super(t), this.wt = e;\n    }\n    _toFieldTransform(t) {\n        const e = jn(this, t, \n        /*array=*/ !0), n = this.wt.map((t => Hn(t, e))), r = new Ae(n);\n        return new Pe(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Gn extends Dn {\n    constructor(t, e) {\n        super(t), this.yt = e;\n    }\n    _toFieldTransform(t) {\n        const e = new Re(t.L, be(t.L, this.yt));\n        return new Pe(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function Wn(t, e, n, r) {\n    const s = t.dt(1 /* Update */ , e, n);\n    Zn(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = Jt.empty();\n    Tt(r, ((t, r) => {\n        const u = nr(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = l(r);\n        const c = s.ct(u);\n        if (r instanceof Un) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = Hn(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new $t(i);\n    return new qn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function Kn(t, e, n, r, s, i) {\n    const o = t.dt(1 /* Update */ , e, n), u = [ tr(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new U(P, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(tr(e, i[t])), c.push(i[t + 1]);\n    const a = [], h = Jt.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!sr(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = l(n);\n        const r = o.ct(e);\n        if (n instanceof Un) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = Hn(n, r);\n            null != t && (a.push(e), h.set(e, t));\n        }\n    }\n    const f = new $t(a);\n    return new qn(h, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function Yn(t, e, n, r = !1) {\n    return Hn(n, t.dt(r ? 4 /* ArrayArgument */ : 3 /* Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function Hn(t, e) {\n    if (Xn(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = l(t))) return Zn(\"Unsupported field value:\", e, t), Jn(t, e);\n    if (t instanceof Dn) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!On(e.rt)) throw e.ht(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.ht(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.ot && 4 /* ArrayArgument */ !== e.rt) throw e.ht(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = Hn(s, e.at(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = l(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return be(e.L, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = bt.fromDate(t);\n            return {\n                timestampValue: ke(e.L, n)\n            };\n        }\n        if (t instanceof bt) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new bt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: ke(e.L, n)\n            };\n        }\n        if (t instanceof xn) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof Vn) return {\n            bytesValue: Ce(e.L, t._byteString)\n        };\n        if (t instanceof vn) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.ht(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: Ue(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.ht(`Unsupported field value: ${ut(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction Jn(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }(t) ? Tt(t, ((t, r) => {\n        const s = Hn(r, e.it(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction Xn(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof bt || t instanceof xn || t instanceof Vn || t instanceof vn || t instanceof Dn);\n}\n\nfunction Zn(t, e, n) {\n    if (!Xn(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = ut(n);\n        throw \"an object\" === r ? e.ht(t + \" a custom object\") : e.ht(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function tr(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = l(e)) instanceof Nn) return e._internalPath;\n    if (\"string\" == typeof e) return nr(t, e);\n    throw rr(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const er = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function nr(t, e, n) {\n    if (e.search(er) >= 0) throw rr(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new Nn(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw rr(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction rr(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new U(P, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function sr(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class ir {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new vn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new or(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(ar(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class or extends ir {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class ur {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function cr(t, e) {\n    return t = l(t), e = l(e), t instanceof ir && e instanceof ir ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof ur && e instanceof ur && (Pn(t.query, e.query) && vt(t.docs, e.docs, cr));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function ar(t, e) {\n    return \"string\" == typeof e ? nr(t, e) : e instanceof Nn ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * endBefore:1}, {@link (endAt:1)}, {@link limit} or {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nclass hr {}\n\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also include\n * additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new constraints.\n * @param queryConstraints - The list of {@link QueryConstraint}s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */ function lr(t, ...e) {\n    for (const n of e) t = n._apply(t);\n    return t;\n}\n\nclass fr extends hr {\n    constructor(t, e, n) {\n        super(), this._t = t, this.gt = e, this.vt = n, this.type = \"where\";\n    }\n    _apply(t) {\n        const e = Ln(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* ARRAY_CONTAINS */ === i || \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === i) throw new U(P, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i) {\n                    Pr(o, i);\n                    const e = [];\n                    for (const n of o) e.push(Rr(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = Rr(r, t, o);\n            } else \"in\" /* IN */ !== i && \"not-in\" /* NOT_IN */ !== i && \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ !== i || Pr(o, i), \n            u = Yn(n, e, o, \n            /* allowArrays= */ \"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i);\n            const c = ee.create(s, i, u);\n            return function(t, e) {\n                if (e.q()) {\n                    const n = pe(t);\n                    if (null !== n && !n.isEqual(e.field)) throw new U(P, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${e.field.toString()}'`);\n                    const r = me(t);\n                    null !== r && Vr(t, e.field, r);\n                }\n                const n = function(t, e) {\n                    for (const n of t.filters) if (e.indexOf(n.op) >= 0) return n.op;\n                    return null;\n                }(t, \n                /**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */\n                function(t) {\n                    switch (t) {\n                      case \"!=\" /* NOT_EQUAL */ :\n                        return [ \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains\" /* ARRAY_CONTAINS */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"in\" /* IN */ :\n                        return [ \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"not-in\" /* NOT_IN */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ , \"!=\" /* NOT_EQUAL */ ];\n\n                      default:\n                        return [];\n                    }\n                }(e.op));\n                if (null !== n) \n                // Special case when it's a duplicate op to give a slightly clearer error message.\n                throw n === e.op ? new U(P, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(P, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n            }(t, c), c;\n        }(t._query, \"where\", e, t.firestore._databaseId, this._t, this.gt, this.vt);\n        return new bn(t.firestore, t.converter, function(t, e) {\n            const n = t.filters.concat([ e ]);\n            return new we(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, n));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that enforces that documents must contain the\n * specified field and that the value should satisfy the relation constraint\n * provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link Query}.\n */ function dr(t, e, n) {\n    const r = e, s = ar(\"where\", t);\n    return new fr(s, r, n);\n}\n\nclass wr extends hr {\n    constructor(t, e) {\n        super(), this._t = t, this.bt = e, this.type = \"orderBy\";\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new le(e, n);\n            return function(t, e) {\n                if (null === me(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = pe(t);\n                    null !== n && Vr(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this._t, this.bt);\n        return new bn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new we(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link Query}.\n */ function mr(t, e = \"asc\") {\n    const n = e, r = ar(\"orderBy\", t);\n    return new wr(r, n);\n}\n\nclass pr extends hr {\n    constructor(t, e, n) {\n        super(), this.type = t, this.Et = e, this.It = n;\n    }\n    _apply(t) {\n        return new bn(t.firestore, t.converter, function(t, e, n) {\n            return new we(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this.Et, this.It));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the first matching documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function yr(t) {\n    return at(\"limit\", t), new pr(\"limit\", t, \"F\" /* First */);\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the last matching documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function _r(t) {\n    return at(\"limitToLast\", t), new pr(\"limitToLast\", t, \"L\" /* Last */);\n}\n\nclass gr extends hr {\n    constructor(t, e, n) {\n        super(), this.type = t, this.Tt = e, this.At = n;\n    }\n    _apply(t) {\n        const e = Ar(t, this.type, this.Tt, this.At);\n        return new bn(t.firestore, t.converter, function(t, e) {\n            return new we(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction vr(...t) {\n    return new gr(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction br(...t) {\n    return new gr(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\nclass Er extends hr {\n    constructor(t, e, n) {\n        super(), this.type = t, this.Tt = e, this.At = n;\n    }\n    _apply(t) {\n        const e = Ar(t, this.type, this.Tt, this.At);\n        return new bn(t.firestore, t.converter, function(t, e) {\n            return new we(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction Ir(...t) {\n    return new Er(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction Tr(...t) {\n    return new Er(\"endAt\", t, /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function Ar(t, e, n, r) {\n    if (n[0] = l(n[0]), n[0] instanceof ir) return function(t, e, n, r, s) {\n        if (!r) throw new U(N, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of _e(t)) if (n.field.isKeyField()) i.push(zt(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if (Ot(t)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new U(P, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new he(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Ln(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new U(P, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new U(P, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!ye(t) && -1 !== c.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(tt.fromString(c));\n                    if (!rt.isDocumentKey(n)) throw new U(P, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new rt(n);\n                    u.push(zt(e, s));\n                } else {\n                    const t = Yn(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new he(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction Rr(t, e, n) {\n    if (\"string\" == typeof (n = l(n))) {\n        if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!ye(e) && -1 !== n.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(tt.fromString(n));\n        if (!rt.isDocumentKey(r)) throw new U(P, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return zt(t, new rt(r));\n    }\n    if (n instanceof vn) return zt(t, n._key);\n    throw new U(P, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${ut(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function Pr(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new U(P, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n    if (t.length > 10) throw new U(P, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\nfunction Vr(t, e, n) {\n    if (!n.isEqual(e)) throw new U(P, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction Nr(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass $r extends class {\n    convertValue(t, e = \"none\") {\n        switch (Mt(t)) {\n          case 0 /* NullValue */ :\n            return null;\n\n          case 1 /* BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* NumberValue */ :\n            return St(t.integerValue || t.doubleValue);\n\n          case 3 /* TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* StringValue */ :\n            return t.stringValue;\n\n          case 6 /* BlobValue */ :\n            return this.convertBytes(qt(t.bytesValue));\n\n          case 7 /* RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw b();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return Tt(t.fields, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new xn(St(t.latitude), St(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = kt(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(Ct(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = Ft(t);\n        return new bt(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = tt.fromString(t);\n        E(tn(n));\n        const r = new X(n.get(1), n.get(3)), s = new rt(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        _(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new Vn(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new vn(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function Dr(t) {\n    const e = hn((t = ct(t, vn)).firestore), n = new $r(t.firestore);\n    return on(e, [ t._key ]).then((e => {\n        E(1 === e.length);\n        const r = e[0];\n        return new ir(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function xr(t) {\n    !function(t) {\n        if (\"L\" /* Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ct(t, bn))._query);\n    const e = hn(t.firestore), n = new $r(t.firestore);\n    return un(e, t._query).then((e => {\n        const r = e.map((e => new or(t.firestore, n, e.key, e, t.converter)));\n        return \"L\" /* Last */ === t._query.limitType && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new ur(t, r);\n    }));\n}\n\nfunction Fr(t, e, n) {\n    const r = Nr((t = ct(t, vn)).converter, e, n), s = Mn(Ln(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return sn(hn(t.firestore), [ s.toMutation(t._key, Ve.none()) ]);\n}\n\nfunction Sr(t, e, n, ...r) {\n    const s = Ln((t = ct(t, vn)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = l(e)) || e instanceof Nn ? Kn(s, \"updateDoc\", t._key, e, n, r) : Wn(s, \"updateDoc\", t._key, e);\n    return sn(hn(t.firestore), [ i.toMutation(t._key, Ve.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function qr(t) {\n    return sn(hn((t = ct(t, vn)).firestore), [ new xe(t._key, Ve.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Or(t, e) {\n    const n = An(t = ct(t, En)), r = Nr(t.converter, e), s = Mn(Ln(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return sn(hn(t.firestore), [ s.toMutation(n._key, Ve.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */ function kr(t) {\n    const e = ct(t.firestore, fn), n = hn(e), r = new $r(e);\n    return new gn(t, n, r).run();\n}\n\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */ function Cr(t, e) {\n    return Pn(t.query, e.query) && f(t.data(), e.data());\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function Lr() {\n    return new Un(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function Mr() {\n    return new Bn(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function Ur(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Qn(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function jr(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new zn(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function Br(t) {\n    return new Gn(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class Qr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Ln(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = zr(t, this._firestore), s = Nr(r.converter, e, n), i = Mn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, Ve.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = zr(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof Nn ? Kn(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : Wn(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, Ve.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = zr(t, this._firestore);\n        return this._mutations = this._mutations.concat(new xe(e._key, Ve.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction zr(t, e) {\n    if ((t = l(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function Gr(t) {\n    const e = hn(t = ct(t, fn));\n    return new Qr(t, (t => sn(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class Wr {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await on(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new xe(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = rt.fromPath(e);\n            this.mutations.push(new Fe(n, this.precondition(n)));\n        })), await sn(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw b();\n            // Represent a deleted doc using SnapshotVersion.min().\n            e = Et.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new U(q, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(Et.min()) ? Ve.exists(!1) : Ve.updateTime(e) : Ve.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(Et.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new U(P, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return Ve.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return Ve.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Kr = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass Yr {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, \n        this.deferred = s, this.Rt = n.maxAttempts, this.Pt = new nn(this.asyncQueue, \"transaction_retry\" /* TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.Rt -= 1, this.Vt();\n    }\n    Vt() {\n        this.Pt.J((async () => {\n            const t = new Wr(this.datastore), e = this.Nt(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.$t(t);\n                }))));\n            })).catch((t => {\n                this.$t(t);\n            }));\n        }));\n    }\n    Nt(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !ht(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    $t(t) {\n        this.Rt > 0 && this.Dt(t) ? (this.Rt -= 1, this.asyncQueue.enqueueAndForget((() => (this.Vt(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    Dt(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return b();\n\n                  case A:\n                  case R:\n                  case V:\n                  case F:\n                  case C:\n                  case L:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case x:\n                    return !1;\n\n                  case P:\n                  case N:\n                  case $:\n                  case D:\n                  case S:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case q:\n                  case O:\n                  case k:\n                  case M:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function Hr() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class Jr {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new j, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new Jr(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(A, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Xr {\n    constructor() {\n        // The last promise in the queue.\n        this.xt = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Ft = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.St = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.qt = [], \n        // visible for testing\n        this.Ot = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.kt = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.Ct = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Lt = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.Pt = new nn(this, \"async_queue_retry\" /* AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Mt = () => {\n            const t = Hr();\n            t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.Pt.Z();\n        };\n        const t = Hr();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Mt);\n    }\n    get isShuttingDown() {\n        return this.St;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.Ut(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.jt(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.St) {\n            this.St = !0, this.Ct = t || !1;\n            const e = Hr();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Mt);\n        }\n    }\n    enqueue(t) {\n        if (this.Ut(), this.St) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new j;\n        return this.jt((() => this.St && this.Ct ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Ft.push(t), this.Bt())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async Bt() {\n        if (0 !== this.Ft.length) {\n            try {\n                await this.Ft[0](), this.Ft.shift(), this.Pt.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                y(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Ft.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.Pt.J((() => this.Bt()));\n        }\n    }\n    jt(t) {\n        const e = this.xt.then((() => (this.kt = !0, t().catch((t => {\n            this.Ot = t, this.kt = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw _(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.kt = !1, t))))));\n        return this.xt = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.Ut(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Lt.indexOf(t) > -1 && (e = 0);\n        const r = Jr.createAndSchedule(this, t, e, n, (t => this.Qt(t)));\n        return this.qt.push(r), r;\n    }\n    Ut() {\n        this.Ot && b();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async zt() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.xt, await t;\n        } while (t !== this.xt);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    Gt(t) {\n        for (const e of this.qt) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Wt(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.zt().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.qt.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.qt) if (e.skipDelay(), \"all\" /* All */ !== t && e.timerId === t) break;\n            return this.zt();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Kt(t) {\n        this.Lt.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    Qt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.qt.indexOf(t);\n        this.qt.splice(e, 1);\n    }\n}\n\nclass Zr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Ln(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = zr(t, this._firestore), n = new $r(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return b();\n            const r = t[0];\n            if (r.isFoundDocument()) return new ir(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new ir(this._firestore, n, e._key, null, e.converter);\n            throw b();\n        }));\n    }\n    set(t, e, n) {\n        const r = zr(t, this._firestore), s = Nr(r.converter, e, n), i = Mn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = zr(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof Nn ? Kn(this._dataReader, \"Transaction.update\", s._key, e, n, r) : Wn(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = zr(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function ts(t, e, n) {\n    const r = hn(t = ct(t, fn)), s = Object.assign(Object.assign({}, Kr), n);\n    !function(t) {\n        if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n    }(s);\n    const i = new j;\n    return new Yr(new Xr, r, s, (n => e(new Zr(t, n))), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    w = t;\n}(`${s}_lite`), n(new i(\"firestore/lite\", ((t, {instanceIdentifier: e, options: n}) => {\n    const r = t.getProvider(\"app\").getImmediate(), s = new fn(new G(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function(t, e) {\n        if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n        return new X(t.options.projectId, e);\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (r, e), r);\n    return n && s._setSettings(n), s;\n}), \"PUBLIC\").setMultipleInstances(!0)), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nr(\"firestore-lite\", \"3.7.3\", \"\"), r(\"firestore-lite\", \"3.7.3\", \"__BUILD_TARGET__\");\n\nexport { yn as AggregateField, _n as AggregateQuerySnapshot, Vn as Bytes, En as CollectionReference, vn as DocumentReference, ir as DocumentSnapshot, Nn as FieldPath, Dn as FieldValue, fn as Firestore, U as FirestoreError, xn as GeoPoint, bn as Query, hr as QueryConstraint, or as QueryDocumentSnapshot, ur as QuerySnapshot, bt as Timestamp, Zr as Transaction, Qr as WriteBatch, Or as addDoc, Cr as aggregateQuerySnapshotEqual, jr as arrayRemove, Ur as arrayUnion, In as collection, Tn as collectionGroup, mn as connectFirestoreEmulator, qr as deleteDoc, Lr as deleteField, An as doc, $n as documentId, Tr as endAt, Ir as endBefore, kr as getCount, Dr as getDoc, xr as getDocs, wn as getFirestore, Br as increment, dn as initializeFirestore, yr as limit, _r as limitToLast, mr as orderBy, lr as query, Pn as queryEqual, Rn as refEqual, ts as runTransaction, Mr as serverTimestamp, Fr as setDoc, p as setLogLevel, cr as snapshotEqual, br as startAfter, vr as startAt, pn as terminate, Sr as updateDoc, dr as where, Gr as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}