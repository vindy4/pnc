{"ast":null,"code":"var _jsxFileName = \"/Users/vinayyadav/Movies/pnc/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nrequire('isomorphic-fetch');\nvar Dropbox = require('dropbox').Dropbox;\nconst accessToken = 'sl.BTM8p1hUryxLBE7t78zRbtqGQcxqXTXxED0-htBMWx8jYshBX0HCWmXPyqacpwtqwDkwHVazHw7AmMFVLxZpuXPEENcTC0Gekm7rkcaAVu7-Qij0sMqM6lpZUpp6VbQPSYdP_UDuVQEr';\nconst renderDropBoxList = async () => {\n  // Create an instance of Dropbox with the access token and use it to\n  // fetch and render the files in the users root directory.\n  var dbx = new Dropbox({\n    accessToken\n  });\n  const response = await dbx.filesListFolder({\n    path: '/amazon primevideo/movies'\n  });\n  return response.result.entries;\n};\nfunction App() {\n  _s();\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    renderDropBoxList().then(v => {\n      setList(v);\n      console.log(v);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"Dashboard\", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", item.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 14\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mo3wxvns+52yWT3GI5PbrxgLw68=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","require","Dropbox","accessToken","renderDropBoxList","dbx","response","filesListFolder","path","result","entries","App","list","setList","then","v","console","log","map","item","name"],"sources":["/Users/vinayyadav/Movies/pnc/src/App.js"],"sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\nrequire('isomorphic-fetch');\nvar Dropbox = require('dropbox').Dropbox;\nconst accessToken = 'sl.BTM8p1hUryxLBE7t78zRbtqGQcxqXTXxED0-htBMWx8jYshBX0HCWmXPyqacpwtqwDkwHVazHw7AmMFVLxZpuXPEENcTC0Gekm7rkcaAVu7-Qij0sMqM6lpZUpp6VbQPSYdP_UDuVQEr'\n\nconst renderDropBoxList = async ()=> {\n\n  // Create an instance of Dropbox with the access token and use it to\n  // fetch and render the files in the users root directory.\n  var dbx = new Dropbox({ accessToken });\n\n   const response = await dbx.filesListFolder({path: '/amazon primevideo/movies'})\n  \n   return response.result.entries;\n    \n}\n\n  function App () {\n    const [list,setList] = useState([])\n    \n    useEffect(() => {\n      renderDropBoxList().then((v) => {\n        setList(v);\n        console.log(v);\n      });\n    },[]);\n\n  return (\n    <div className=\"App\">\n        Dashboard\n    <ul>\n    {list.map( item => {\n      return <li> {item.name} </li>\n    } )}\n    </ul>\n\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAC5CC,OAAO,CAAC,kBAAkB,CAAC;AAC3B,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC,CAACC,OAAO;AACxC,MAAMC,WAAW,GAAG,iJAAiJ;AAErK,MAAMC,iBAAiB,GAAG,YAAW;EAEnC;EACA;EACA,IAAIC,GAAG,GAAG,IAAIH,OAAO,CAAC;IAAEC;EAAY,CAAC,CAAC;EAErC,MAAMG,QAAQ,GAAG,MAAMD,GAAG,CAACE,eAAe,CAAC;IAACC,IAAI,EAAE;EAA2B,CAAC,CAAC;EAE/E,OAAOF,QAAQ,CAACG,MAAM,CAACC,OAAO;AAEjC,CAAC;AAEC,SAASC,GAAG,GAAI;EAAA;EACd,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACdK,iBAAiB,EAAE,CAACU,IAAI,CAAEC,CAAC,IAAK;MAC9BF,OAAO,CAACE,CAAC,CAAC;MACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IAChB,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;EAEP,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,qCAEpB;MAAA,UACCH,IAAI,CAACM,GAAG,CAAEC,IAAI,IAAI;QACjB,oBAAO;UAAA,gBAAMA,IAAI,CAACC,IAAI;QAAA;UAAA;UAAA;UAAA;QAAA,QAAO;MAC/B,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QAGC;AAEV;AAAC,GAtBUT,GAAG;AAAA,KAAHA,GAAG;AAwBd,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}